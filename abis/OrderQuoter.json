{
  "abi": [
    {
      "inputs": [],
      "name": "OrdersLengthIncorrect",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "order",
          "type": "bytes"
        }
      ],
      "name": "getReactor",
      "outputs": [
        {
          "internalType": "contract IReactor",
          "name": "reactor",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "order",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        }
      ],
      "name": "quote",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "contract IReactor",
                  "name": "reactor",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "swapper",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IValidationCallback",
                  "name": "additionalValidationContract",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalValidationData",
                  "type": "bytes"
                }
              ],
              "internalType": "struct OrderInfo",
              "name": "info",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "contract ERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct InputToken",
              "name": "input",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct OutputToken[]",
              "name": "outputs",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ResolvedOrder",
          "name": "result",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "contract IReactor",
                  "name": "reactor",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "swapper",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IValidationCallback",
                  "name": "additionalValidationContract",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalValidationData",
                  "type": "bytes"
                }
              ],
              "internalType": "struct OrderInfo",
              "name": "info",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "contract ERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct InputToken",
              "name": "input",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct OutputToken[]",
              "name": "outputs",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ResolvedOrder[]",
          "name": "resolvedOrders",
          "type": "tuple[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "reactorCallback",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610df8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806341d88d6914610046578063585da6281461006f5780637671d07b14610084575b600080fd5b6100596100543660046104bb565b6100c5565b60405161006691906105f7565b60405180910390f35b61008261007d3660046108ec565b610221565b005b6100a0610092366004610a62565b604081810151909101015190565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610066565b6040805161016081018252600060a0820181815260c0830182905260e083018290526101008301829052610120830182905260606101408401819052908352835180820185528281526020808201849052818601849052840152928201839052828201929092526080810191909152604080840151840101516040805180820182528581526020808201869052825190810183526000815291517f0d33588400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9390931692630d335884926101af9291600401610a9f565b600060405180830381600087803b1580156101c957600080fd5b505af19250505080156101da575060015b61021b573d808015610208576040519150601f19603f3d011682016040523d82523d6000602084013e61020d565b606091505b50610217816102a2565b9150505b92915050565b815160011461025c576040517f06ee987800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008260008151811061027157610271610b13565b602002602001015160405160200161028991906105f7565b6040516020818303038152906040529050805181602001fd5b6040805161016081018252600060a0820181815260c080840183905260e08401839052610100840183905261012084018390526060610140850181905291845284518083018652838152602080820185905281870185905285015293830181905280830152608082015282519091111561031e57815182602001fd5b8180602001905181019061021b9190610cf0565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561038457610384610332565b60405290565b6040516060810167ffffffffffffffff8111828210171561038457610384610332565b60405160a0810167ffffffffffffffff8111828210171561038457610384610332565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561041757610417610332565b604052919050565b600067ffffffffffffffff82111561043957610439610332565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261047657600080fd5b81356104896104848261041f565b6103d0565b81815284602083860101111561049e57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156104ce57600080fd5b823567ffffffffffffffff808211156104e657600080fd5b6104f286838701610465565b9350602085013591508082111561050857600080fd5b5061051585828601610465565b9150509250929050565b60005b8381101561053a578181015183820152602001610522565b50506000910152565b6000815180845261055b81602086016020860161051f565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501945080840160005b838110156105ec578151805173ffffffffffffffffffffffffffffffffffffffff908116895284820151858a01526040918201511690880152606090960195908201906001016105a1565b509495945050505050565b602081526000825160e0602084015273ffffffffffffffffffffffffffffffffffffffff808251166101008501528060208301511661012085015260408201516101408501526060820151610160850152806080830151166101808501525060a0810151905060c06101a08401526106736101c0840182610543565b905060208401516106b16040850182805173ffffffffffffffffffffffffffffffffffffffff16825260208082015190830152604090810151910152565b5060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0808584030160a08601526106ec838361058d565b925060608601519150808584030160c08601525061070a8282610543565b915050608084015160e08401528091505092915050565b600067ffffffffffffffff82111561073b5761073b610332565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff8116811461076757600080fd5b50565b600060c0828403121561077c57600080fd5b610784610361565b9050813561079181610745565b815260208201356107a181610745565b80602083015250604082013560408201526060820135606082015260808201356107ca81610745565b608082015260a082013567ffffffffffffffff8111156107e957600080fd5b6107f584828501610465565b60a08301525092915050565b60006060828403121561081357600080fd5b61081b61038a565b9050813561082881610745565b80825250602082013560208201526040820135604082015292915050565b600082601f83011261085757600080fd5b8135602061086761048483610721565b8281526060928302850182019282820191908785111561088657600080fd5b8387015b858110156108df5781818a0312156108a25760008081fd5b6108aa61038a565b81356108b581610745565b815281860135868201526040808301356108ce81610745565b90820152845292840192810161088a565b5090979650505050505050565b600080604083850312156108ff57600080fd5b823567ffffffffffffffff8082111561091757600080fd5b818501915085601f83011261092b57600080fd5b8135602061093b61048483610721565b82815260059290921b8401810191818101908984111561095a57600080fd5b8286015b84811015610a4b578035868111156109765760008081fd5b870160e0818d037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0018113156109ac5760008081fd5b6109b46103ad565b86830135898111156109c65760008081fd5b6109d48f898387010161076a565b8252506109e48e60408501610801565b8782015260a0830135898111156109fb5760008081fd5b610a098f8983870101610846565b60408301525060c083013589811115610a225760008081fd5b610a308f8983870101610465565b6060830152509101356080820152835291830191830161095e565b509650508601359250508082111561050857600080fd5b600060208284031215610a7457600080fd5b813567ffffffffffffffff811115610a8b57600080fd5b610a9784828501610465565b949350505050565b6040815260008351604080840152610aba6080840182610543565b905060208501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0848303016060850152610af58282610543565b9150508281036020840152610b0a8185610543565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082601f830112610b5357600080fd5b8151610b616104848261041f565b818152846020838601011115610b7657600080fd5b610a9782602083016020870161051f565b600060c08284031215610b9957600080fd5b610ba1610361565b90508151610bae81610745565b81526020820151610bbe81610745565b8060208301525060408201516040820152606082015160608201526080820151610be781610745565b608082015260a082015167ffffffffffffffff811115610c0657600080fd5b6107f584828501610b42565b600060608284031215610c2457600080fd5b610c2c61038a565b90508151610c3981610745565b80825250602082015160208201526040820151604082015292915050565b600082601f830112610c6857600080fd5b81516020610c7861048483610721565b82815260609283028501820192828201919087851115610c9757600080fd5b8387015b858110156108df5781818a031215610cb35760008081fd5b610cbb61038a565b8151610cc681610745565b81528186015186820152604080830151610cdf81610745565b908201528452928401928101610c9b565b600060208284031215610d0257600080fd5b815167ffffffffffffffff80821115610d1a57600080fd5b9083019060e08286031215610d2e57600080fd5b610d366103ad565b825182811115610d4557600080fd5b610d5187828601610b87565b825250610d618660208501610c12565b6020820152608083015182811115610d7857600080fd5b610d8487828601610c57565b60408301525060a083015182811115610d9c57600080fd5b610da887828601610b42565b60608301525060c09290920151608083015250939250505056fea26469706673582212200f8bfac10e493298054283c6a1044fad50f6979a90490fcbe07d79ecea4c1f8964736f6c63430008130033",
    "sourceMap": "471:2381:50:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806341d88d6914610046578063585da6281461006f5780637671d07b14610084575b600080fd5b6100596100543660046104bb565b6100c5565b60405161006691906105f7565b60405180910390f35b61008261007d3660046108ec565b610221565b005b6100a0610092366004610a62565b604081810151909101015190565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610066565b6040805161016081018252600060a0820181815260c0830182905260e083018290526101008301829052610120830182905260606101408401819052908352835180820185528281526020808201849052818601849052840152928201839052828201929092526080810191909152604080840151840101516040805180820182528581526020808201869052825190810183526000815291517f0d33588400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9390931692630d335884926101af9291600401610a9f565b600060405180830381600087803b1580156101c957600080fd5b505af19250505080156101da575060015b61021b573d808015610208576040519150601f19603f3d011682016040523d82523d6000602084013e61020d565b606091505b50610217816102a2565b9150505b92915050565b815160011461025c576040517f06ee987800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008260008151811061027157610271610b13565b602002602001015160405160200161028991906105f7565b6040516020818303038152906040529050805181602001fd5b6040805161016081018252600060a0820181815260c080840183905260e08401839052610100840183905261012084018390526060610140850181905291845284518083018652838152602080820185905281870185905285015293830181905280830152608082015282519091111561031e57815182602001fd5b8180602001905181019061021b9190610cf0565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561038457610384610332565b60405290565b6040516060810167ffffffffffffffff8111828210171561038457610384610332565b60405160a0810167ffffffffffffffff8111828210171561038457610384610332565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561041757610417610332565b604052919050565b600067ffffffffffffffff82111561043957610439610332565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261047657600080fd5b81356104896104848261041f565b6103d0565b81815284602083860101111561049e57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156104ce57600080fd5b823567ffffffffffffffff808211156104e657600080fd5b6104f286838701610465565b9350602085013591508082111561050857600080fd5b5061051585828601610465565b9150509250929050565b60005b8381101561053a578181015183820152602001610522565b50506000910152565b6000815180845261055b81602086016020860161051f565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501945080840160005b838110156105ec578151805173ffffffffffffffffffffffffffffffffffffffff908116895284820151858a01526040918201511690880152606090960195908201906001016105a1565b509495945050505050565b602081526000825160e0602084015273ffffffffffffffffffffffffffffffffffffffff808251166101008501528060208301511661012085015260408201516101408501526060820151610160850152806080830151166101808501525060a0810151905060c06101a08401526106736101c0840182610543565b905060208401516106b16040850182805173ffffffffffffffffffffffffffffffffffffffff16825260208082015190830152604090810151910152565b5060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0808584030160a08601526106ec838361058d565b925060608601519150808584030160c08601525061070a8282610543565b915050608084015160e08401528091505092915050565b600067ffffffffffffffff82111561073b5761073b610332565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff8116811461076757600080fd5b50565b600060c0828403121561077c57600080fd5b610784610361565b9050813561079181610745565b815260208201356107a181610745565b80602083015250604082013560408201526060820135606082015260808201356107ca81610745565b608082015260a082013567ffffffffffffffff8111156107e957600080fd5b6107f584828501610465565b60a08301525092915050565b60006060828403121561081357600080fd5b61081b61038a565b9050813561082881610745565b80825250602082013560208201526040820135604082015292915050565b600082601f83011261085757600080fd5b8135602061086761048483610721565b8281526060928302850182019282820191908785111561088657600080fd5b8387015b858110156108df5781818a0312156108a25760008081fd5b6108aa61038a565b81356108b581610745565b815281860135868201526040808301356108ce81610745565b90820152845292840192810161088a565b5090979650505050505050565b600080604083850312156108ff57600080fd5b823567ffffffffffffffff8082111561091757600080fd5b818501915085601f83011261092b57600080fd5b8135602061093b61048483610721565b82815260059290921b8401810191818101908984111561095a57600080fd5b8286015b84811015610a4b578035868111156109765760008081fd5b870160e0818d037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0018113156109ac5760008081fd5b6109b46103ad565b86830135898111156109c65760008081fd5b6109d48f898387010161076a565b8252506109e48e60408501610801565b8782015260a0830135898111156109fb5760008081fd5b610a098f8983870101610846565b60408301525060c083013589811115610a225760008081fd5b610a308f8983870101610465565b6060830152509101356080820152835291830191830161095e565b509650508601359250508082111561050857600080fd5b600060208284031215610a7457600080fd5b813567ffffffffffffffff811115610a8b57600080fd5b610a9784828501610465565b949350505050565b6040815260008351604080840152610aba6080840182610543565b905060208501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0848303016060850152610af58282610543565b9150508281036020840152610b0a8185610543565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082601f830112610b5357600080fd5b8151610b616104848261041f565b818152846020838601011115610b7657600080fd5b610a9782602083016020870161051f565b600060c08284031215610b9957600080fd5b610ba1610361565b90508151610bae81610745565b81526020820151610bbe81610745565b8060208301525060408201516040820152606082015160608201526080820151610be781610745565b608082015260a082015167ffffffffffffffff811115610c0657600080fd5b6107f584828501610b42565b600060608284031215610c2457600080fd5b610c2c61038a565b90508151610c3981610745565b80825250602082015160208201526040820151604082015292915050565b600082601f830112610c6857600080fd5b81516020610c7861048483610721565b82815260609283028501820192828201919087851115610c9757600080fd5b8387015b858110156108df5781818a031215610cb35760008081fd5b610cbb61038a565b8151610cc681610745565b81528186015186820152604080830151610cdf81610745565b908201528452928401928101610c9b565b600060208284031215610d0257600080fd5b815167ffffffffffffffff80821115610d1a57600080fd5b9083019060e08286031215610d2e57600080fd5b610d366103ad565b825182811115610d4557600080fd5b610d5187828601610b87565b825250610d618660208501610c12565b6020820152608083015182811115610d7857600080fd5b610d8487828601610c57565b60408301525060a083015182811115610d9c57600080fd5b610da887828601610b42565b60608301525060c09290920151608083015250939250505056fea26469706673582212200f8bfac10e493298054283c6a1044fad50f6979a90490fcbe07d79ecea4c1f8964736f6c63430008130033",
    "sourceMap": "471:2381:50:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1096:302;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2517:333;;;;;;:::i;:::-;;:::i;:::-;;1596:276;;;;;;:::i;:::-;1749:17;1738:29;;;1825;1797:58;;;;1791:65;;1596:276;;;;11826:42:101;11814:55;;;11796:74;;11784:2;11769:18;1596:276:50;11632:244:101;1096:302:50;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1749:17:50;1738:29;;;1825;1797:58;;;1791:65;1258:23;;;;;;;;;;;;;;;;;;1283:9;;;;;;;-1:-1:-1;1283:9:50;;1210:83;;;;;:47;;;;;;;;:83;;1258:23;1210:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1206:186;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1356:25;1374:6;1356:17;:25::i;:::-;1347:34;;1305:87;1206:186;1096:302;;;;:::o;2517:333::-;2623:14;:21;2648:1;2623:26;2619:87;;2672:23;;;;;;;;;;;;;;2619:87;2715:18;2747:14;2762:1;2747:17;;;;;;;;:::i;:::-;;;;;;;2736:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;2715:50;;2827:5;2821:12;2813:5;2809:2;2805:14;2798:36;2049:315;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2161:13:50;;-1:-1:-1;;;2157:201:50;;;2253:6;2247:13;2238:6;2234:2;2230:15;2223:38;2157:201;2323:6;2312:35;;;;;;;;;;;;:::i;14:184:101:-;66:77;63:1;56:88;163:4;160:1;153:15;187:4;184:1;177:15;203:253;275:2;269:9;317:4;305:17;;352:18;337:34;;373:22;;;334:62;331:88;;;399:18;;:::i;:::-;435:2;428:22;203:253;:::o;461:::-;533:2;527:9;575:4;563:17;;610:18;595:34;;631:22;;;592:62;589:88;;;657:18;;:::i;719:253::-;791:2;785:9;833:4;821:17;;868:18;853:34;;889:22;;;850:62;847:88;;;915:18;;:::i;977:334::-;1048:2;1042:9;1104:2;1094:13;;1109:66;1090:86;1078:99;;1207:18;1192:34;;1228:22;;;1189:62;1186:88;;;1254:18;;:::i;:::-;1290:2;1283:22;977:334;;-1:-1:-1;977:334:101:o;1316:245::-;1364:4;1397:18;1389:6;1386:30;1383:56;;;1419:18;;:::i;:::-;-1:-1:-1;1476:2:101;1464:15;1481:66;1460:88;1550:4;1456:99;;1316:245::o;1566:462::-;1608:5;1661:3;1654:4;1646:6;1642:17;1638:27;1628:55;;1679:1;1676;1669:12;1628:55;1715:6;1702:20;1746:48;1762:31;1790:2;1762:31;:::i;:::-;1746:48;:::i;:::-;1819:2;1810:7;1803:19;1865:3;1858:4;1853:2;1845:6;1841:15;1837:26;1834:35;1831:55;;;1882:1;1879;1872:12;1831:55;1947:2;1940:4;1932:6;1928:17;1921:4;1912:7;1908:18;1895:55;1995:1;1970:16;;;1988:4;1966:27;1959:38;;;;1974:7;1566:462;-1:-1:-1;;;1566:462:101:o;2033:539::-;2119:6;2127;2180:2;2168:9;2159:7;2155:23;2151:32;2148:52;;;2196:1;2193;2186:12;2148:52;2236:9;2223:23;2265:18;2306:2;2298:6;2295:14;2292:34;;;2322:1;2319;2312:12;2292:34;2345:49;2386:7;2377:6;2366:9;2362:22;2345:49;:::i;:::-;2335:59;;2447:2;2436:9;2432:18;2419:32;2403:48;;2476:2;2466:8;2463:16;2460:36;;;2492:1;2489;2482:12;2460:36;;2515:51;2558:7;2547:8;2536:9;2532:24;2515:51;:::i;:::-;2505:61;;;2033:539;;;;;:::o;2577:250::-;2662:1;2672:113;2686:6;2683:1;2680:13;2672:113;;;2762:11;;;2756:18;2743:11;;;2736:39;2708:2;2701:10;2672:113;;;-1:-1:-1;;2819:1:101;2801:16;;2794:27;2577:250::o;2832:329::-;2873:3;2911:5;2905:12;2938:6;2933:3;2926:19;2954:76;3023:6;3016:4;3011:3;3007:14;3000:4;2993:5;2989:16;2954:76;:::i;:::-;3075:2;3063:15;3080:66;3059:88;3050:98;;;;3150:4;3046:109;;2832:329;-1:-1:-1;;2832:329:101:o;3427:696::-;3491:3;3529:5;3523:12;3556:6;3551:3;3544:19;3582:4;3611:2;3606:3;3602:12;3595:19;;3648:2;3641:5;3637:14;3669:1;3679:419;3693:6;3690:1;3687:13;3679:419;;;3752:13;;3859:9;;3788:42;3855:18;;;3843:31;;3914:11;;;3908:18;3894:12;;;3887:40;3950:4;3998:11;;;3992:18;3988:27;3974:12;;;3967:49;4045:4;4036:14;;;;4073:15;;;;3715:1;3708:9;3679:419;;;-1:-1:-1;4114:3:101;;3427:696;-1:-1:-1;;;;;3427:696:101:o;4128:1568::-;4321:2;4310:9;4303:21;4284:4;4359:6;4353:13;4402:4;4397:2;4386:9;4382:18;4375:32;4426:42;4530:2;4515:12;4509:19;4505:28;4499:3;4488:9;4484:19;4477:57;4605:2;4599;4585:12;4581:21;4575:28;4571:37;4565:3;4554:9;4550:19;4543:66;4670:4;4656:12;4652:23;4646:30;4640:3;4629:9;4625:19;4618:59;4738:4;4724:12;4720:23;4714:30;4708:3;4697:9;4693:19;4686:59;4818:2;4810:4;4796:12;4792:23;4786:30;4782:39;4776:3;4765:9;4761:19;4754:68;;4877:4;4863:12;4859:23;4853:30;4831:52;;4920:4;4914:3;4903:9;4899:19;4892:33;4945:53;4993:3;4982:9;4978:19;4962:14;4945:53;:::i;:::-;4934:64;;5047:2;5039:6;5035:15;5029:22;5060:66;5120:4;5109:9;5105:20;5089:14;3246:12;;3260:42;3242:61;3230:74;;3353:4;3342:16;;;3336:23;3320:14;;;3313:47;3409:4;3398:16;;;3392:23;3376:14;;3369:47;3166:256;5060:66;;5175:4;5167:6;5163:17;5157:24;5200:66;5329:2;5317:9;5312:3;5308:19;5304:28;5297:4;5286:9;5282:20;5275:58;5356:60;5412:3;5396:14;5356:60;:::i;:::-;5342:74;;5465:4;5457:6;5453:17;5447:24;5425:46;;5537:2;5525:9;5517:6;5513:22;5509:31;5502:4;5491:9;5487:20;5480:61;;5564:40;5597:6;5581:14;5564:40;:::i;:::-;5550:54;;;5660:4;5652:6;5648:17;5642:24;5635:4;5624:9;5620:20;5613:54;5684:6;5676:14;;;4128:1568;;;;:::o;5701:196::-;5774:4;5807:18;5799:6;5796:30;5793:56;;;5829:18;;:::i;:::-;-1:-1:-1;5874:1:101;5870:14;5886:4;5866:25;;5701:196::o;5902:164::-;5998:42;5991:5;5987:54;5980:5;5977:65;5967:93;;6056:1;6053;6046:12;5967:93;5902:164;:::o;6071:924::-;6127:5;6175:4;6163:9;6158:3;6154:19;6150:30;6147:50;;;6193:1;6190;6183:12;6147:50;6215:22;;:::i;:::-;6206:31;;6274:9;6261:23;6293:43;6328:7;6293:43;:::i;:::-;6345:22;;6419:2;6404:18;;6391:32;6432:43;6391:32;6432:43;:::i;:::-;6507:7;6502:2;6495:5;6491:14;6484:31;;6575:2;6564:9;6560:18;6547:32;6542:2;6535:5;6531:14;6524:56;6640:2;6629:9;6625:18;6612:32;6607:2;6600:5;6596:14;6589:56;6697:3;6686:9;6682:19;6669:33;6711:43;6746:7;6711:43;:::i;:::-;6781:3;6770:15;;6763:32;6846:3;6831:19;;6818:33;6874:18;6863:30;;6860:50;;;6906:1;6903;6896:12;6860:50;6943:45;6984:3;6975:6;6964:9;6960:22;6943:45;:::i;:::-;6937:3;6930:5;6926:15;6919:70;;6071:924;;;;:::o;7000:433::-;7057:5;7105:4;7093:9;7088:3;7084:19;7080:30;7077:50;;;7123:1;7120;7113:12;7077:50;7145:22;;:::i;:::-;7136:31;;7204:9;7191:23;7223:43;7258:7;7223:43;:::i;:::-;7289:7;7282:5;7275:22;;7357:2;7346:9;7342:18;7329:32;7324:2;7317:5;7313:14;7306:56;7422:2;7411:9;7407:18;7394:32;7389:2;7382:5;7378:14;7371:56;7000:433;;;;:::o;7438:1249::-;7503:5;7556:3;7549:4;7541:6;7537:17;7533:27;7523:55;;7574:1;7571;7564:12;7523:55;7610:6;7597:20;7636:4;7660:73;7676:56;7729:2;7676:56;:::i;7660:73::-;7767:15;;;7829:4;7872:11;;;7860:24;;7856:33;;;7798:12;;;;7755:3;7901:15;;;7898:35;;;7929:1;7926;7919:12;7898:35;7965:2;7957:6;7953:15;7977:681;7993:6;7988:3;7985:15;7977:681;;;8069:2;8063:3;8058;8054:13;8050:22;8047:112;;;8113:1;8142:2;8138;8131:14;8047:112;8185:22;;:::i;:::-;8248:3;8235:17;8265:43;8300:7;8265:43;:::i;:::-;8321:22;;8392:12;;;8379:26;8363:14;;;8356:50;8429:2;8472:12;;;8459:26;8498:43;8459:26;8498:43;:::i;:::-;8561:14;;;8554:31;8598:18;;8636:12;;;;8010;;7977:681;;;-1:-1:-1;8676:5:101;;7438:1249;-1:-1:-1;;;;;;;7438:1249:101:o;8692:2610::-;8826:6;8834;8887:2;8875:9;8866:7;8862:23;8858:32;8855:52;;;8903:1;8900;8893:12;8855:52;8943:9;8930:23;8972:18;9013:2;9005:6;9002:14;8999:34;;;9029:1;9026;9019:12;8999:34;9067:6;9056:9;9052:22;9042:32;;9112:7;9105:4;9101:2;9097:13;9093:27;9083:55;;9134:1;9131;9124:12;9083:55;9170:2;9157:16;9192:4;9216:73;9232:56;9285:2;9232:56;:::i;9216:73::-;9323:15;;;9405:1;9401:10;;;;9393:19;;9389:28;;;9354:12;;;;9429:19;;;9426:39;;;9461:1;9458;9451:12;9426:39;9493:2;9489;9485:11;9505:1595;9521:6;9516:3;9513:15;9505:1595;;;9607:3;9594:17;9643:2;9630:11;9627:19;9624:109;;;9687:1;9716:2;9712;9705:14;9624:109;9756:20;;9799:4;9827:16;;;9845:66;9823:89;9819:98;-1:-1:-1;9816:188:101;;;9958:1;9987:2;9983;9976:14;9816:188;10030:22;;:::i;:::-;10102:2;10098;10094:11;10081:25;10135:2;10125:8;10122:16;10119:106;;;10179:1;10208:2;10204;10197:14;10119:106;10252:64;10308:7;10303:2;10292:8;10288:2;10284:17;10280:26;10252:64;:::i;:::-;10245:5;10238:79;;10353:50;10395:7;10390:2;10386;10382:11;10353:50;:::i;:::-;10348:2;10341:5;10337:14;10330:74;10454:4;10450:2;10446:13;10433:27;10489:2;10479:8;10476:16;10473:109;;;10534:1;10564:3;10559;10552:16;10473:109;10618:76;10686:7;10681:2;10670:8;10666:2;10662:17;10658:26;10618:76;:::i;:::-;10613:2;10606:5;10602:14;10595:100;;10745:3;10741:2;10737:12;10724:26;10779:2;10769:8;10766:16;10763:109;;;10824:1;10854:3;10849;10842:16;10763:109;10910:53;10955:7;10950:2;10939:8;10935:2;10931:17;10927:26;10910:53;:::i;:::-;10903:4;10892:16;;10885:79;-1:-1:-1;11014:11:101;;11001:25;10995:3;10984:15;;10977:50;11040:18;;11078:12;;;;9538;;9505:1595;;;-1:-1:-1;11119:5:101;-1:-1:-1;;11162:18:101;;11149:32;;-1:-1:-1;;11193:16:101;;;11190:36;;;11222:1;11219;11212:12;11307:320;11375:6;11428:2;11416:9;11407:7;11403:23;11399:32;11396:52;;;11444:1;11441;11434:12;11396:52;11484:9;11471:23;11517:18;11509:6;11506:30;11503:50;;;11549:1;11546;11539:12;11503:50;11572:49;11613:7;11604:6;11593:9;11589:22;11572:49;:::i;:::-;11562:59;11307:320;-1:-1:-1;;;;11307:320:101:o;11881:750::-;12116:2;12105:9;12098:21;12079:4;12154:6;12148:13;12197:2;12192;12181:9;12177:18;12170:30;12223:51;12269:3;12258:9;12254:19;12240:12;12223:51;:::i;:::-;12209:65;;12323:4;12315:6;12311:17;12305:24;12393:66;12381:9;12373:6;12369:22;12365:95;12360:2;12349:9;12345:18;12338:123;12481:40;12514:6;12498:14;12481:40;:::i;:::-;12470:51;;;12568:9;12563:3;12559:19;12552:4;12541:9;12537:20;12530:49;12596:29;12621:3;12613:6;12596:29;:::i;:::-;12588:37;11881:750;-1:-1:-1;;;;;11881:750:101:o;12636:184::-;12688:77;12685:1;12678:88;12785:4;12782:1;12775:15;12809:4;12806:1;12799:15;12825:441;12878:5;12931:3;12924:4;12916:6;12912:17;12908:27;12898:55;;12949:1;12946;12939:12;12898:55;12978:6;12972:13;13009:48;13025:31;13053:2;13025:31;:::i;13009:48::-;13082:2;13073:7;13066:19;13128:3;13121:4;13116:2;13108:6;13104:15;13100:26;13097:35;13094:55;;;13145:1;13142;13135:12;13094:55;13158:77;13232:2;13225:4;13216:7;13212:18;13205:4;13197:6;13193:17;13158:77;:::i;13271:904::-;13338:5;13386:4;13374:9;13369:3;13365:19;13361:30;13358:50;;;13404:1;13401;13394:12;13358:50;13426:22;;:::i;:::-;13417:31;;13478:9;13472:16;13497:43;13532:7;13497:43;:::i;:::-;13549:22;;13616:2;13601:18;;13595:25;13629:43;13595:25;13629:43;:::i;:::-;13704:7;13699:2;13692:5;13688:14;13681:31;;13765:2;13754:9;13750:18;13744:25;13739:2;13732:5;13728:14;13721:49;13823:2;13812:9;13808:18;13802:25;13797:2;13790:5;13786:14;13779:49;13873:3;13862:9;13858:19;13852:26;13887:43;13922:7;13887:43;:::i;:::-;13957:3;13946:15;;13939:32;14015:3;14000:19;;13994:26;14043:18;14032:30;;14029:50;;;14075:1;14072;14065:12;14029:50;14112:56;14164:3;14155:6;14144:9;14140:22;14112:56;:::i;14180:423::-;14248:5;14296:4;14284:9;14279:3;14275:19;14271:30;14268:50;;;14314:1;14311;14304:12;14268:50;14336:22;;:::i;:::-;14327:31;;14388:9;14382:16;14407:43;14442:7;14407:43;:::i;:::-;14473:7;14466:5;14459:22;;14534:2;14523:9;14519:18;14513:25;14508:2;14501:5;14497:14;14490:49;14592:2;14581:9;14577:18;14571:25;14566:2;14559:5;14555:14;14548:49;14180:423;;;;:::o;14608:1232::-;14684:5;14737:3;14730:4;14722:6;14718:17;14714:27;14704:55;;14755:1;14752;14745:12;14704:55;14784:6;14778:13;14810:4;14834:73;14850:56;14903:2;14850:56;:::i;14834:73::-;14941:15;;;15003:4;15046:11;;;15034:24;;15030:33;;;14972:12;;;;14929:3;15075:15;;;15072:35;;;15103:1;15100;15093:12;15072:35;15139:2;15131:6;15127:15;15151:660;15167:6;15162:3;15159:15;15151:660;;;15243:2;15237:3;15232;15228:13;15224:22;15221:112;;;15287:1;15316:2;15312;15305:14;15221:112;15359:22;;:::i;:::-;15415:3;15409:10;15432:43;15467:7;15432:43;:::i;:::-;15488:22;;15552:12;;;15546:19;15530:14;;;15523:43;15589:2;15625:12;;;15619:19;15651:43;15619:19;15651:43;:::i;:::-;15714:14;;;15707:31;15751:18;;15789:12;;;;15184;;15151:660;;15845:1163;15947:6;16000:2;15988:9;15979:7;15975:23;15971:32;15968:52;;;16016:1;16013;16006:12;15968:52;16049:9;16043:16;16078:18;16119:2;16111:6;16108:14;16105:34;;;16135:1;16132;16125:12;16105:34;16158:22;;;;16214:4;16196:16;;;16192:27;16189:47;;;16232:1;16229;16222:12;16189:47;16258:22;;:::i;:::-;16311:2;16305:9;16339:2;16329:8;16326:16;16323:36;;;16355:1;16352;16345:12;16323:36;16382:66;16440:7;16429:8;16425:2;16421:17;16382:66;:::i;:::-;16375:5;16368:81;;16481:61;16534:7;16529:2;16525;16521:11;16481:61;:::i;:::-;16476:2;16469:5;16465:14;16458:85;16582:3;16578:2;16574:12;16568:19;16612:2;16602:8;16599:16;16596:36;;;16628:1;16625;16618:12;16596:36;16666:78;16736:7;16725:8;16721:2;16717:17;16666:78;:::i;:::-;16659:4;16652:5;16648:16;16641:104;;16784:4;16780:2;16776:13;16770:20;16815:2;16805:8;16802:16;16799:36;;;16831:1;16828;16821:12;16799:36;16869:55;16916:7;16905:8;16901:2;16897:17;16869:55;:::i;:::-;16862:4;16851:16;;16844:81;-1:-1:-1;16972:3:101;16964:12;;;;16958:19;16952:3;16941:15;;16934:44;-1:-1:-1;16855:5:101;15845:1163;-1:-1:-1;;;15845:1163:101:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getReactor(bytes)": "7671d07b",
    "quote(bytes,bytes)": "41d88d69",
    "reactorCallback(((address,address,uint256,uint256,address,bytes),(address,uint256,uint256),(address,uint256,address)[],bytes,bytes32)[],bytes)": "585da628"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OrdersLengthIncorrect\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"}],\"name\":\"getReactor\",\"outputs\":[{\"internalType\":\"contract IReactor\",\"name\":\"reactor\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"quote\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IReactor\",\"name\":\"reactor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"contract IValidationCallback\",\"name\":\"additionalValidationContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"additionalValidationData\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderInfo\",\"name\":\"info\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct InputToken\",\"name\":\"input\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct OutputToken[]\",\"name\":\"outputs\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct ResolvedOrder\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IReactor\",\"name\":\"reactor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"contract IValidationCallback\",\"name\":\"additionalValidationContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"additionalValidationData\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderInfo\",\"name\":\"info\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct InputToken\",\"name\":\"input\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct OutputToken[]\",\"name\":\"outputs\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct ResolvedOrder[]\",\"name\":\"resolvedOrders\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"reactorCallback\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"note this is meant to be used as an off-chain lens contract to pre-validate generic orders\",\"kind\":\"dev\",\"methods\":{\"getReactor(bytes)\":{\"params\":{\"order\":\"abi-encoded order, including `reactor` as the first encoded struct member\"},\"returns\":{\"reactor\":\"reactor\"}},\"quote(bytes,bytes)\":{\"params\":{\"order\":\"abi-encoded order, including `reactor` as the first encoded struct member\",\"sig\":\"The order signature\"},\"returns\":{\"result\":\"The ResolvedOrder\"}},\"reactorCallback(((address,address,uint256,uint256,address,bytes),(address,uint256,uint256),(address,uint256,address)[],bytes,bytes32)[],bytes)\":{\"details\":\"reverts with the resolved order as reason\",\"params\":{\"resolvedOrders\":\"The resolved orders\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"OrdersLengthIncorrect()\":[{\"notice\":\"thrown if reactorCallback receives more than one order\"}]},\"kind\":\"user\",\"methods\":{\"getReactor(bytes)\":{\"notice\":\"Return the reactor of a given order (abi.encoded bytes).\"},\"quote(bytes,bytes)\":{\"notice\":\"Quote the given order, returning the ResolvedOrder object which defines the current input and output token amounts required to satisfy it Also bubbles up any reverts that would occur during the processing of the order\"},\"reactorCallback(((address,address,uint256,uint256,address,bytes),(address,uint256,uint256),(address,uint256,address)[],bytes,bytes32)[],bytes)\":{\"notice\":\"Reactor callback function\"}},\"notice\":\"Quoter contract for orders\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lens/OrderQuoter.sol\":\"OrderQuoter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/\",\":solmate/=lib/solmate/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/permit2/src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x78931704a7f1d89ef24244b155863abb751cc3b3818f64303ccb47a396d48dcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8d6e198ee29d809564f1c1d7caa11a2c329bb5d051f61210548e546493444d2\",\"dweb:/ipfs/QmVxWftbgETjudymgLdwF77S54DWrp6qB5ooauKXW81cm7\"]},\"lib/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xea70db68ce450ad38dfbd490058595441144808eb95272ae9b89e3fbe6456954\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fad9ff319665acdc2f1295bb82db3e5b4d52babc0b58f147dbdbb9f322c6e5\",\"dweb:/ipfs/QmTbYJPcux8eJ3qGVYQh6TiwCA2FPu6HXTUg6QFTnX91Ks\"]},\"lib/permit2/src/interfaces/IPermit2.sol\":{\"keccak256\":\"0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d\",\"dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96\"]},\"lib/permit2/src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0x6805563eaad92471fa1b3591a71d7020a93e59f1a4ac95398daf74927f5bd033\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48cd13806cb8e82dcc38eb93423a372fbdd3b05364ecebb8bfd9cd29078dd90c\",\"dweb:/ipfs/QmeLyFVrzKRHcm6aaFFBCG5mFESCqWLp1KYT41H8XhzMCp\"]},\"lib/solmate/src/auth/Owned.sol\":{\"keccak256\":\"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4\",\"dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x6ab948013c2c7ca6351e593600425b0ec6df9035320280c678e735bce16e996b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2ab977d0eeb2bf458f9798250215c646d2f3b1f90b5a7e2b506fdf3335c0f060\",\"dweb:/ipfs/QmYPRoPhNtBAmCSq7imN1scMVpKNQvMTpoqab3tXUx5Tnv\"]},\"src/base/ProtocolFees.sol\":{\"keccak256\":\"0xa6a8588465e1e10db4b85385280b3678ed69ea33d4c740cd54480859cb8c425d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f281c905d6b2114f52136f3b79e0e4ffabbeae2423f6a680a960229a191b2179\",\"dweb:/ipfs/QmWeNkB8r7NaSjPeVoLRQN5fM9pxL3kxERnHjL8RUdgr23\"]},\"src/base/ReactorEvents.sol\":{\"keccak256\":\"0x4e4396c7728ddc1df2547ac4eff9d69479fa1adb3e88356ee7a2b320159add62\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d9d3be49c5bceea7db4cdf87ae83ce6aa75dc15cb01e2c5eb859b458e8f36541\",\"dweb:/ipfs/QmbDZRmZdRC48FCLGYo7EDf5frqGrKof8oNJmgQtsG4ix8\"]},\"src/base/ReactorStructs.sol\":{\"keccak256\":\"0x78e6db322ca69aaf552e59d5e74a00fd465a802388c2d03f9bf4b711f5704588\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://12d8fc82c3543bfe0d2cd44cdbc524bed1f074abafe086f7e58573cbaff2a74e\",\"dweb:/ipfs/QmREbamTn3nz89nEjv2uWHNHKSF6Yga2gQ688Cde89xcNT\"]},\"src/interfaces/IProtocolFeeController.sol\":{\"keccak256\":\"0x21a895ff5b778abf95753001a20b4004adfadd1bba622eaec18eb81836ede86c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://67f9eae1da9f238f6630247882e382458dcc0135c0a4837b99a44a2360a3845c\",\"dweb:/ipfs/QmdJyKhVyD6nAtgdTofaU2xaoWrPGM1Q6Sd7FiN2LxXZQx\"]},\"src/interfaces/IReactor.sol\":{\"keccak256\":\"0x50bbe3534eedf1ebb75b164c38fa63135ef53f7239a2c268008375025eb1f101\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0061477bbe13910c973b3760c061fd68836ecbe7e4c1b1d704bcaf38c669f9b0\",\"dweb:/ipfs/QmNhehD2Uw7uuCFTmgcE134kMmioRzVk9GUFWmBqLD9whX\"]},\"src/interfaces/IReactorCallback.sol\":{\"keccak256\":\"0xf3ee1fe09545fc5be000c33bb6779e897b4e5013bd9de3e7c3107bf466b4dfa1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://12d7fd1ac3dca76614796f0d012ea4de79bf09cf124cc74efffdf25a56756344\",\"dweb:/ipfs/QmXyeSrG7caihgzUZdPdPbbRj6v1w65gBnfn9a7HhbVJX9\"]},\"src/interfaces/IValidationCallback.sol\":{\"keccak256\":\"0xe68fc4f5a2a5029e7f1881d01f5434acbcf0fef2e7ae1945593e01f5414a841e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b53ec74b51802cf75aa32c619da5ce7571ff22d305cb599ac3029ef840319d5b\",\"dweb:/ipfs/QmZjiFHQxv9BqMPSk2u4nF9hrwgmPCW3x5TUaXcK1J2bwj\"]},\"src/lens/OrderQuoter.sol\":{\"keccak256\":\"0x4c0b420487f65bafb5b6829efd7bfd96cda1cd44ef9db0e17bcd274357bf8d58\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3da7da803567b63425540cd93fc3d5ce46d192610b0de242fb4ebbba13602953\",\"dweb:/ipfs/Qma2AdbWYjKjWX4bAUxo1gxX26RDNXWJ9MDQBbzYbkE8fk\"]},\"src/lib/CurrencyLibrary.sol\":{\"keccak256\":\"0x2ab6030f590607359825ae18d350850569d26d9d11a91a3e76cd2c4a966c90a6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e9cd60d9e22fe259023f9a25821f9edfa89d1a7a39e0e5517ff052dbff4f6fa3\",\"dweb:/ipfs/QmX5rnLjHWpokvQJzEWmX4eXYirVcv2Y6QsVAXsD3ap5Wq\"]},\"src/lib/ResolvedOrderLib.sol\":{\"keccak256\":\"0x5066dd0888221a2ba0abbab1beb0f63df1de941d0433c1a033a40c778de2680d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://59cd1e1c06467fb3ce957efb04abf0c19b43eb340f96eb36eee0496f6c5c6d08\",\"dweb:/ipfs/QmQLPiyyLvxPd4tHpDezMAkDY2qjy8BBH1sx6pVzaW8utA\"]},\"src/reactors/BaseReactor.sol\":{\"keccak256\":\"0x0433e77626bd56e2121effe738b1c665d920cee43a60b8864642586ffdeb7878\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://81a5553ba6a29f12abb9137d5762d9457b4ec93c744fe1e4e58c173732050142\",\"dweb:/ipfs/QmYKN4BgmBWbMPcaxqBkYNUPACMgKfANHif7BSYFt1f5qF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "OrdersLengthIncorrect"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getReactor",
          "outputs": [
            {
              "internalType": "contract IReactor",
              "name": "reactor",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "quote",
          "outputs": [
            {
              "internalType": "struct ResolvedOrder",
              "name": "result",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OrderInfo",
                  "name": "info",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IReactor",
                      "name": "reactor",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "swapper",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "contract IValidationCallback",
                      "name": "additionalValidationContract",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "additionalValidationData",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct InputToken",
                  "name": "input",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract ERC20",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAmount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct OutputToken[]",
                  "name": "outputs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ResolvedOrder[]",
              "name": "resolvedOrders",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct OrderInfo",
                  "name": "info",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IReactor",
                      "name": "reactor",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "swapper",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "contract IValidationCallback",
                      "name": "additionalValidationContract",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "additionalValidationData",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct InputToken",
                  "name": "input",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract ERC20",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAmount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct OutputToken[]",
                  "name": "outputs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "reactorCallback"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getReactor(bytes)": {
            "params": {
              "order": "abi-encoded order, including `reactor` as the first encoded struct member"
            },
            "returns": {
              "reactor": "reactor"
            }
          },
          "quote(bytes,bytes)": {
            "params": {
              "order": "abi-encoded order, including `reactor` as the first encoded struct member",
              "sig": "The order signature"
            },
            "returns": {
              "result": "The ResolvedOrder"
            }
          },
          "reactorCallback(((address,address,uint256,uint256,address,bytes),(address,uint256,uint256),(address,uint256,address)[],bytes,bytes32)[],bytes)": {
            "details": "reverts with the resolved order as reason",
            "params": {
              "resolvedOrders": "The resolved orders"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getReactor(bytes)": {
            "notice": "Return the reactor of a given order (abi.encoded bytes)."
          },
          "quote(bytes,bytes)": {
            "notice": "Quote the given order, returning the ResolvedOrder object which defines the current input and output token amounts required to satisfy it Also bubbles up any reverts that would occur during the processing of the order"
          },
          "reactorCallback(((address,address,uint256,uint256,address,bytes),(address,uint256,uint256),(address,uint256,address)[],bytes,bytes32)[],bytes)": {
            "notice": "Reactor callback function"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":permit2/=lib/permit2/",
        ":solmate/=lib/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/lens/OrderQuoter.sol": "OrderQuoter"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
        "urls": [
          "bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
          "dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IAllowanceTransfer.sol": {
        "keccak256": "0x78931704a7f1d89ef24244b155863abb751cc3b3818f64303ccb47a396d48dcb",
        "urls": [
          "bzz-raw://b8d6e198ee29d809564f1c1d7caa11a2c329bb5d051f61210548e546493444d2",
          "dweb:/ipfs/QmVxWftbgETjudymgLdwF77S54DWrp6qB5ooauKXW81cm7"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IEIP712.sol": {
        "keccak256": "0xea70db68ce450ad38dfbd490058595441144808eb95272ae9b89e3fbe6456954",
        "urls": [
          "bzz-raw://e8fad9ff319665acdc2f1295bb82db3e5b4d52babc0b58f147dbdbb9f322c6e5",
          "dweb:/ipfs/QmTbYJPcux8eJ3qGVYQh6TiwCA2FPu6HXTUg6QFTnX91Ks"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IPermit2.sol": {
        "keccak256": "0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771",
        "urls": [
          "bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d",
          "dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/ISignatureTransfer.sol": {
        "keccak256": "0x6805563eaad92471fa1b3591a71d7020a93e59f1a4ac95398daf74927f5bd033",
        "urls": [
          "bzz-raw://48cd13806cb8e82dcc38eb93423a372fbdd3b05364ecebb8bfd9cd29078dd90c",
          "dweb:/ipfs/QmeLyFVrzKRHcm6aaFFBCG5mFESCqWLp1KYT41H8XhzMCp"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/auth/Owned.sol": {
        "keccak256": "0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea",
        "urls": [
          "bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4",
          "dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843",
        "urls": [
          "bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9",
          "dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x6ab948013c2c7ca6351e593600425b0ec6df9035320280c678e735bce16e996b",
        "urls": [
          "bzz-raw://2ab977d0eeb2bf458f9798250215c646d2f3b1f90b5a7e2b506fdf3335c0f060",
          "dweb:/ipfs/QmYPRoPhNtBAmCSq7imN1scMVpKNQvMTpoqab3tXUx5Tnv"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/base/ProtocolFees.sol": {
        "keccak256": "0xa6a8588465e1e10db4b85385280b3678ed69ea33d4c740cd54480859cb8c425d",
        "urls": [
          "bzz-raw://f281c905d6b2114f52136f3b79e0e4ffabbeae2423f6a680a960229a191b2179",
          "dweb:/ipfs/QmWeNkB8r7NaSjPeVoLRQN5fM9pxL3kxERnHjL8RUdgr23"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/base/ReactorEvents.sol": {
        "keccak256": "0x4e4396c7728ddc1df2547ac4eff9d69479fa1adb3e88356ee7a2b320159add62",
        "urls": [
          "bzz-raw://d9d3be49c5bceea7db4cdf87ae83ce6aa75dc15cb01e2c5eb859b458e8f36541",
          "dweb:/ipfs/QmbDZRmZdRC48FCLGYo7EDf5frqGrKof8oNJmgQtsG4ix8"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/base/ReactorStructs.sol": {
        "keccak256": "0x78e6db322ca69aaf552e59d5e74a00fd465a802388c2d03f9bf4b711f5704588",
        "urls": [
          "bzz-raw://12d8fc82c3543bfe0d2cd44cdbc524bed1f074abafe086f7e58573cbaff2a74e",
          "dweb:/ipfs/QmREbamTn3nz89nEjv2uWHNHKSF6Yga2gQ688Cde89xcNT"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IProtocolFeeController.sol": {
        "keccak256": "0x21a895ff5b778abf95753001a20b4004adfadd1bba622eaec18eb81836ede86c",
        "urls": [
          "bzz-raw://67f9eae1da9f238f6630247882e382458dcc0135c0a4837b99a44a2360a3845c",
          "dweb:/ipfs/QmdJyKhVyD6nAtgdTofaU2xaoWrPGM1Q6Sd7FiN2LxXZQx"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IReactor.sol": {
        "keccak256": "0x50bbe3534eedf1ebb75b164c38fa63135ef53f7239a2c268008375025eb1f101",
        "urls": [
          "bzz-raw://0061477bbe13910c973b3760c061fd68836ecbe7e4c1b1d704bcaf38c669f9b0",
          "dweb:/ipfs/QmNhehD2Uw7uuCFTmgcE134kMmioRzVk9GUFWmBqLD9whX"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IReactorCallback.sol": {
        "keccak256": "0xf3ee1fe09545fc5be000c33bb6779e897b4e5013bd9de3e7c3107bf466b4dfa1",
        "urls": [
          "bzz-raw://12d7fd1ac3dca76614796f0d012ea4de79bf09cf124cc74efffdf25a56756344",
          "dweb:/ipfs/QmXyeSrG7caihgzUZdPdPbbRj6v1w65gBnfn9a7HhbVJX9"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IValidationCallback.sol": {
        "keccak256": "0xe68fc4f5a2a5029e7f1881d01f5434acbcf0fef2e7ae1945593e01f5414a841e",
        "urls": [
          "bzz-raw://b53ec74b51802cf75aa32c619da5ce7571ff22d305cb599ac3029ef840319d5b",
          "dweb:/ipfs/QmZjiFHQxv9BqMPSk2u4nF9hrwgmPCW3x5TUaXcK1J2bwj"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lens/OrderQuoter.sol": {
        "keccak256": "0x4c0b420487f65bafb5b6829efd7bfd96cda1cd44ef9db0e17bcd274357bf8d58",
        "urls": [
          "bzz-raw://3da7da803567b63425540cd93fc3d5ce46d192610b0de242fb4ebbba13602953",
          "dweb:/ipfs/Qma2AdbWYjKjWX4bAUxo1gxX26RDNXWJ9MDQBbzYbkE8fk"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/CurrencyLibrary.sol": {
        "keccak256": "0x2ab6030f590607359825ae18d350850569d26d9d11a91a3e76cd2c4a966c90a6",
        "urls": [
          "bzz-raw://e9cd60d9e22fe259023f9a25821f9edfa89d1a7a39e0e5517ff052dbff4f6fa3",
          "dweb:/ipfs/QmX5rnLjHWpokvQJzEWmX4eXYirVcv2Y6QsVAXsD3ap5Wq"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/ResolvedOrderLib.sol": {
        "keccak256": "0x5066dd0888221a2ba0abbab1beb0f63df1de941d0433c1a033a40c778de2680d",
        "urls": [
          "bzz-raw://59cd1e1c06467fb3ce957efb04abf0c19b43eb340f96eb36eee0496f6c5c6d08",
          "dweb:/ipfs/QmQLPiyyLvxPd4tHpDezMAkDY2qjy8BBH1sx6pVzaW8utA"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/reactors/BaseReactor.sol": {
        "keccak256": "0x0433e77626bd56e2121effe738b1c665d920cee43a60b8864642586ffdeb7878",
        "urls": [
          "bzz-raw://81a5553ba6a29f12abb9137d5762d9457b4ec93c744fe1e4e58c173732050142",
          "dweb:/ipfs/QmYKN4BgmBWbMPcaxqBkYNUPACMgKfANHif7BSYFt1f5qF"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/lens/OrderQuoter.sol",
    "id": 35772,
    "exportedSymbols": {
      "BaseReactor": [
        37435
      ],
      "IReactor": [
        35610
      ],
      "IReactorCallback": [
        35626
      ],
      "OrderInfo": [
        35436
      ],
      "OrderQuoter": [
        35771
      ],
      "ResolvedOrder": [
        35466
      ],
      "SignedOrder": [
        35471
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:2808:50",
    "nodes": [
      {
        "id": 35644,
        "nodeType": "PragmaDirective",
        "src": "45:23:50",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 35646,
        "nodeType": "ImportDirective",
        "src": "70:68:50",
        "nodes": [],
        "absolutePath": "src/interfaces/IReactorCallback.sol",
        "file": "../interfaces/IReactorCallback.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35772,
        "sourceUnit": 35627,
        "symbolAliases": [
          {
            "foreign": {
              "id": 35645,
              "name": "IReactorCallback",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35626,
              "src": "78:16:50",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 35648,
        "nodeType": "ImportDirective",
        "src": "139:52:50",
        "nodes": [],
        "absolutePath": "src/interfaces/IReactor.sol",
        "file": "../interfaces/IReactor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35772,
        "sourceUnit": 35611,
        "symbolAliases": [
          {
            "foreign": {
              "id": 35647,
              "name": "IReactor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35610,
              "src": "147:8:50",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 35650,
        "nodeType": "ImportDirective",
        "src": "192:56:50",
        "nodes": [],
        "absolutePath": "src/reactors/BaseReactor.sol",
        "file": "../reactors/BaseReactor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35772,
        "sourceUnit": 37436,
        "symbolAliases": [
          {
            "foreign": {
              "id": 35649,
              "name": "BaseReactor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37435,
              "src": "200:11:50",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 35654,
        "nodeType": "ImportDirective",
        "src": "249:81:50",
        "nodes": [],
        "absolutePath": "src/base/ReactorStructs.sol",
        "file": "../base/ReactorStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35772,
        "sourceUnit": 35472,
        "symbolAliases": [
          {
            "foreign": {
              "id": 35651,
              "name": "OrderInfo",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35436,
              "src": "257:9:50",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 35652,
              "name": "ResolvedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35466,
              "src": "268:13:50",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 35653,
              "name": "SignedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35471,
              "src": "283:11:50",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 35771,
        "nodeType": "ContractDefinition",
        "src": "471:2381:50",
        "nodes": [
          {
            "id": 35660,
            "nodeType": "ErrorDefinition",
            "src": "589:30:50",
            "nodes": [],
            "documentation": {
              "id": 35658,
              "nodeType": "StructuredDocumentation",
              "src": "518:66:50",
              "text": "@notice thrown if reactorCallback receives more than one order"
            },
            "errorSelector": "06ee9878",
            "name": "OrdersLengthIncorrect",
            "nameLocation": "595:21:50",
            "parameters": {
              "id": 35659,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "616:2:50"
            }
          },
          {
            "id": 35663,
            "nodeType": "VariableDeclaration",
            "src": "625:39:50",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "ORDER_INFO_OFFSET",
            "nameLocation": "642:17:50",
            "scope": 35771,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 35661,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "625:7:50",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3634",
              "id": 35662,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "662:2:50",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_64_by_1",
                "typeString": "int_const 64"
              },
              "value": "64"
            },
            "visibility": "internal"
          },
          {
            "id": 35704,
            "nodeType": "FunctionDefinition",
            "src": "1096:302:50",
            "nodes": [],
            "body": {
              "id": 35703,
              "nodeType": "Block",
              "src": "1196:202:50",
              "nodes": [],
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 35689,
                        "nodeType": "Block",
                        "src": "1294:2:50",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 35690,
                      "nodeType": "TryCatchClause",
                      "src": "1294:2:50"
                    },
                    {
                      "block": {
                        "id": 35700,
                        "nodeType": "Block",
                        "src": "1333:59:50",
                        "statements": [
                          {
                            "expression": {
                              "id": 35698,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 35694,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35672,
                                "src": "1347:6:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ResolvedOrder_$35466_memory_ptr",
                                  "typeString": "struct ResolvedOrder memory"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 35696,
                                    "name": "reason",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 35692,
                                    "src": "1374:6:50",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 35695,
                                  "name": "parseRevertReason",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35740,
                                  "src": "1356:17:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_ResolvedOrder_$35466_memory_ptr_$",
                                    "typeString": "function (bytes memory) pure returns (struct ResolvedOrder memory)"
                                  }
                                },
                                "id": 35697,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1356:25:50",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ResolvedOrder_$35466_memory_ptr",
                                  "typeString": "struct ResolvedOrder memory"
                                }
                              },
                              "src": "1347:34:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ResolvedOrder_$35466_memory_ptr",
                                "typeString": "struct ResolvedOrder memory"
                              }
                            },
                            "id": 35699,
                            "nodeType": "ExpressionStatement",
                            "src": "1347:34:50"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 35701,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 35693,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 35692,
                            "mutability": "mutable",
                            "name": "reason",
                            "nameLocation": "1325:6:50",
                            "nodeType": "VariableDeclaration",
                            "scope": 35701,
                            "src": "1312:19:50",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 35691,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1312:5:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1311:21:50"
                      },
                      "src": "1305:87:50"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 35681,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35666,
                            "src": "1270:5:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 35682,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35668,
                            "src": "1277:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 35680,
                          "name": "SignedOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35471,
                          "src": "1258:11:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SignedOrder_$35471_storage_ptr_$",
                            "typeString": "type(struct SignedOrder storage pointer)"
                          }
                        },
                        "id": 35683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1258:23:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignedOrder_$35471_memory_ptr",
                          "typeString": "struct SignedOrder memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 35686,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1289:2:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 35685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1283:5:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 35684,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1283:5:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1283:9:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SignedOrder_$35471_memory_ptr",
                          "typeString": "struct SignedOrder memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 35676,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35666,
                                "src": "1230:5:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 35675,
                              "name": "getReactor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35715,
                              "src": "1219:10:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_contract$_IReactor_$35610_$",
                                "typeString": "function (bytes memory) pure returns (contract IReactor)"
                              }
                            },
                            "id": 35677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1219:17:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IReactor_$35610",
                              "typeString": "contract IReactor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IReactor_$35610",
                              "typeString": "contract IReactor"
                            }
                          ],
                          "id": 35674,
                          "name": "IReactor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35610,
                          "src": "1210:8:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IReactor_$35610_$",
                            "typeString": "type(contract IReactor)"
                          }
                        },
                        "id": 35678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1210:27:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IReactor_$35610",
                          "typeString": "contract IReactor"
                        }
                      },
                      "id": 35679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1238:19:50",
                      "memberName": "executeWithCallback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35591,
                      "src": "1210:47:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_SignedOrder_$35471_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (struct SignedOrder memory,bytes memory) payable external"
                      }
                    },
                    "id": 35688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1210:83:50",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35702,
                  "nodeType": "TryStatement",
                  "src": "1206:186:50"
                }
              ]
            },
            "documentation": {
              "id": 35664,
              "nodeType": "StructuredDocumentation",
              "src": "671:420:50",
              "text": "@notice Quote the given order, returning the ResolvedOrder object which defines\n the current input and output token amounts required to satisfy it\n Also bubbles up any reverts that would occur during the processing of the order\n @param order abi-encoded order, including `reactor` as the first encoded struct member\n @param sig The order signature\n @return result The ResolvedOrder"
            },
            "functionSelector": "41d88d69",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "quote",
            "nameLocation": "1105:5:50",
            "parameters": {
              "id": 35669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35666,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "1124:5:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 35704,
                  "src": "1111:18:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35665,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1111:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35668,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "1144:3:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 35704,
                  "src": "1131:16:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35667,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1131:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1110:38:50"
            },
            "returnParameters": {
              "id": 35673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35672,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "1188:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 35704,
                  "src": "1167:27:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResolvedOrder_$35466_memory_ptr",
                    "typeString": "struct ResolvedOrder"
                  },
                  "typeName": {
                    "id": 35671,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35670,
                      "name": "ResolvedOrder",
                      "nameLocations": [
                        "1167:13:50"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35466,
                      "src": "1167:13:50"
                    },
                    "referencedDeclaration": 35466,
                    "src": "1167:13:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$35466_storage_ptr",
                      "typeString": "struct ResolvedOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1166:29:50"
            },
            "scope": 35771,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35715,
            "nodeType": "FunctionDefinition",
            "src": "1596:276:50",
            "nodes": [],
            "body": {
              "id": 35714,
              "nodeType": "Block",
              "src": "1675:197:50",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1694:172:50",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1708:59:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "order",
                              "nodeType": "YulIdentifier",
                              "src": "1742:5:50"
                            },
                            {
                              "name": "ORDER_INFO_OFFSET",
                              "nodeType": "YulIdentifier",
                              "src": "1749:17:50"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1738:3:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1738:29:50"
                        },
                        "variables": [
                          {
                            "name": "orderInfoOffsetPointer",
                            "nodeType": "YulTypedName",
                            "src": "1712:22:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1780:76:50",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "orderInfoOffsetPointer",
                                  "nodeType": "YulIdentifier",
                                  "src": "1801:22:50"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "orderInfoOffsetPointer",
                                      "nodeType": "YulIdentifier",
                                      "src": "1831:22:50"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "1825:5:50"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1825:29:50"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1797:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1797:58:50"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1791:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1791:65:50"
                        },
                        "variableNames": [
                          {
                            "name": "reactor",
                            "nodeType": "YulIdentifier",
                            "src": "1780:7:50"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 35663,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1749:17:50",
                      "valueSize": 1
                    },
                    {
                      "declaration": 35707,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1742:5:50",
                      "valueSize": 1
                    },
                    {
                      "declaration": 35711,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1780:7:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 35713,
                  "nodeType": "InlineAssembly",
                  "src": "1685:181:50"
                }
              ]
            },
            "documentation": {
              "id": 35705,
              "nodeType": "StructuredDocumentation",
              "src": "1404:187:50",
              "text": "@notice Return the reactor of a given order (abi.encoded bytes).\n @param order abi-encoded order, including `reactor` as the first encoded struct member\n @return reactor"
            },
            "functionSelector": "7671d07b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReactor",
            "nameLocation": "1605:10:50",
            "parameters": {
              "id": 35708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35707,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "1629:5:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 35715,
                  "src": "1616:18:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35706,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1616:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1615:20:50"
            },
            "returnParameters": {
              "id": 35712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35711,
                  "mutability": "mutable",
                  "name": "reactor",
                  "nameLocation": "1666:7:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 35715,
                  "src": "1657:16:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IReactor_$35610",
                    "typeString": "contract IReactor"
                  },
                  "typeName": {
                    "id": 35710,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35709,
                      "name": "IReactor",
                      "nameLocations": [
                        "1657:8:50"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35610,
                      "src": "1657:8:50"
                    },
                    "referencedDeclaration": 35610,
                    "src": "1657:8:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IReactor_$35610",
                      "typeString": "contract IReactor"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1656:18:50"
            },
            "scope": 35771,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35740,
            "nodeType": "FunctionDefinition",
            "src": "2049:315:50",
            "nodes": [],
            "body": {
              "id": 35739,
              "nodeType": "Block",
              "src": "2147:217:50",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 35727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 35724,
                        "name": "reason",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35718,
                        "src": "2161:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 35725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2168:6:50",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2161:13:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "313932",
                      "id": 35726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2177:3:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_192_by_1",
                        "typeString": "int_const 192"
                      },
                      "value": "192"
                    },
                    "src": "2161:19:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 35737,
                    "nodeType": "Block",
                    "src": "2291:67:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 35732,
                              "name": "reason",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35718,
                              "src": "2323:6:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 35733,
                                  "name": "ResolvedOrder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35466,
                                  "src": "2332:13:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_ResolvedOrder_$35466_storage_ptr_$",
                                    "typeString": "type(struct ResolvedOrder storage pointer)"
                                  }
                                }
                              ],
                              "id": 35734,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2331:15:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_ResolvedOrder_$35466_storage_ptr_$",
                                "typeString": "type(struct ResolvedOrder storage pointer)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_struct$_ResolvedOrder_$35466_storage_ptr_$",
                                "typeString": "type(struct ResolvedOrder storage pointer)"
                              }
                            ],
                            "expression": {
                              "id": 35730,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "2312:3:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 35731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2316:6:50",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "2312:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 35735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2312:35:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolvedOrder_$35466_memory_ptr",
                            "typeString": "struct ResolvedOrder memory"
                          }
                        },
                        "functionReturnParameters": 35723,
                        "id": 35736,
                        "nodeType": "Return",
                        "src": "2305:42:50"
                      }
                    ]
                  },
                  "id": 35738,
                  "nodeType": "IfStatement",
                  "src": "2157:201:50",
                  "trueBody": {
                    "id": 35729,
                    "nodeType": "Block",
                    "src": "2182:103:50",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2205:70:50",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2234:2:50",
                                        "type": "",
                                        "value": "32"
                                      },
                                      {
                                        "name": "reason",
                                        "nodeType": "YulIdentifier",
                                        "src": "2238:6:50"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2230:3:50"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2230:15:50"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "reason",
                                        "nodeType": "YulIdentifier",
                                        "src": "2253:6:50"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "2247:5:50"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2247:13:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2223:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2223:38:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2223:38:50"
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 35718,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2238:6:50",
                            "valueSize": 1
                          },
                          {
                            "declaration": 35718,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2253:6:50",
                            "valueSize": 1
                          }
                        ],
                        "id": 35728,
                        "nodeType": "InlineAssembly",
                        "src": "2196:79:50"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 35716,
              "nodeType": "StructuredDocumentation",
              "src": "1878:166:50",
              "text": "@notice Return the order info of a given order (abi-encoded bytes).\n @param order abi-encoded order, including `reactor` as the first encoded struct member"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "parseRevertReason",
            "nameLocation": "2058:17:50",
            "parameters": {
              "id": 35719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35718,
                  "mutability": "mutable",
                  "name": "reason",
                  "nameLocation": "2089:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 35740,
                  "src": "2076:19:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35717,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2076:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2075:21:50"
            },
            "returnParameters": {
              "id": 35723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35722,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "2140:5:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 35740,
                  "src": "2119:26:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResolvedOrder_$35466_memory_ptr",
                    "typeString": "struct ResolvedOrder"
                  },
                  "typeName": {
                    "id": 35721,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35720,
                      "name": "ResolvedOrder",
                      "nameLocations": [
                        "2119:13:50"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35466,
                      "src": "2119:13:50"
                    },
                    "referencedDeclaration": 35466,
                    "src": "2119:13:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$35466_storage_ptr",
                      "typeString": "struct ResolvedOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2118:28:50"
            },
            "scope": 35771,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 35770,
            "nodeType": "FunctionDefinition",
            "src": "2517:333:50",
            "nodes": [],
            "body": {
              "id": 35769,
              "nodeType": "Block",
              "src": "2609:241:50",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 35753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 35750,
                        "name": "resolvedOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35745,
                        "src": "2623:14:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ResolvedOrder_$35466_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ResolvedOrder memory[] memory"
                        }
                      },
                      "id": 35751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2638:6:50",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2623:21:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 35752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2648:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2623:26:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35758,
                  "nodeType": "IfStatement",
                  "src": "2619:87:50",
                  "trueBody": {
                    "id": 35757,
                    "nodeType": "Block",
                    "src": "2651:55:50",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 35754,
                            "name": "OrdersLengthIncorrect",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35660,
                            "src": "2672:21:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 35755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2672:23:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 35756,
                        "nodeType": "RevertStatement",
                        "src": "2665:30:50"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    35760
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35760,
                      "mutability": "mutable",
                      "name": "order",
                      "nameLocation": "2728:5:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 35769,
                      "src": "2715:18:50",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 35759,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2715:5:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35767,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 35763,
                          "name": "resolvedOrders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35745,
                          "src": "2747:14:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ResolvedOrder_$35466_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct ResolvedOrder memory[] memory"
                          }
                        },
                        "id": 35765,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 35764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2762:1:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2747:17:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$35466_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$35466_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      ],
                      "expression": {
                        "id": 35761,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2736:3:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 35762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2740:6:50",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "2736:10:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 35766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2736:29:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2715:50:50"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2784:60:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2809:2:50",
                                  "type": "",
                                  "value": "32"
                                },
                                {
                                  "name": "order",
                                  "nodeType": "YulIdentifier",
                                  "src": "2813:5:50"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2805:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2805:14:50"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "order",
                                  "nodeType": "YulIdentifier",
                                  "src": "2827:5:50"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2821:5:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2821:12:50"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2798:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2798:36:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2798:36:50"
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 35760,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2813:5:50",
                      "valueSize": 1
                    },
                    {
                      "declaration": 35760,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2827:5:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 35768,
                  "nodeType": "InlineAssembly",
                  "src": "2775:69:50"
                }
              ]
            },
            "baseFunctions": [
              35625
            ],
            "documentation": {
              "id": 35741,
              "nodeType": "StructuredDocumentation",
              "src": "2370:142:50",
              "text": "@notice Reactor callback function\n @dev reverts with the resolved order as reason\n @param resolvedOrders The resolved orders"
            },
            "functionSelector": "585da628",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reactorCallback",
            "nameLocation": "2526:15:50",
            "parameters": {
              "id": 35748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35745,
                  "mutability": "mutable",
                  "name": "resolvedOrders",
                  "nameLocation": "2565:14:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 35770,
                  "src": "2542:37:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ResolvedOrder_$35466_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ResolvedOrder[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 35743,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 35742,
                        "name": "ResolvedOrder",
                        "nameLocations": [
                          "2542:13:50"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 35466,
                        "src": "2542:13:50"
                      },
                      "referencedDeclaration": 35466,
                      "src": "2542:13:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResolvedOrder_$35466_storage_ptr",
                        "typeString": "struct ResolvedOrder"
                      }
                    },
                    "id": 35744,
                    "nodeType": "ArrayTypeName",
                    "src": "2542:15:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ResolvedOrder_$35466_storage_$dyn_storage_ptr",
                      "typeString": "struct ResolvedOrder[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35747,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35770,
                  "src": "2581:12:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35746,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2581:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2541:53:50"
            },
            "returnParameters": {
              "id": 35749,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2609:0:50"
            },
            "scope": 35771,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 35656,
              "name": "IReactorCallback",
              "nameLocations": [
                "495:16:50"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35626,
              "src": "495:16:50"
            },
            "id": 35657,
            "nodeType": "InheritanceSpecifier",
            "src": "495:16:50"
          }
        ],
        "canonicalName": "OrderQuoter",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 35655,
          "nodeType": "StructuredDocumentation",
          "src": "332:139:50",
          "text": "@notice Quoter contract for orders\n @dev note this is meant to be used as an off-chain lens contract to pre-validate generic orders"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          35771,
          35626
        ],
        "name": "OrderQuoter",
        "nameLocation": "480:11:50",
        "scope": 35772,
        "usedErrors": [
          35660
        ]
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 50
}