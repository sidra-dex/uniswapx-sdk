{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_whitelistedCaller",
          "type": "address"
        },
        {
          "internalType": "contract IReactor",
          "name": "_reactor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "contract ISwapRouter02",
          "name": "_swapRouter02",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CallerNotWhitelisted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MsgSenderNotReactor",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NativeTransferFailed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            }
          ],
          "internalType": "struct SignedOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "callbackData",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            }
          ],
          "internalType": "struct SignedOrder[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "internalType": "bytes",
          "name": "callbackData",
          "type": "bytes"
        }
      ],
      "name": "executeBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20[]",
          "name": "tokensToApprove",
          "type": "address[]"
        },
        {
          "internalType": "bytes[]",
          "name": "multicallData",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "contract IReactor",
                  "name": "reactor",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "swapper",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IValidationCallback",
                  "name": "additionalValidationContract",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "additionalValidationData",
                  "type": "bytes"
                }
              ],
              "internalType": "struct OrderInfo",
              "name": "info",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "contract ERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct InputToken",
              "name": "input",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct OutputToken[]",
              "name": "outputs",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ResolvedOrder[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "internalType": "bytes",
          "name": "callbackData",
          "type": "bytes"
        }
      ],
      "name": "reactorCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "unwrapWETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "withdrawETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x6101006040523480156200001257600080fd5b5060405162001a2338038062001a2383398101604081905262000035916200012b565b600080546001600160a01b0319166001600160a01b03841690811782556040518492907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001600160a01b0380851660a05283811660c05281166080819052604080516312a9293f60e21b81529051634aa4a4fc916004808201926020929091908290030181865afa158015620000d5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000fb919062000193565b6001600160a01b031660e05250620001ba92505050565b6001600160a01b03811681146200012857600080fd5b50565b600080600080608085870312156200014257600080fd5b84516200014f8162000112565b6020860151909450620001628162000112565b6040860151909350620001758162000112565b6060860151909250620001888162000112565b939692955090935050565b600060208284031215620001a657600080fd5b8151620001b38162000112565b9392505050565b60805160a05160c05160e0516117f062000233600039600081816107ef01526108a10152600081816101db015281816102f201528181610452015281816109cc0152610adf0152600081816109380152610a4b0152600081816102590152818161038a0152818161051601526105ea01526117f06000f3fe60806040526004361061007f5760003560e01c80638da5cb5b1161004e5780638da5cb5b1461010d578063d0f2d8ac14610163578063e5135ec614610183578063f2fde38b146101a357600080fd5b8063585da6281461008b57806363fb0b96146100ad578063690d8320146100cd57806389a3f136146100ed57600080fd5b3661008657005b600080fd5b34801561009757600080fd5b506100ab6100a6366004610ebf565b6101c3565b005b3480156100b957600080fd5b506100ab6100c8366004610f2b565b610480565b3480156100d957600080fd5b506100ab6100e8366004610fad565b6106af565b3480156100f957600080fd5b506100ab610108366004610fad565b61073d565b34801561011957600080fd5b5060005461013a9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b34801561016f57600080fd5b506100ab61017e366004610fd1565b610920565b34801561018f57600080fd5b506100ab61019e366004610ebf565b610a33565b3480156101af57600080fd5b506100ab6101be366004610fad565b610b52565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610232576040517f933fe52f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080806102428486018661119e565b92509250925060005b83518110156102e0576102d87f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8684815181106102ab576102ab6112d4565b602002602001015173ffffffffffffffffffffffffffffffffffffffff16610c439092919063ffffffff16565b60010161024b565b5060005b825181101561034c576103447f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8584815181106102ab576102ab6112d4565b6001016102e4565b506040517f5ae401dc00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690635ae401dc906103e1907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff908590600401611327565b6000604051808303816000875af1158015610400573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261044691908101906113e5565b504715610477576104777f000000000000000000000000000000000000000000000000000000000000000047610d18565b50505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610506576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b60005b838110156105ac5761059a7f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff878785818110610568576105686112d4565b905060200201602081019061057d9190610fad565b73ffffffffffffffffffffffffffffffffffffffff169190610c43565b806105a4816114d2565b915050610509565b506040517f5ae401dc00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690635ae401dc90610643907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90869086906004016115de565b6000604051808303816000875af1158015610662573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526106a891908101906113e5565b5050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610730576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016104fd565b61073a8147610dbc565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146107be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016104fd565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa15801561084b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086f919061166e565b6040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018290529091507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690632e1a7d4d90602401600060405180830381600087803b1580156108fa57600080fd5b505af115801561090e573d6000803e3d6000fd5b5050505061091c8247610dbc565b5050565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461098f576040517f8c6e5d7100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f0d33588400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690630d33588490610a05908690869086906004016116d2565b600060405180830381600087803b158015610a1f57600080fd5b505af1158015610477573d6000803e3d6000fd5b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610aa2576040517f8c6e5d7100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f13fb72c700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906313fb72c790610b1a9087908790879087906004016116f8565b600060405180830381600087803b158015610b3457600080fd5b505af1158015610b48573d6000803e3d6000fd5b5050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610bd3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016104fd565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a350565b60006040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080610d12576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f415050524f56455f4641494c454400000000000000000000000000000000000060448201526064016104fd565b50505050565b60008273ffffffffffffffffffffffffffffffffffffffff1682611af490604051600060405180830381858888f193505050503d8060008114610d77576040519150601f19603f3d011682016040523d82523d6000602084013e610d7c565b606091505b5050905080610db7576040517ff4b3b1bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b600080600080600085875af1905080610db7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4554485f5452414e534645525f4641494c45440000000000000000000000000060448201526064016104fd565b60008083601f840112610e4357600080fd5b50813567ffffffffffffffff811115610e5b57600080fd5b6020830191508360208260051b8501011115610e7657600080fd5b9250929050565b60008083601f840112610e8f57600080fd5b50813567ffffffffffffffff811115610ea757600080fd5b602083019150836020828501011115610e7657600080fd5b60008060008060408587031215610ed557600080fd5b843567ffffffffffffffff80821115610eed57600080fd5b610ef988838901610e31565b90965094506020870135915080821115610f1257600080fd5b50610f1f87828801610e7d565b95989497509550505050565b60008060008060408587031215610f4157600080fd5b843567ffffffffffffffff80821115610f5957600080fd5b610f6588838901610e31565b90965094506020870135915080821115610f7e57600080fd5b50610f1f87828801610e31565b73ffffffffffffffffffffffffffffffffffffffff8116811461073a57600080fd5b600060208284031215610fbf57600080fd5b8135610fca81610f8b565b9392505050565b600080600060408486031215610fe657600080fd5b833567ffffffffffffffff80821115610ffe57600080fd5b908501906040828803121561101257600080fd5b9093506020850135908082111561102857600080fd5b5061103586828701610e7d565b9497909650939450505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156110b8576110b8611042565b604052919050565b600067ffffffffffffffff8211156110da576110da611042565b5060051b60200190565b600082601f8301126110f557600080fd5b8135602061110a611105836110c0565b611071565b82815260059290921b8401810191818101908684111561112957600080fd5b8286015b8481101561114d57803561114081610f8b565b835291830191830161112d565b509695505050505050565b600067ffffffffffffffff82111561117257611172611042565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6000806000606084860312156111b357600080fd5b833567ffffffffffffffff808211156111cb57600080fd5b6111d7878388016110e4565b94506020915081860135818111156111ee57600080fd5b6111fa888289016110e4565b9450506040808701358281111561121057600080fd5b8701601f8101891361122157600080fd5b803561122f611105826110c0565b81815260059190911b8201850190858101908b83111561124e57600080fd5b8684015b838110156112c25780358781111561126a5760008081fd5b8501603f81018e1361127c5760008081fd5b8881013561128c61110582611158565b8181528f898385010111156112a15760008081fd5b818984018c83013760009181018b0191909152845250918701918701611252565b50809750505050505050509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60005b8381101561131e578181015183820152602001611306565b50506000910152565b600060408201848352602060408185015281855180845260608601915060608160051b870101935082870160005b828110156113d7577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08887030184528151805180885261139a81888a01898501611303565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01696909601850195509284019290840190600101611355565b509398975050505050505050565b600060208083850312156113f857600080fd5b825167ffffffffffffffff8082111561141057600080fd5b818501915085601f83011261142457600080fd5b8151611432611105826110c0565b81815260059190911b8301840190848101908883111561145157600080fd5b8585015b838110156114c55780518581111561146d5760008081fd5b8601603f81018b1361147f5760008081fd5b87810151604061149161110583611158565b8281528d828486010111156114a65760008081fd5b6114b5838c8301848701611303565b8652505050918601918601611455565b5098975050505050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361152a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126115af57600080fd5b830160208101925035905067ffffffffffffffff8111156115cf57600080fd5b803603821315610e7657600080fd5b60006040820185835260206040818501528185835260608501905060608660051b86010192508660005b87811015611660577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0878603018352611641828a61157a565b61164c878284611531565b965050509183019190830190600101611608565b509298975050505050505050565b60006020828403121561168057600080fd5b5051919050565b6000611693828361157a565b604085526116a5604086018284611531565b9150506116b5602084018461157a565b85830360208701526116c8838284611531565b9695505050505050565b6040815260006116e56040830186611687565b82810360208401526116c8818587611531565b6040808252810184905260006060600586901b830181019083018783805b89811015611798577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa087860301845282357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc18c3603018112611776578283fd5b611782868d8301611687565b9550506020938401939290920191600101611716565b5050505082810360208401526117af818587611531565b97965050505050505056fea26469706673582212203213842a8731c49c3a030adacfde592b28c5d22332b28c4beff280c5ee5b867964736f6c63430008130033",
    "sourceMap": "690:4503:64:-:0;;;1543:304;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1045:5:34;:14;;-1:-1:-1;;;;;;1045:14:34;-1:-1:-1;;;;;1045:14:34;;;;;;;1075:40;;1045:14;;:5;1075:40;;1045:5;;1075:40;-1:-1:-1;;;;;;1683:38:64;;::::1;;::::0;1731:18;;::::1;;::::0;1759:28;::::1;;::::0;;;-1:-1:-1;1817:21:64;;-1:-1:-1;;;1817:21:64;;;;:19:::1;::::0;:21:::1;::::0;;::::1;::::0;-1:-1:-1;;1817:21:64;;;;;;;;1759:28;1817:21:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;1797:43:64::1;;::::0;-1:-1:-1;690:4503:64;;-1:-1:-1;;;690:4503:64;14:131:101;-1:-1:-1;;;;;89:31:101;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:695::-;288:6;296;304;312;365:3;353:9;344:7;340:23;336:33;333:53;;;382:1;379;372:12;333:53;414:9;408:16;433:31;458:5;433:31;:::i;:::-;533:2;518:18;;512:25;483:5;;-1:-1:-1;546:33:101;512:25;546:33;:::i;:::-;650:2;635:18;;629:25;598:7;;-1:-1:-1;663:33:101;629:25;663:33;:::i;:::-;767:2;752:18;;746:25;715:7;;-1:-1:-1;780:33:101;746:25;780:33;:::i;:::-;150:695;;;;-1:-1:-1;150:695:101;;-1:-1:-1;;150:695:101:o;850:251::-;920:6;973:2;961:9;952:7;948:23;944:32;941:52;;;989:1;986;979:12;941:52;1021:9;1015:16;1040:31;1065:5;1040:31;:::i;:::-;1090:5;850:251;-1:-1:-1;;;850:251:101:o;:::-;690:4503:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061007f5760003560e01c80638da5cb5b1161004e5780638da5cb5b1461010d578063d0f2d8ac14610163578063e5135ec614610183578063f2fde38b146101a357600080fd5b8063585da6281461008b57806363fb0b96146100ad578063690d8320146100cd57806389a3f136146100ed57600080fd5b3661008657005b600080fd5b34801561009757600080fd5b506100ab6100a6366004610ebf565b6101c3565b005b3480156100b957600080fd5b506100ab6100c8366004610f2b565b610480565b3480156100d957600080fd5b506100ab6100e8366004610fad565b6106af565b3480156100f957600080fd5b506100ab610108366004610fad565b61073d565b34801561011957600080fd5b5060005461013a9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b34801561016f57600080fd5b506100ab61017e366004610fd1565b610920565b34801561018f57600080fd5b506100ab61019e366004610ebf565b610a33565b3480156101af57600080fd5b506100ab6101be366004610fad565b610b52565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610232576040517f933fe52f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080806102428486018661119e565b92509250925060005b83518110156102e0576102d87f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8684815181106102ab576102ab6112d4565b602002602001015173ffffffffffffffffffffffffffffffffffffffff16610c439092919063ffffffff16565b60010161024b565b5060005b825181101561034c576103447f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8584815181106102ab576102ab6112d4565b6001016102e4565b506040517f5ae401dc00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690635ae401dc906103e1907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff908590600401611327565b6000604051808303816000875af1158015610400573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261044691908101906113e5565b504715610477576104777f000000000000000000000000000000000000000000000000000000000000000047610d18565b50505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610506576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b60005b838110156105ac5761059a7f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff878785818110610568576105686112d4565b905060200201602081019061057d9190610fad565b73ffffffffffffffffffffffffffffffffffffffff169190610c43565b806105a4816114d2565b915050610509565b506040517f5ae401dc00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690635ae401dc90610643907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90869086906004016115de565b6000604051808303816000875af1158015610662573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526106a891908101906113e5565b5050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610730576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016104fd565b61073a8147610dbc565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146107be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016104fd565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa15801561084b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086f919061166e565b6040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018290529091507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690632e1a7d4d90602401600060405180830381600087803b1580156108fa57600080fd5b505af115801561090e573d6000803e3d6000fd5b5050505061091c8247610dbc565b5050565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461098f576040517f8c6e5d7100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f0d33588400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690630d33588490610a05908690869086906004016116d2565b600060405180830381600087803b158015610a1f57600080fd5b505af1158015610477573d6000803e3d6000fd5b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610aa2576040517f8c6e5d7100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f13fb72c700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906313fb72c790610b1a9087908790879087906004016116f8565b600060405180830381600087803b158015610b3457600080fd5b505af1158015610b48573d6000803e3d6000fd5b5050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610bd3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016104fd565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a350565b60006040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080610d12576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f415050524f56455f4641494c454400000000000000000000000000000000000060448201526064016104fd565b50505050565b60008273ffffffffffffffffffffffffffffffffffffffff1682611af490604051600060405180830381858888f193505050503d8060008114610d77576040519150601f19603f3d011682016040523d82523d6000602084013e610d7c565b606091505b5050905080610db7576040517ff4b3b1bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b600080600080600085875af1905080610db7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4554485f5452414e534645525f4641494c45440000000000000000000000000060448201526064016104fd565b60008083601f840112610e4357600080fd5b50813567ffffffffffffffff811115610e5b57600080fd5b6020830191508360208260051b8501011115610e7657600080fd5b9250929050565b60008083601f840112610e8f57600080fd5b50813567ffffffffffffffff811115610ea757600080fd5b602083019150836020828501011115610e7657600080fd5b60008060008060408587031215610ed557600080fd5b843567ffffffffffffffff80821115610eed57600080fd5b610ef988838901610e31565b90965094506020870135915080821115610f1257600080fd5b50610f1f87828801610e7d565b95989497509550505050565b60008060008060408587031215610f4157600080fd5b843567ffffffffffffffff80821115610f5957600080fd5b610f6588838901610e31565b90965094506020870135915080821115610f7e57600080fd5b50610f1f87828801610e31565b73ffffffffffffffffffffffffffffffffffffffff8116811461073a57600080fd5b600060208284031215610fbf57600080fd5b8135610fca81610f8b565b9392505050565b600080600060408486031215610fe657600080fd5b833567ffffffffffffffff80821115610ffe57600080fd5b908501906040828803121561101257600080fd5b9093506020850135908082111561102857600080fd5b5061103586828701610e7d565b9497909650939450505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156110b8576110b8611042565b604052919050565b600067ffffffffffffffff8211156110da576110da611042565b5060051b60200190565b600082601f8301126110f557600080fd5b8135602061110a611105836110c0565b611071565b82815260059290921b8401810191818101908684111561112957600080fd5b8286015b8481101561114d57803561114081610f8b565b835291830191830161112d565b509695505050505050565b600067ffffffffffffffff82111561117257611172611042565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6000806000606084860312156111b357600080fd5b833567ffffffffffffffff808211156111cb57600080fd5b6111d7878388016110e4565b94506020915081860135818111156111ee57600080fd5b6111fa888289016110e4565b9450506040808701358281111561121057600080fd5b8701601f8101891361122157600080fd5b803561122f611105826110c0565b81815260059190911b8201850190858101908b83111561124e57600080fd5b8684015b838110156112c25780358781111561126a5760008081fd5b8501603f81018e1361127c5760008081fd5b8881013561128c61110582611158565b8181528f898385010111156112a15760008081fd5b818984018c83013760009181018b0191909152845250918701918701611252565b50809750505050505050509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60005b8381101561131e578181015183820152602001611306565b50506000910152565b600060408201848352602060408185015281855180845260608601915060608160051b870101935082870160005b828110156113d7577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08887030184528151805180885261139a81888a01898501611303565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01696909601850195509284019290840190600101611355565b509398975050505050505050565b600060208083850312156113f857600080fd5b825167ffffffffffffffff8082111561141057600080fd5b818501915085601f83011261142457600080fd5b8151611432611105826110c0565b81815260059190911b8301840190848101908883111561145157600080fd5b8585015b838110156114c55780518581111561146d5760008081fd5b8601603f81018b1361147f5760008081fd5b87810151604061149161110583611158565b8281528d828486010111156114a65760008081fd5b6114b5838c8301848701611303565b8652505050918601918601611455565b5098975050505050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361152a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126115af57600080fd5b830160208101925035905067ffffffffffffffff8111156115cf57600080fd5b803603821315610e7657600080fd5b60006040820185835260206040818501528185835260608501905060608660051b86010192508660005b87811015611660577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0878603018352611641828a61157a565b61164c878284611531565b965050509183019190830190600101611608565b509298975050505050505050565b60006020828403121561168057600080fd5b5051919050565b6000611693828361157a565b604085526116a5604086018284611531565b9150506116b5602084018461157a565b85830360208701526116c8838284611531565b9695505050505050565b6040815260006116e56040830186611687565b82810360208401526116c8818587611531565b6040808252810184905260006060600586901b830181019083018783805b89811015611798577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa087860301845282357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc18c3603018112611776578283fd5b611782868d8301611687565b9550506020938401939290920191600101611716565b5050505082810360208401526117af818587611531565b97965050505050505056fea26469706673582212203213842a8731c49c3a030adacfde592b28c5d22332b28c4beff280c5ee5b867964736f6c63430008130033",
    "sourceMap": "690:4503:64:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2712:1075;;;;;;;;;;-1:-1:-1;2712:1075:64;;;;;:::i;:::-;;:::i;:::-;;4026:336;;;;;;;;;;-1:-1:-1;4026:336:64;;;;;:::i;:::-;;:::i;4930:141::-;;;;;;;;;;-1:-1:-1;4930:141:64;;;;;:::i;:::-;;:::i;4539:238::-;;;;;;;;;;-1:-1:-1;4539:238:64;;;;;:::i;:::-;;:::i;690:20:34:-;;;;;;;;;;-1:-1:-1;690:20:34;;;;;;;;;;;3001:42:101;2989:55;;;2971:74;;2959:2;2944:18;690:20:34;;;;;;;1915:170:64;;;;;;;;;;-1:-1:-1;1915:170:64;;;;;:::i;:::-;;:::i;2153:184::-;;;;;;;;;;-1:-1:-1;2153:184:64;;;;;:::i;:::-;;:::i;1312:161:34:-;;;;;;;;;;-1:-1:-1;1312:161:34;;;;;:::i;:::-;;:::i;2712:1075:64:-;1435:10;:30;1457:7;1435:30;;1431:89;;1488:21;;;;;;;;;;;;;;1431:89;2837:47:::1;::::0;;2995:57:::1;::::0;;::::1;3006:12:::0;2995:57:::1;:::i;:::-;2823:229;;;;;;3092:9;3087:195;3111:30;:37;3107:1;:41;3087:195;;;3173:94;3234:12;3249:17;3179:30;3210:1;3179:33;;;;;;;;:::i;:::-;;;;;;;3173:52;;;;:94;;;;;:::i;:::-;3150:3;;3087:195;;;;3301:9;3296:180;3320:25;:32;3316:1;:36;3296:180;;;3377:84;3433:7;3443:17;3383:25;3409:1;3383:28;;;;;;;;:::i;3377:84::-;3354:3;;3296:180;;;-1:-1:-1::0;3496:56:64::1;::::0;;;;:22:::1;:12;:22;::::0;::::1;::::0;:56:::1;::::0;3519:17:::1;::::0;3538:13;;3496:56:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;3658:21:64::1;:25:::0;3654:127:::1;;3699:71;3738:7;3748:21;3699:30;:71::i;:::-;2813:974;;;2712:1075:::0;;;;:::o;4026:336::-;778:5:34;;;;764:10;:19;756:44;;;;;;;11900:2:101;756:44:34;;;11882:21:101;11939:2;11919:18;;;11912:30;11978:14;11958:18;;;11951:42;12010:18;;756:44:34;;;;;;;;;4145:9:64::1;4140:150;4160:26:::0;;::::1;4140:150;;;4207:72;4246:12;4261:17;4207:15;;4223:1;4207:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;:30;;::::0;:72;:30:::1;:72::i;:::-;4188:3:::0;::::1;::::0;::::1;:::i;:::-;;;;4140:150;;;-1:-1:-1::0;4299:56:64::1;::::0;;;;:22:::1;:12;:22;::::0;::::1;::::0;:56:::1;::::0;4322:17:::1;::::0;4341:13;;;;4299:56:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;;4026:336:::0;;;;:::o;4930:141::-;778:5:34;;;;764:10;:19;756:44;;;;;;;11900:2:101;756:44:34;;;11882:21:101;11939:2;11919:18;;;11912:30;11978:14;11958:18;;;11951:42;12010:18;;756:44:34;11698:336:101;756:44:34;4999:65:64::1;5031:9;5042:21;4999:31;:65::i;:::-;4930:141:::0;:::o;4539:238::-;778:5:34;;;;764:10;:19;756:44;;;;;;;11900:2:101;756:44:34;;;11882:21:101;11939:2;11919:18;;;11912:30;11978:14;11958:18;;;11951:42;12010:18;;756:44:34;11698:336:101;756:44:34;4629:29:64::1;::::0;;;;4652:4:::1;4629:29;::::0;::::1;2971:74:101::0;4607:19:64::1;::::0;4629:4:::1;:14;;::::0;::::1;::::0;2944:18:101;;4629:29:64::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4669:26;::::0;;;;::::1;::::0;::::1;14910:25:101::0;;;4607:51:64;;-1:-1:-1;4669:4:64::1;:13;;::::0;::::1;::::0;14883:18:101;;4669:26:64::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4705:65;4737:9;4748:21;4705:31;:65::i;:::-;4597:180;4539:238:::0;:::o;1915:170::-;1288:10;:31;1302:17;1288:31;;1284:91;;1342:22;;;;;;;;;;;;;;1284:91;2030:48:::1;::::0;;;;:27:::1;:7;:27;::::0;::::1;::::0;:48:::1;::::0;2058:5;;2065:12;;;;2030:48:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;2153:184:::0;1288:10;:31;1302:17;1288:31;;1284:91;;1342:22;;;;;;;;;;;;;;1284:91;2276:54:::1;::::0;;;;:32:::1;:7;:32;::::0;::::1;::::0;:54:::1;::::0;2309:6;;;;2317:12;;;;2276:54:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2153:184:::0;;;;:::o;1312:161:34:-;778:5;;;;764:10;:19;756:44;;;;;;;11900:2:101;756:44:34;;;11882:21:101;11939:2;11919:18;;;11912:30;11978:14;11958:18;;;11951:42;12010:18;;756:44:34;11698:336:101;756:44:34;1392:5:::1;:16:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;1424:42:::1;::::0;1392:16;;1445:10:::1;::::0;1424:42:::1;::::0;1392:5;1424:42:::1;1312:161:::0;:::o;4729:1605:38:-;4840:12;5010:4;5004:11;5152:66;5133:17;5126:93;5274:42;5270:2;5266:51;5262:1;5243:17;5239:25;5232:86;5404:6;5399:2;5380:17;5376:26;5369:42;6256:2;6253:1;6249:2;6230:17;6227:1;6220:5;6213;6208:51;5777:16;5770:24;5764:2;5746:16;5743:24;5739:1;5735;5729:8;5726:15;5722:46;5719:76;5519:754;5508:765;;;6301:7;6293:34;;;;;;;17468:2:101;6293:34:38;;;17450:21:101;17507:2;17487:18;;;17480:30;17546:16;17526:18;;;17519:44;17580:18;;6293:34:38;17266:338:101;6293:34:38;4830:1504;4729:1605;;;:::o;2135:221:51:-;2214:12;2231:9;:14;;2253:6;444:4;2231:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2213:83;;;2311:7;2306:43;;2327:22;;;;;;;;;;;;;;2306:43;2203:153;2135:221;;:::o;799:339:38:-;871:12;1070:1;1067;1064;1061;1053:6;1049:2;1042:5;1037:35;1026:46;;1100:7;1092:39;;;;;;;18021:2:101;1092:39:38;;;18003:21:101;18060:2;18040:18;;;18033:30;18099:21;18079:18;;;18072:49;18138:18;;1092:39:38;17819:343:101;14:389;99:8;109:6;163:3;156:4;148:6;144:17;140:27;130:55;;181:1;178;171:12;130:55;-1:-1:-1;204:20:101;;247:18;236:30;;233:50;;;279:1;276;269:12;233:50;316:4;308:6;304:17;292:29;;376:3;369:4;359:6;356:1;352:14;344:6;340:27;336:38;333:47;330:67;;;393:1;390;383:12;330:67;14:389;;;;;:::o;408:347::-;459:8;469:6;523:3;516:4;508:6;504:17;500:27;490:55;;541:1;538;531:12;490:55;-1:-1:-1;564:20:101;;607:18;596:30;;593:50;;;639:1;636;629:12;593:50;676:4;668:6;664:17;652:29;;728:3;721:4;712:6;704;700:19;696:30;693:39;690:59;;;745:1;742;735:12;760:801;900:6;908;916;924;977:2;965:9;956:7;952:23;948:32;945:52;;;993:1;990;983:12;945:52;1033:9;1020:23;1062:18;1103:2;1095:6;1092:14;1089:34;;;1119:1;1116;1109:12;1089:34;1158:92;1242:7;1233:6;1222:9;1218:22;1158:92;:::i;:::-;1269:8;;-1:-1:-1;1132:118:101;-1:-1:-1;1357:2:101;1342:18;;1329:32;;-1:-1:-1;1373:16:101;;;1370:36;;;1402:1;1399;1392:12;1370:36;;1441:60;1493:7;1482:8;1471:9;1467:24;1441:60;:::i;:::-;760:801;;;;-1:-1:-1;1520:8:101;-1:-1:-1;;;;760:801:101:o;1566:843::-;1714:6;1722;1730;1738;1791:2;1779:9;1770:7;1766:23;1762:32;1759:52;;;1807:1;1804;1797:12;1759:52;1847:9;1834:23;1876:18;1917:2;1909:6;1906:14;1903:34;;;1933:1;1930;1923:12;1903:34;1972:92;2056:7;2047:6;2036:9;2032:22;1972:92;:::i;:::-;2083:8;;-1:-1:-1;1946:118:101;-1:-1:-1;2171:2:101;2156:18;;2143:32;;-1:-1:-1;2187:16:101;;;2184:36;;;2216:1;2213;2206:12;2184:36;;2255:94;2341:7;2330:8;2319:9;2315:24;2255:94;:::i;2414:154::-;2500:42;2493:5;2489:54;2482:5;2479:65;2469:93;;2558:1;2555;2548:12;2573:247;2632:6;2685:2;2673:9;2664:7;2660:23;2656:32;2653:52;;;2701:1;2698;2691:12;2653:52;2740:9;2727:23;2759:31;2784:5;2759:31;:::i;:::-;2809:5;2573:247;-1:-1:-1;;;2573:247:101:o;3056:699::-;3167:6;3175;3183;3236:2;3224:9;3215:7;3211:23;3207:32;3204:52;;;3252:1;3249;3242:12;3204:52;3292:9;3279:23;3321:18;3362:2;3354:6;3351:14;3348:34;;;3378:1;3375;3368:12;3348:34;3401:22;;;;3457:2;3439:16;;;3435:25;3432:45;;;3473:1;3470;3463:12;3432:45;3496:2;;-1:-1:-1;3551:2:101;3536:18;;3523:32;;3567:16;;;3564:36;;;3596:1;3593;3586:12;3564:36;;3635:60;3687:7;3676:8;3665:9;3661:24;3635:60;:::i;:::-;3056:699;;3714:8;;-1:-1:-1;3609:86:101;;-1:-1:-1;;;;3056:699:101:o;4564:184::-;4616:77;4613:1;4606:88;4713:4;4710:1;4703:15;4737:4;4734:1;4727:15;4753:334;4824:2;4818:9;4880:2;4870:13;;4885:66;4866:86;4854:99;;4983:18;4968:34;;5004:22;;;4965:62;4962:88;;;5030:18;;:::i;:::-;5066:2;5059:22;4753:334;;-1:-1:-1;4753:334:101:o;5092:183::-;5152:4;5185:18;5177:6;5174:30;5171:56;;;5207:18;;:::i;:::-;-1:-1:-1;5252:1:101;5248:14;5264:4;5244:25;;5092:183::o;5280:737::-;5334:5;5387:3;5380:4;5372:6;5368:17;5364:27;5354:55;;5405:1;5402;5395:12;5354:55;5441:6;5428:20;5467:4;5491:60;5507:43;5547:2;5507:43;:::i;:::-;5491:60;:::i;:::-;5585:15;;;5671:1;5667:10;;;;5655:23;;5651:32;;;5616:12;;;;5695:15;;;5692:35;;;5723:1;5720;5713:12;5692:35;5759:2;5751:6;5747:15;5771:217;5787:6;5782:3;5779:15;5771:217;;;5867:3;5854:17;5884:31;5909:5;5884:31;:::i;:::-;5928:18;;5966:12;;;;5804;;5771:217;;;-1:-1:-1;6006:5:101;5280:737;-1:-1:-1;;;;;;5280:737:101:o;6022:245::-;6070:4;6103:18;6095:6;6092:30;6089:56;;;6125:18;;:::i;:::-;-1:-1:-1;6182:2:101;6170:15;6187:66;6166:88;6256:4;6162:99;;6022:245::o;6272:2128::-;6433:6;6441;6449;6502:2;6490:9;6481:7;6477:23;6473:32;6470:52;;;6518:1;6515;6508:12;6470:52;6558:9;6545:23;6587:18;6628:2;6620:6;6617:14;6614:34;;;6644:1;6641;6634:12;6614:34;6667:61;6720:7;6711:6;6700:9;6696:22;6667:61;:::i;:::-;6657:71;;6747:2;6737:12;;6802:2;6791:9;6787:18;6774:32;6831:2;6821:8;6818:16;6815:36;;;6847:1;6844;6837:12;6815:36;6870:63;6925:7;6914:8;6903:9;6899:24;6870:63;:::i;:::-;6860:73;;;6952:2;7007;6996:9;6992:18;6979:32;7036:2;7026:8;7023:16;7020:36;;;7052:1;7049;7042:12;7020:36;7075:24;;7130:4;7122:13;;7118:27;-1:-1:-1;7108:55:101;;7159:1;7156;7149:12;7108:55;7195:2;7182:16;7218:60;7234:43;7274:2;7234:43;:::i;7218:60::-;7312:15;;;7394:1;7390:10;;;;7382:19;;7378:28;;;7343:12;;;;7418:19;;;7415:39;;;7450:1;7447;7440:12;7415:39;7482:2;7478;7474:11;7494:876;7510:6;7505:3;7502:15;7494:876;;;7596:3;7583:17;7632:2;7619:11;7616:19;7613:109;;;7676:1;7705:2;7701;7694:14;7613:109;7745:20;;7800:2;7792:11;;7788:25;-1:-1:-1;7778:123:101;;7855:1;7884:2;7880;7873:14;7778:123;7945:2;7941;7937:11;7924:25;7975:48;7991:31;8019:2;7991:31;:::i;7975:48::-;8050:2;8043:5;8036:17;8094:7;8089:2;8084;8080;8076:11;8072:20;8069:33;8066:126;;;8144:1;8174:3;8169;8162:16;8066:126;8247:2;8242;8238;8234:11;8229:2;8222:5;8218:14;8205:45;8295:1;8274:14;;;8270:23;;8263:34;;;;8310:18;;-1:-1:-1;8348:12:101;;;;7527;;7494:876;;;7498:3;8389:5;8379:15;;;;;;;;;6272:2128;;;;;:::o;8405:184::-;8457:77;8454:1;8447:88;8554:4;8551:1;8544:15;8578:4;8575:1;8568:15;8594:250;8679:1;8689:113;8703:6;8700:1;8697:13;8689:113;;;8779:11;;;8773:18;8760:11;;;8753:39;8725:2;8718:10;8689:113;;;-1:-1:-1;;8836:1:101;8818:16;;8811:27;8594:250::o;8849:1201::-;9037:4;9085:2;9074:9;9070:18;9115:6;9104:9;9097:25;9141:2;9179;9174;9163:9;9159:18;9152:30;9202:6;9237;9231:13;9268:6;9260;9253:22;9306:2;9295:9;9291:18;9284:25;;9368:2;9358:6;9355:1;9351:14;9340:9;9336:30;9332:39;9318:53;;9406:2;9398:6;9394:15;9427:1;9437:584;9451:6;9448:1;9445:13;9437:584;;;9540:66;9528:9;9520:6;9516:22;9512:95;9507:3;9500:108;9637:6;9631:13;9679:2;9673:9;9710:8;9702:6;9695:24;9732:74;9797:8;9792:2;9784:6;9780:15;9775:2;9771;9767:11;9732:74;:::i;:::-;9863:2;9849:17;9868:66;9845:90;9833:103;;;;9829:112;;;-1:-1:-1;9999:12:101;;;;9964:15;;;;9473:1;9466:9;9437:584;;;-1:-1:-1;10038:6:101;;8849:1201;-1:-1:-1;;;;;;;;8849:1201:101:o;10055:1638::-;10159:6;10190:2;10233;10221:9;10212:7;10208:23;10204:32;10201:52;;;10249:1;10246;10239:12;10201:52;10282:9;10276:16;10311:18;10352:2;10344:6;10341:14;10338:34;;;10368:1;10365;10358:12;10338:34;10406:6;10395:9;10391:22;10381:32;;10451:7;10444:4;10440:2;10436:13;10432:27;10422:55;;10473:1;10470;10463:12;10422:55;10502:2;10496:9;10525:60;10541:43;10581:2;10541:43;:::i;10525:60::-;10619:15;;;10701:1;10697:10;;;;10689:19;;10685:28;;;10650:12;;;;10725:19;;;10722:39;;;10757:1;10754;10747:12;10722:39;10789:2;10785;10781:11;10801:862;10817:6;10812:3;10809:15;10801:862;;;10896:3;10890:10;10932:2;10919:11;10916:19;10913:109;;;10976:1;11005:2;11001;10994:14;10913:109;11045:20;;11100:2;11092:11;;11088:25;-1:-1:-1;11078:123:101;;11155:1;11184:2;11180;11173:14;11078:123;11238:2;11234;11230:11;11224:18;11265:2;11293:48;11309:31;11337:2;11309:31;:::i;11293:48::-;11368:2;11361:5;11354:17;11412:7;11407:2;11402;11398;11394:11;11390:20;11387:33;11384:126;;;11462:1;11492:3;11487;11480:16;11384:126;11523:67;11587:2;11582;11575:5;11571:14;11566:2;11562;11558:11;11523:67;:::i;:::-;11603:18;;-1:-1:-1;;;11641:12:101;;;;10834;;10801:862;;;-1:-1:-1;11682:5:101;10055:1638;-1:-1:-1;;;;;;;;10055:1638:101:o;12306:349::-;12345:3;12376:66;12369:5;12366:77;12363:257;;12476:77;12473:1;12466:88;12577:4;12574:1;12567:15;12605:4;12602:1;12595:15;12363:257;-1:-1:-1;12647:1:101;12636:13;;12306:349::o;12660:325::-;12748:6;12743:3;12736:19;12800:6;12793:5;12786:4;12781:3;12777:14;12764:43;;12852:1;12845:4;12836:6;12831:3;12827:16;12823:27;12816:38;12718:3;12974:4;12904:66;12899:2;12891:6;12887:15;12883:88;12878:3;12874:98;12870:109;12863:116;;12660:325;;;;:::o;12990:559::-;13048:5;13055:6;13115:3;13102:17;13197:66;13186:8;13170:14;13166:29;13162:102;13142:18;13138:127;13128:155;;13279:1;13276;13269:12;13128:155;13307:33;;13411:4;13398:18;;;-1:-1:-1;13359:21:101;;-1:-1:-1;13439:18:101;13428:30;;13425:50;;;13471:1;13468;13461:12;13425:50;13518:6;13502:14;13498:27;13491:5;13487:39;13484:59;;;13539:1;13536;13529:12;13554:1016;13754:4;13802:2;13791:9;13787:18;13832:6;13821:9;13814:25;13858:2;13896;13891;13880:9;13876:18;13869:30;13919:6;13949;13941;13934:22;13987:2;13976:9;13972:18;13965:25;;14049:2;14039:6;14036:1;14032:14;14021:9;14017:30;14013:39;13999:53;;14075:6;14099:1;14109:432;14123:6;14120:1;14117:13;14109:432;;;14212:66;14200:9;14192:6;14188:22;14184:95;14179:3;14172:108;14329:46;14368:6;14360;14329:46;:::i;:::-;14398:63;14454:6;14439:13;14424;14398:63;:::i;:::-;14388:73;-1:-1:-1;;;14519:12:101;;;;14484:15;;;;14145:1;14138:9;14109:432;;;-1:-1:-1;14558:6:101;;13554:1016;-1:-1:-1;;;;;;;;13554:1016:101:o;14575:184::-;14645:6;14698:2;14686:9;14677:7;14673:23;14669:32;14666:52;;;14714:1;14711;14704:12;14666:52;-1:-1:-1;14737:16:101;;14575:184;-1:-1:-1;14575:184:101:o;14946:509::-;15009:3;15061:44;15099:5;15092;15061:44;:::i;:::-;15126:4;15121:3;15114:17;15152:69;15215:4;15210:3;15206:14;15192:12;15178;15152:69;:::i;:::-;15140:81;;;15268:55;15317:4;15310:5;15306:16;15299:5;15268:55;:::i;:::-;15365:3;15359:4;15355:14;15348:4;15343:3;15339:14;15332:38;15386:63;15444:4;15428:14;15412;15386:63;:::i;:::-;15379:70;14946:509;-1:-1:-1;;;;;;14946:509:101:o;15460:470::-;15707:2;15696:9;15689:21;15670:4;15733:66;15795:2;15784:9;15780:18;15772:6;15733:66;:::i;:::-;15847:9;15839:6;15835:22;15830:2;15819:9;15815:18;15808:50;15875:49;15917:6;15909;15901;15875:49;:::i;15935:1326::-;16253:2;16265:21;;;16238:18;;16321:22;;;-1:-1:-1;16374:2:101;16423:1;16419:14;;;16404:30;;16400:39;;;16359:18;;16462:6;-1:-1:-1;;16517:611:101;16533:6;16528:3;16525:15;16517:611;;;16626:66;16614:9;16606:6;16602:22;16598:95;16593:3;16586:108;16746:6;16733:20;16833:66;16824:6;16808:14;16804:27;16800:100;16780:18;16776:125;16766:153;;16915:1;16912;16905:12;16766:153;16942:79;17014:6;17005;16985:18;16981:31;16942:79;:::i;:::-;16932:89;-1:-1:-1;;17044:4:101;17106:12;;;;17071:15;;;;;16559:1;16550:11;16517:611;;;16521:3;;;;17178:9;17170:6;17166:22;17159:4;17148:9;17144:20;17137:52;17206:49;17248:6;17240;17232;17206:49;:::i;:::-;17198:57;15935:1326;-1:-1:-1;;;;;;;15935:1326:101:o",
    "linkReferences": {},
    "immutableReferences": {
      "38033": [
        {
          "start": 601,
          "length": 32
        },
        {
          "start": 906,
          "length": 32
        },
        {
          "start": 1302,
          "length": 32
        },
        {
          "start": 1514,
          "length": 32
        }
      ],
      "38035": [
        {
          "start": 2360,
          "length": 32
        },
        {
          "start": 2635,
          "length": 32
        }
      ],
      "38038": [
        {
          "start": 475,
          "length": 32
        },
        {
          "start": 754,
          "length": 32
        },
        {
          "start": 1106,
          "length": 32
        },
        {
          "start": 2508,
          "length": 32
        },
        {
          "start": 2783,
          "length": 32
        }
      ],
      "38041": [
        {
          "start": 2031,
          "length": 32
        },
        {
          "start": 2209,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "execute((bytes,bytes),bytes)": "d0f2d8ac",
    "executeBatch((bytes,bytes)[],bytes)": "e5135ec6",
    "multicall(address[],bytes[])": "63fb0b96",
    "owner()": "8da5cb5b",
    "reactorCallback(((address,address,uint256,uint256,address,bytes),(address,uint256,uint256),(address,uint256,address)[],bytes,bytes32)[],bytes)": "585da628",
    "transferOwnership(address)": "f2fde38b",
    "unwrapWETH(address)": "89a3f136",
    "withdrawETH(address)": "690d8320"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_whitelistedCaller\",\"type\":\"address\"},{\"internalType\":\"contract IReactor\",\"name\":\"_reactor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"contract ISwapRouter02\",\"name\":\"_swapRouter02\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CallerNotWhitelisted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MsgSenderNotReactor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeTransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedOrder\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"callbackData\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedOrder[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"callbackData\",\"type\":\"bytes\"}],\"name\":\"executeBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20[]\",\"name\":\"tokensToApprove\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"multicallData\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IReactor\",\"name\":\"reactor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"contract IValidationCallback\",\"name\":\"additionalValidationContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"additionalValidationData\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderInfo\",\"name\":\"info\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct InputToken\",\"name\":\"input\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct OutputToken[]\",\"name\":\"outputs\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct ResolvedOrder[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"callbackData\",\"type\":\"bytes\"}],\"name\":\"reactorCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"multicall(address[],bytes[])\":{\"params\":{\"multicallData\":\"Pass into swapRouter02.multicall()\",\"tokensToApprove\":\"Max approve these tokens to swapRouter02\"}},\"reactorCallback(((address,address,uint256,uint256,address,bytes),(address,uint256,uint256),(address,uint256,address)[],bytes,bytes32)[],bytes)\":{\"params\":{\"callbackData\":\"It has the below encoded: address[] memory tokensToApproveForSwapRouter02: Max approve these tokens to swapRouter02 address[] memory tokensToApproveForReactor: Max approve these tokens to reactor bytes[] memory multicallData: Pass into swapRouter02.multicall()\"}},\"unwrapWETH(address)\":{\"params\":{\"recipient\":\"The address receiving ETH\"}},\"withdrawETH(address)\":{\"params\":{\"recipient\":\"The recipient of the ETH\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"CallerNotWhitelisted()\":[{\"notice\":\"thrown if reactorCallback is called with a non-whitelisted filler\"}],\"MsgSenderNotReactor()\":[{\"notice\":\"thrown if reactorCallback is called by an adress other than the reactor\"}],\"NativeTransferFailed()\":[{\"notice\":\"Thrown when a native transfer fails\"}]},\"kind\":\"user\",\"methods\":{\"execute((bytes,bytes),bytes)\":{\"notice\":\"assume that we already have all output tokens\"},\"executeBatch((bytes,bytes)[],bytes)\":{\"notice\":\"assume that we already have all output tokens\"},\"multicall(address[],bytes[])\":{\"notice\":\"This function can be used to convert ERC20s to ETH that remains in this contract\"},\"reactorCallback(((address,address,uint256,uint256,address,bytes),(address,uint256,uint256),(address,uint256,address)[],bytes,bytes32)[],bytes)\":{\"notice\":\"fill UniswapX orders using SwapRouter02\"},\"unwrapWETH(address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to the recipient as ETH. Can only be called by owner.\"},\"withdrawETH(address)\":{\"notice\":\"Transfer all ETH in this contract to the recipient. Can only be called by owner.\"}},\"notice\":\"A fill contract that uses SwapRouter02 to execute trades\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/sample-executors/SwapRouter02Executor.sol\":\"SwapRouter02Executor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/\",\":solmate/=lib/solmate/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/permit2/src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x78931704a7f1d89ef24244b155863abb751cc3b3818f64303ccb47a396d48dcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8d6e198ee29d809564f1c1d7caa11a2c329bb5d051f61210548e546493444d2\",\"dweb:/ipfs/QmVxWftbgETjudymgLdwF77S54DWrp6qB5ooauKXW81cm7\"]},\"lib/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xea70db68ce450ad38dfbd490058595441144808eb95272ae9b89e3fbe6456954\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fad9ff319665acdc2f1295bb82db3e5b4d52babc0b58f147dbdbb9f322c6e5\",\"dweb:/ipfs/QmTbYJPcux8eJ3qGVYQh6TiwCA2FPu6HXTUg6QFTnX91Ks\"]},\"lib/permit2/src/interfaces/IPermit2.sol\":{\"keccak256\":\"0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d\",\"dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96\"]},\"lib/permit2/src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0x6805563eaad92471fa1b3591a71d7020a93e59f1a4ac95398daf74927f5bd033\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48cd13806cb8e82dcc38eb93423a372fbdd3b05364ecebb8bfd9cd29078dd90c\",\"dweb:/ipfs/QmeLyFVrzKRHcm6aaFFBCG5mFESCqWLp1KYT41H8XhzMCp\"]},\"lib/solmate/src/auth/Owned.sol\":{\"keccak256\":\"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4\",\"dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/tokens/WETH.sol\":{\"keccak256\":\"0x343cf5f6b643864c5728fa9bf057c5708052402b22c5662decce94f5febff514\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://dc3722cf992cc13ff0728660432092d8ae6851f500b24c0aa474c45f2e8c3f2d\",\"dweb:/ipfs/QmVq7veVaBKKdm4AKQiuCXMPGHPuCcPksm7LNuA2ihpN9U\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x6ab948013c2c7ca6351e593600425b0ec6df9035320280c678e735bce16e996b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2ab977d0eeb2bf458f9798250215c646d2f3b1f90b5a7e2b506fdf3335c0f060\",\"dweb:/ipfs/QmYPRoPhNtBAmCSq7imN1scMVpKNQvMTpoqab3tXUx5Tnv\"]},\"src/base/ReactorStructs.sol\":{\"keccak256\":\"0x78e6db322ca69aaf552e59d5e74a00fd465a802388c2d03f9bf4b711f5704588\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://12d8fc82c3543bfe0d2cd44cdbc524bed1f074abafe086f7e58573cbaff2a74e\",\"dweb:/ipfs/QmREbamTn3nz89nEjv2uWHNHKSF6Yga2gQ688Cde89xcNT\"]},\"src/external/ISwapRouter02.sol\":{\"keccak256\":\"0x512ae86f361c4bc7bd80ec6ba1b4c8eb0fe7f225ad43a5c68f578af244b3ac84\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8ea27f14058b141c326c2575357702d8282b106706acc946d998e84531494d6c\",\"dweb:/ipfs/QmUWc8AQLYQ955te2Xjuq1vTBeSQByEcNsDht42yw6SZRK\"]},\"src/interfaces/IReactor.sol\":{\"keccak256\":\"0x50bbe3534eedf1ebb75b164c38fa63135ef53f7239a2c268008375025eb1f101\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0061477bbe13910c973b3760c061fd68836ecbe7e4c1b1d704bcaf38c669f9b0\",\"dweb:/ipfs/QmNhehD2Uw7uuCFTmgcE134kMmioRzVk9GUFWmBqLD9whX\"]},\"src/interfaces/IReactorCallback.sol\":{\"keccak256\":\"0xf3ee1fe09545fc5be000c33bb6779e897b4e5013bd9de3e7c3107bf466b4dfa1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://12d7fd1ac3dca76614796f0d012ea4de79bf09cf124cc74efffdf25a56756344\",\"dweb:/ipfs/QmXyeSrG7caihgzUZdPdPbbRj6v1w65gBnfn9a7HhbVJX9\"]},\"src/interfaces/IValidationCallback.sol\":{\"keccak256\":\"0xe68fc4f5a2a5029e7f1881d01f5434acbcf0fef2e7ae1945593e01f5414a841e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b53ec74b51802cf75aa32c619da5ce7571ff22d305cb599ac3029ef840319d5b\",\"dweb:/ipfs/QmZjiFHQxv9BqMPSk2u4nF9hrwgmPCW3x5TUaXcK1J2bwj\"]},\"src/lib/CurrencyLibrary.sol\":{\"keccak256\":\"0x2ab6030f590607359825ae18d350850569d26d9d11a91a3e76cd2c4a966c90a6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e9cd60d9e22fe259023f9a25821f9edfa89d1a7a39e0e5517ff052dbff4f6fa3\",\"dweb:/ipfs/QmX5rnLjHWpokvQJzEWmX4eXYirVcv2Y6QsVAXsD3ap5Wq\"]},\"src/sample-executors/SwapRouter02Executor.sol\":{\"keccak256\":\"0x82908331ac9fa9d727e5abeaf7c5c1d256fa517ded3ceb964719b0100cd7be4c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://80421a0b96dde2c0203c1474d1438e8296613c7bf95b263c5603a73bea4ae937\",\"dweb:/ipfs/QmaCeKUmVdSGp2oa74f4uf6NxxSdNvJ2K4YHUxebQZeoZg\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_whitelistedCaller",
              "type": "address"
            },
            {
              "internalType": "contract IReactor",
              "name": "_reactor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "contract ISwapRouter02",
              "name": "_swapRouter02",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CallerNotWhitelisted"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MsgSenderNotReactor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NativeTransferFailed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct SignedOrder",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "order",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "callbackData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [
            {
              "internalType": "struct SignedOrder[]",
              "name": "orders",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "order",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "callbackData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "executeBatch"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20[]",
              "name": "tokensToApprove",
              "type": "address[]"
            },
            {
              "internalType": "bytes[]",
              "name": "multicallData",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ResolvedOrder[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct OrderInfo",
                  "name": "info",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IReactor",
                      "name": "reactor",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "swapper",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "contract IValidationCallback",
                      "name": "additionalValidationContract",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "additionalValidationData",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct InputToken",
                  "name": "input",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract ERC20",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAmount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct OutputToken[]",
                  "name": "outputs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "callbackData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reactorCallback"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unwrapWETH"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawETH"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "multicall(address[],bytes[])": {
            "params": {
              "multicallData": "Pass into swapRouter02.multicall()",
              "tokensToApprove": "Max approve these tokens to swapRouter02"
            }
          },
          "reactorCallback(((address,address,uint256,uint256,address,bytes),(address,uint256,uint256),(address,uint256,address)[],bytes,bytes32)[],bytes)": {
            "params": {
              "callbackData": "It has the below encoded: address[] memory tokensToApproveForSwapRouter02: Max approve these tokens to swapRouter02 address[] memory tokensToApproveForReactor: Max approve these tokens to reactor bytes[] memory multicallData: Pass into swapRouter02.multicall()"
            }
          },
          "unwrapWETH(address)": {
            "params": {
              "recipient": "The address receiving ETH"
            }
          },
          "withdrawETH(address)": {
            "params": {
              "recipient": "The recipient of the ETH"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "execute((bytes,bytes),bytes)": {
            "notice": "assume that we already have all output tokens"
          },
          "executeBatch((bytes,bytes)[],bytes)": {
            "notice": "assume that we already have all output tokens"
          },
          "multicall(address[],bytes[])": {
            "notice": "This function can be used to convert ERC20s to ETH that remains in this contract"
          },
          "reactorCallback(((address,address,uint256,uint256,address,bytes),(address,uint256,uint256),(address,uint256,address)[],bytes,bytes32)[],bytes)": {
            "notice": "fill UniswapX orders using SwapRouter02"
          },
          "unwrapWETH(address)": {
            "notice": "Unwraps the contract's WETH9 balance and sends it to the recipient as ETH. Can only be called by owner."
          },
          "withdrawETH(address)": {
            "notice": "Transfer all ETH in this contract to the recipient. Can only be called by owner."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":permit2/=lib/permit2/",
        ":solmate/=lib/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/sample-executors/SwapRouter02Executor.sol": "SwapRouter02Executor"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IAllowanceTransfer.sol": {
        "keccak256": "0x78931704a7f1d89ef24244b155863abb751cc3b3818f64303ccb47a396d48dcb",
        "urls": [
          "bzz-raw://b8d6e198ee29d809564f1c1d7caa11a2c329bb5d051f61210548e546493444d2",
          "dweb:/ipfs/QmVxWftbgETjudymgLdwF77S54DWrp6qB5ooauKXW81cm7"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IEIP712.sol": {
        "keccak256": "0xea70db68ce450ad38dfbd490058595441144808eb95272ae9b89e3fbe6456954",
        "urls": [
          "bzz-raw://e8fad9ff319665acdc2f1295bb82db3e5b4d52babc0b58f147dbdbb9f322c6e5",
          "dweb:/ipfs/QmTbYJPcux8eJ3qGVYQh6TiwCA2FPu6HXTUg6QFTnX91Ks"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IPermit2.sol": {
        "keccak256": "0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771",
        "urls": [
          "bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d",
          "dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/ISignatureTransfer.sol": {
        "keccak256": "0x6805563eaad92471fa1b3591a71d7020a93e59f1a4ac95398daf74927f5bd033",
        "urls": [
          "bzz-raw://48cd13806cb8e82dcc38eb93423a372fbdd3b05364ecebb8bfd9cd29078dd90c",
          "dweb:/ipfs/QmeLyFVrzKRHcm6aaFFBCG5mFESCqWLp1KYT41H8XhzMCp"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/auth/Owned.sol": {
        "keccak256": "0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea",
        "urls": [
          "bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4",
          "dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/WETH.sol": {
        "keccak256": "0x343cf5f6b643864c5728fa9bf057c5708052402b22c5662decce94f5febff514",
        "urls": [
          "bzz-raw://dc3722cf992cc13ff0728660432092d8ae6851f500b24c0aa474c45f2e8c3f2d",
          "dweb:/ipfs/QmVq7veVaBKKdm4AKQiuCXMPGHPuCcPksm7LNuA2ihpN9U"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x6ab948013c2c7ca6351e593600425b0ec6df9035320280c678e735bce16e996b",
        "urls": [
          "bzz-raw://2ab977d0eeb2bf458f9798250215c646d2f3b1f90b5a7e2b506fdf3335c0f060",
          "dweb:/ipfs/QmYPRoPhNtBAmCSq7imN1scMVpKNQvMTpoqab3tXUx5Tnv"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/base/ReactorStructs.sol": {
        "keccak256": "0x78e6db322ca69aaf552e59d5e74a00fd465a802388c2d03f9bf4b711f5704588",
        "urls": [
          "bzz-raw://12d8fc82c3543bfe0d2cd44cdbc524bed1f074abafe086f7e58573cbaff2a74e",
          "dweb:/ipfs/QmREbamTn3nz89nEjv2uWHNHKSF6Yga2gQ688Cde89xcNT"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/external/ISwapRouter02.sol": {
        "keccak256": "0x512ae86f361c4bc7bd80ec6ba1b4c8eb0fe7f225ad43a5c68f578af244b3ac84",
        "urls": [
          "bzz-raw://8ea27f14058b141c326c2575357702d8282b106706acc946d998e84531494d6c",
          "dweb:/ipfs/QmUWc8AQLYQ955te2Xjuq1vTBeSQByEcNsDht42yw6SZRK"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IReactor.sol": {
        "keccak256": "0x50bbe3534eedf1ebb75b164c38fa63135ef53f7239a2c268008375025eb1f101",
        "urls": [
          "bzz-raw://0061477bbe13910c973b3760c061fd68836ecbe7e4c1b1d704bcaf38c669f9b0",
          "dweb:/ipfs/QmNhehD2Uw7uuCFTmgcE134kMmioRzVk9GUFWmBqLD9whX"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IReactorCallback.sol": {
        "keccak256": "0xf3ee1fe09545fc5be000c33bb6779e897b4e5013bd9de3e7c3107bf466b4dfa1",
        "urls": [
          "bzz-raw://12d7fd1ac3dca76614796f0d012ea4de79bf09cf124cc74efffdf25a56756344",
          "dweb:/ipfs/QmXyeSrG7caihgzUZdPdPbbRj6v1w65gBnfn9a7HhbVJX9"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IValidationCallback.sol": {
        "keccak256": "0xe68fc4f5a2a5029e7f1881d01f5434acbcf0fef2e7ae1945593e01f5414a841e",
        "urls": [
          "bzz-raw://b53ec74b51802cf75aa32c619da5ce7571ff22d305cb599ac3029ef840319d5b",
          "dweb:/ipfs/QmZjiFHQxv9BqMPSk2u4nF9hrwgmPCW3x5TUaXcK1J2bwj"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/CurrencyLibrary.sol": {
        "keccak256": "0x2ab6030f590607359825ae18d350850569d26d9d11a91a3e76cd2c4a966c90a6",
        "urls": [
          "bzz-raw://e9cd60d9e22fe259023f9a25821f9edfa89d1a7a39e0e5517ff052dbff4f6fa3",
          "dweb:/ipfs/QmX5rnLjHWpokvQJzEWmX4eXYirVcv2Y6QsVAXsD3ap5Wq"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/sample-executors/SwapRouter02Executor.sol": {
        "keccak256": "0x82908331ac9fa9d727e5abeaf7c5c1d256fa517ded3ceb964719b0100cd7be4c",
        "urls": [
          "bzz-raw://80421a0b96dde2c0203c1474d1438e8296613c7bf95b263c5603a73bea4ae937",
          "dweb:/ipfs/QmaCeKUmVdSGp2oa74f4uf6NxxSdNvJ2K4YHUxebQZeoZg"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/sample-executors/SwapRouter02Executor.sol",
    "id": 38399,
    "exportedSymbols": {
      "CurrencyLibrary": [
        35897
      ],
      "ERC20": [
        34410
      ],
      "IReactor": [
        35610
      ],
      "IReactorCallback": [
        35626
      ],
      "ISwapRouter02": [
        35549
      ],
      "OutputToken": [
        35451
      ],
      "Owned": [
        34022
      ],
      "ResolvedOrder": [
        35466
      ],
      "SafeTransferLib": [
        34733
      ],
      "SignedOrder": [
        35471
      ],
      "SwapRouter02Executor": [
        38398
      ],
      "WETH": [
        34489
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:5149:64",
    "nodes": [
      {
        "id": 37992,
        "nodeType": "PragmaDirective",
        "src": "45:23:64",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 37994,
        "nodeType": "ImportDirective",
        "src": "70:49:64",
        "nodes": [],
        "absolutePath": "lib/solmate/src/auth/Owned.sol",
        "file": "solmate/src/auth/Owned.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38399,
        "sourceUnit": 34023,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37993,
              "name": "Owned",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34022,
              "src": "78:5:64",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37996,
        "nodeType": "ImportDirective",
        "src": "120:70:64",
        "nodes": [],
        "absolutePath": "lib/solmate/src/utils/SafeTransferLib.sol",
        "file": "solmate/src/utils/SafeTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38399,
        "sourceUnit": 34734,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37995,
              "name": "SafeTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34733,
              "src": "128:15:64",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37998,
        "nodeType": "ImportDirective",
        "src": "191:51:64",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/src/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38399,
        "sourceUnit": 34411,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37997,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34410,
              "src": "199:5:64",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38000,
        "nodeType": "ImportDirective",
        "src": "243:49:64",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/WETH.sol",
        "file": "solmate/src/tokens/WETH.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38399,
        "sourceUnit": 34490,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37999,
              "name": "WETH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34489,
              "src": "251:4:64",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38002,
        "nodeType": "ImportDirective",
        "src": "293:68:64",
        "nodes": [],
        "absolutePath": "src/interfaces/IReactorCallback.sol",
        "file": "../interfaces/IReactorCallback.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38399,
        "sourceUnit": 35627,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38001,
              "name": "IReactorCallback",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35626,
              "src": "301:16:64",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38004,
        "nodeType": "ImportDirective",
        "src": "362:52:64",
        "nodes": [],
        "absolutePath": "src/interfaces/IReactor.sol",
        "file": "../interfaces/IReactor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38399,
        "sourceUnit": 35611,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38003,
              "name": "IReactor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35610,
              "src": "370:8:64",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38006,
        "nodeType": "ImportDirective",
        "src": "415:59:64",
        "nodes": [],
        "absolutePath": "src/lib/CurrencyLibrary.sol",
        "file": "../lib/CurrencyLibrary.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38399,
        "sourceUnit": 35898,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38005,
              "name": "CurrencyLibrary",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35897,
              "src": "423:15:64",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38010,
        "nodeType": "ImportDirective",
        "src": "475:83:64",
        "nodes": [],
        "absolutePath": "src/base/ReactorStructs.sol",
        "file": "../base/ReactorStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38399,
        "sourceUnit": 35472,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38007,
              "name": "ResolvedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35466,
              "src": "483:13:64",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 38008,
              "name": "OutputToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35451,
              "src": "498:11:64",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 38009,
              "name": "SignedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35471,
              "src": "511:11:64",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38012,
        "nodeType": "ImportDirective",
        "src": "559:60:64",
        "nodes": [],
        "absolutePath": "src/external/ISwapRouter02.sol",
        "file": "../external/ISwapRouter02.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38399,
        "sourceUnit": 35550,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38011,
              "name": "ISwapRouter02",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35549,
              "src": "567:13:64",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38398,
        "nodeType": "ContractDefinition",
        "src": "690:4503:64",
        "nodes": [
          {
            "id": 38021,
            "nodeType": "UsingForDirective",
            "src": "753:32:64",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 38018,
              "name": "SafeTransferLib",
              "nameLocations": [
                "759:15:64"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34733,
              "src": "759:15:64"
            },
            "typeName": {
              "id": 38020,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 38019,
                "name": "ERC20",
                "nameLocations": [
                  "779:5:64"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 34410,
                "src": "779:5:64"
              },
              "referencedDeclaration": 34410,
              "src": "779:5:64",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$34410",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 38024,
            "nodeType": "UsingForDirective",
            "src": "790:34:64",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 38022,
              "name": "CurrencyLibrary",
              "nameLocations": [
                "796:15:64"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35897,
              "src": "796:15:64"
            },
            "typeName": {
              "id": 38023,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "816:7:64",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 38027,
            "nodeType": "ErrorDefinition",
            "src": "912:29:64",
            "nodes": [],
            "documentation": {
              "id": 38025,
              "nodeType": "StructuredDocumentation",
              "src": "830:77:64",
              "text": "@notice thrown if reactorCallback is called with a non-whitelisted filler"
            },
            "errorSelector": "8c6e5d71",
            "name": "CallerNotWhitelisted",
            "nameLocation": "918:20:64",
            "parameters": {
              "id": 38026,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "938:2:64"
            }
          },
          {
            "id": 38030,
            "nodeType": "ErrorDefinition",
            "src": "1034:28:64",
            "nodes": [],
            "documentation": {
              "id": 38028,
              "nodeType": "StructuredDocumentation",
              "src": "946:83:64",
              "text": "@notice thrown if reactorCallback is called by an adress other than the reactor"
            },
            "errorSelector": "933fe52f",
            "name": "MsgSenderNotReactor",
            "nameLocation": "1040:19:64",
            "parameters": {
              "id": 38029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1059:2:64"
            }
          },
          {
            "id": 38033,
            "nodeType": "VariableDeclaration",
            "src": "1068:44:64",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "swapRouter02",
            "nameLocation": "1100:12:64",
            "scope": 38398,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISwapRouter02_$35549",
              "typeString": "contract ISwapRouter02"
            },
            "typeName": {
              "id": 38032,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 38031,
                "name": "ISwapRouter02",
                "nameLocations": [
                  "1068:13:64"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 35549,
                "src": "1068:13:64"
              },
              "referencedDeclaration": 35549,
              "src": "1068:13:64",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapRouter02_$35549",
                "typeString": "contract ISwapRouter02"
              }
            },
            "visibility": "private"
          },
          {
            "id": 38035,
            "nodeType": "VariableDeclaration",
            "src": "1118:43:64",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "whitelistedCaller",
            "nameLocation": "1144:17:64",
            "scope": 38398,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 38034,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1118:7:64",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 38038,
            "nodeType": "VariableDeclaration",
            "src": "1167:34:64",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "reactor",
            "nameLocation": "1194:7:64",
            "scope": 38398,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IReactor_$35610",
              "typeString": "contract IReactor"
            },
            "typeName": {
              "id": 38037,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 38036,
                "name": "IReactor",
                "nameLocations": [
                  "1167:8:64"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 35610,
                "src": "1167:8:64"
              },
              "referencedDeclaration": 35610,
              "src": "1167:8:64",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IReactor_$35610",
                "typeString": "contract IReactor"
              }
            },
            "visibility": "private"
          },
          {
            "id": 38041,
            "nodeType": "VariableDeclaration",
            "src": "1207:27:64",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "weth",
            "nameLocation": "1230:4:64",
            "scope": 38398,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_WETH_$34489",
              "typeString": "contract WETH"
            },
            "typeName": {
              "id": 38040,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 38039,
                "name": "WETH",
                "nameLocations": [
                  "1207:4:64"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 34489,
                "src": "1207:4:64"
              },
              "referencedDeclaration": 34489,
              "src": "1207:4:64",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WETH_$34489",
                "typeString": "contract WETH"
              }
            },
            "visibility": "private"
          },
          {
            "id": 38054,
            "nodeType": "ModifierDefinition",
            "src": "1241:151:64",
            "nodes": [],
            "body": {
              "id": 38053,
              "nodeType": "Block",
              "src": "1274:118:64",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 38046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 38043,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1288:3:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 38044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1292:6:64",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1288:10:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 38045,
                      "name": "whitelistedCaller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38035,
                      "src": "1302:17:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1288:31:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 38051,
                  "nodeType": "IfStatement",
                  "src": "1284:91:64",
                  "trueBody": {
                    "id": 38050,
                    "nodeType": "Block",
                    "src": "1321:54:64",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 38047,
                            "name": "CallerNotWhitelisted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38027,
                            "src": "1342:20:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 38048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1342:22:64",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38049,
                        "nodeType": "RevertStatement",
                        "src": "1335:29:64"
                      }
                    ]
                  }
                },
                {
                  "id": 38052,
                  "nodeType": "PlaceholderStatement",
                  "src": "1384:1:64"
                }
              ]
            },
            "name": "onlyWhitelistedCaller",
            "nameLocation": "1250:21:64",
            "parameters": {
              "id": 38042,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1271:2:64"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 38070,
            "nodeType": "ModifierDefinition",
            "src": "1398:139:64",
            "nodes": [],
            "body": {
              "id": 38069,
              "nodeType": "Block",
              "src": "1421:116:64",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 38062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 38056,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1435:3:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 38057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1439:6:64",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1435:10:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 38060,
                          "name": "reactor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38038,
                          "src": "1457:7:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IReactor_$35610",
                            "typeString": "contract IReactor"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IReactor_$35610",
                            "typeString": "contract IReactor"
                          }
                        ],
                        "id": 38059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1449:7:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 38058,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1449:7:64",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 38061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1449:16:64",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1435:30:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 38067,
                  "nodeType": "IfStatement",
                  "src": "1431:89:64",
                  "trueBody": {
                    "id": 38066,
                    "nodeType": "Block",
                    "src": "1467:53:64",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 38063,
                            "name": "MsgSenderNotReactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38030,
                            "src": "1488:19:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 38064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1488:21:64",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38065,
                        "nodeType": "RevertStatement",
                        "src": "1481:28:64"
                      }
                    ]
                  }
                },
                {
                  "id": 38068,
                  "nodeType": "PlaceholderStatement",
                  "src": "1529:1:64"
                }
              ]
            },
            "name": "onlyReactor",
            "nameLocation": "1407:11:64",
            "parameters": {
              "id": 38055,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1418:2:64"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 38110,
            "nodeType": "FunctionDefinition",
            "src": "1543:304:64",
            "nodes": [],
            "body": {
              "id": 38109,
              "nodeType": "Block",
              "src": "1673:174:64",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 38088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38086,
                      "name": "whitelistedCaller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38035,
                      "src": "1683:17:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 38087,
                      "name": "_whitelistedCaller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38072,
                      "src": "1703:18:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1683:38:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38089,
                  "nodeType": "ExpressionStatement",
                  "src": "1683:38:64"
                },
                {
                  "expression": {
                    "id": 38092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38090,
                      "name": "reactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38038,
                      "src": "1731:7:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IReactor_$35610",
                        "typeString": "contract IReactor"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 38091,
                      "name": "_reactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38075,
                      "src": "1741:8:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IReactor_$35610",
                        "typeString": "contract IReactor"
                      }
                    },
                    "src": "1731:18:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IReactor_$35610",
                      "typeString": "contract IReactor"
                    }
                  },
                  "id": 38093,
                  "nodeType": "ExpressionStatement",
                  "src": "1731:18:64"
                },
                {
                  "expression": {
                    "id": 38096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38094,
                      "name": "swapRouter02",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38033,
                      "src": "1759:12:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapRouter02_$35549",
                        "typeString": "contract ISwapRouter02"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 38095,
                      "name": "_swapRouter02",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38080,
                      "src": "1774:13:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapRouter02_$35549",
                        "typeString": "contract ISwapRouter02"
                      }
                    },
                    "src": "1759:28:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapRouter02_$35549",
                      "typeString": "contract ISwapRouter02"
                    }
                  },
                  "id": 38097,
                  "nodeType": "ExpressionStatement",
                  "src": "1759:28:64"
                },
                {
                  "expression": {
                    "id": 38107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38098,
                      "name": "weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38041,
                      "src": "1797:4:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WETH_$34489",
                        "typeString": "contract WETH"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 38102,
                                  "name": "_swapRouter02",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38080,
                                  "src": "1817:13:64",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISwapRouter02_$35549",
                                    "typeString": "contract ISwapRouter02"
                                  }
                                },
                                "id": 38103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1831:5:64",
                                "memberName": "WETH9",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 35548,
                                "src": "1817:19:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 38104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1817:21:64",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 38101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1809:8:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 38100,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1809:8:64",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 38105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1809:30:64",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 38099,
                        "name": "WETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34489,
                        "src": "1804:4:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_WETH_$34489_$",
                          "typeString": "type(contract WETH)"
                        }
                      },
                      "id": 38106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1804:36:64",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WETH_$34489",
                        "typeString": "contract WETH"
                      }
                    },
                    "src": "1797:43:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WETH_$34489",
                      "typeString": "contract WETH"
                    }
                  },
                  "id": 38108,
                  "nodeType": "ExpressionStatement",
                  "src": "1797:43:64"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 38083,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 38077,
                    "src": "1661:6:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 38084,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 38082,
                  "name": "Owned",
                  "nameLocations": [
                    "1655:5:64"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34022,
                  "src": "1655:5:64"
                },
                "nodeType": "ModifierInvocation",
                "src": "1655:13:64"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 38081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38072,
                  "mutability": "mutable",
                  "name": "_whitelistedCaller",
                  "nameLocation": "1563:18:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 38110,
                  "src": "1555:26:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38071,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1555:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38075,
                  "mutability": "mutable",
                  "name": "_reactor",
                  "nameLocation": "1592:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 38110,
                  "src": "1583:17:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IReactor_$35610",
                    "typeString": "contract IReactor"
                  },
                  "typeName": {
                    "id": 38074,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 38073,
                      "name": "IReactor",
                      "nameLocations": [
                        "1583:8:64"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35610,
                      "src": "1583:8:64"
                    },
                    "referencedDeclaration": 35610,
                    "src": "1583:8:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IReactor_$35610",
                      "typeString": "contract IReactor"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38077,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1610:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 38110,
                  "src": "1602:14:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38076,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1602:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38080,
                  "mutability": "mutable",
                  "name": "_swapRouter02",
                  "nameLocation": "1632:13:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 38110,
                  "src": "1618:27:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISwapRouter02_$35549",
                    "typeString": "contract ISwapRouter02"
                  },
                  "typeName": {
                    "id": 38079,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 38078,
                      "name": "ISwapRouter02",
                      "nameLocations": [
                        "1618:13:64"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35549,
                      "src": "1618:13:64"
                    },
                    "referencedDeclaration": 35549,
                    "src": "1618:13:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapRouter02_$35549",
                      "typeString": "contract ISwapRouter02"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1554:92:64"
            },
            "returnParameters": {
              "id": 38085,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1673:0:64"
            },
            "scope": 38398,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 38129,
            "nodeType": "FunctionDefinition",
            "src": "1915:170:64",
            "nodes": [],
            "body": {
              "id": 38128,
              "nodeType": "Block",
              "src": "2020:65:64",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38124,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38114,
                        "src": "2058:5:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignedOrder_$35471_calldata_ptr",
                          "typeString": "struct SignedOrder calldata"
                        }
                      },
                      {
                        "id": 38125,
                        "name": "callbackData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38116,
                        "src": "2065:12:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SignedOrder_$35471_calldata_ptr",
                          "typeString": "struct SignedOrder calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 38121,
                        "name": "reactor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38038,
                        "src": "2030:7:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IReactor_$35610",
                          "typeString": "contract IReactor"
                        }
                      },
                      "id": 38123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2038:19:64",
                      "memberName": "executeWithCallback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35591,
                      "src": "2030:27:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_SignedOrder_$35471_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (struct SignedOrder memory,bytes memory) payable external"
                      }
                    },
                    "id": 38126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2030:48:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38127,
                  "nodeType": "ExpressionStatement",
                  "src": "2030:48:64"
                }
              ]
            },
            "documentation": {
              "id": 38111,
              "nodeType": "StructuredDocumentation",
              "src": "1853:57:64",
              "text": "@notice assume that we already have all output tokens"
            },
            "functionSelector": "d0f2d8ac",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38119,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38118,
                  "name": "onlyWhitelistedCaller",
                  "nameLocations": [
                    "1998:21:64"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38054,
                  "src": "1998:21:64"
                },
                "nodeType": "ModifierInvocation",
                "src": "1998:21:64"
              }
            ],
            "name": "execute",
            "nameLocation": "1924:7:64",
            "parameters": {
              "id": 38117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38114,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "1953:5:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 38129,
                  "src": "1932:26:64",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SignedOrder_$35471_calldata_ptr",
                    "typeString": "struct SignedOrder"
                  },
                  "typeName": {
                    "id": 38113,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 38112,
                      "name": "SignedOrder",
                      "nameLocations": [
                        "1932:11:64"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35471,
                      "src": "1932:11:64"
                    },
                    "referencedDeclaration": 35471,
                    "src": "1932:11:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SignedOrder_$35471_storage_ptr",
                      "typeString": "struct SignedOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38116,
                  "mutability": "mutable",
                  "name": "callbackData",
                  "nameLocation": "1975:12:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 38129,
                  "src": "1960:27:64",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 38115,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1960:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1931:57:64"
            },
            "returnParameters": {
              "id": 38120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2020:0:64"
            },
            "scope": 38398,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38149,
            "nodeType": "FunctionDefinition",
            "src": "2153:184:64",
            "nodes": [],
            "body": {
              "id": 38148,
              "nodeType": "Block",
              "src": "2266:71:64",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38144,
                        "name": "orders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38134,
                        "src": "2309:6:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SignedOrder_$35471_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct SignedOrder calldata[] calldata"
                        }
                      },
                      {
                        "id": 38145,
                        "name": "callbackData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38136,
                        "src": "2317:12:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_SignedOrder_$35471_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct SignedOrder calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 38141,
                        "name": "reactor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38038,
                        "src": "2276:7:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IReactor_$35610",
                          "typeString": "contract IReactor"
                        }
                      },
                      "id": 38143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2284:24:64",
                      "memberName": "executeBatchWithCallback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35609,
                      "src": "2276:32:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_array$_t_struct$_SignedOrder_$35471_memory_ptr_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (struct SignedOrder memory[] memory,bytes memory) payable external"
                      }
                    },
                    "id": 38146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2276:54:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38147,
                  "nodeType": "ExpressionStatement",
                  "src": "2276:54:64"
                }
              ]
            },
            "documentation": {
              "id": 38130,
              "nodeType": "StructuredDocumentation",
              "src": "2091:57:64",
              "text": "@notice assume that we already have all output tokens"
            },
            "functionSelector": "e5135ec6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38139,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38138,
                  "name": "onlyWhitelistedCaller",
                  "nameLocations": [
                    "2244:21:64"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38054,
                  "src": "2244:21:64"
                },
                "nodeType": "ModifierInvocation",
                "src": "2244:21:64"
              }
            ],
            "name": "executeBatch",
            "nameLocation": "2162:12:64",
            "parameters": {
              "id": 38137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38134,
                  "mutability": "mutable",
                  "name": "orders",
                  "nameLocation": "2198:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 38149,
                  "src": "2175:29:64",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_SignedOrder_$35471_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct SignedOrder[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 38132,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 38131,
                        "name": "SignedOrder",
                        "nameLocations": [
                          "2175:11:64"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 35471,
                        "src": "2175:11:64"
                      },
                      "referencedDeclaration": 35471,
                      "src": "2175:11:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SignedOrder_$35471_storage_ptr",
                        "typeString": "struct SignedOrder"
                      }
                    },
                    "id": 38133,
                    "nodeType": "ArrayTypeName",
                    "src": "2175:13:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SignedOrder_$35471_storage_$dyn_storage_ptr",
                      "typeString": "struct SignedOrder[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38136,
                  "mutability": "mutable",
                  "name": "callbackData",
                  "nameLocation": "2221:12:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 38149,
                  "src": "2206:27:64",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 38135,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2206:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2174:60:64"
            },
            "returnParameters": {
              "id": 38140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2266:0:64"
            },
            "scope": 38398,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38283,
            "nodeType": "FunctionDefinition",
            "src": "2712:1075:64",
            "nodes": [],
            "body": {
              "id": 38282,
              "nodeType": "Block",
              "src": "2813:974:64",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    38165,
                    38168,
                    38171
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38165,
                      "mutability": "mutable",
                      "name": "tokensToApproveForSwapRouter02",
                      "nameLocation": "2854:30:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 38282,
                      "src": "2837:47:64",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 38163,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2837:7:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 38164,
                        "nodeType": "ArrayTypeName",
                        "src": "2837:9:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 38168,
                      "mutability": "mutable",
                      "name": "tokensToApproveForReactor",
                      "nameLocation": "2915:25:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 38282,
                      "src": "2898:42:64",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 38166,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2898:7:64",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 38167,
                        "nodeType": "ArrayTypeName",
                        "src": "2898:9:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 38171,
                      "mutability": "mutable",
                      "name": "multicallData",
                      "nameLocation": "2969:13:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 38282,
                      "src": "2954:28:64",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 38169,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2954:5:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 38170,
                        "nodeType": "ArrayTypeName",
                        "src": "2954:7:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 38186,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 38174,
                        "name": "callbackData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38156,
                        "src": "3006:12:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "baseExpression": {
                              "id": 38176,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3021:7:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 38175,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3021:7:64",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 38177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3021:9:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "type(address[] memory)"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 38179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3032:7:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 38178,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3032:7:64",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 38180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3032:9:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "type(address[] memory)"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 38182,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3043:5:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 38181,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "3043:5:64",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 38183,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3043:7:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "type(bytes memory[] memory)"
                            }
                          }
                        ],
                        "id": 38184,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3020:31:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_$",
                          "typeString": "tuple(type(address[] memory),type(address[] memory),type(bytes memory[] memory))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_$",
                          "typeString": "tuple(type(address[] memory),type(address[] memory),type(bytes memory[] memory))"
                        }
                      ],
                      "expression": {
                        "id": 38172,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2995:3:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 38173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2999:6:64",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2995:10:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 38185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2995:57:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                      "typeString": "tuple(address[] memory,address[] memory,bytes memory[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2823:229:64"
                },
                {
                  "id": 38247,
                  "nodeType": "UncheckedBlock",
                  "src": "3063:423:64",
                  "statements": [
                    {
                      "body": {
                        "id": 38215,
                        "nodeType": "Block",
                        "src": "3155:127:64",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 38206,
                                      "name": "swapRouter02",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 38033,
                                      "src": "3234:12:64",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ISwapRouter02_$35549",
                                        "typeString": "contract ISwapRouter02"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_ISwapRouter02_$35549",
                                        "typeString": "contract ISwapRouter02"
                                      }
                                    ],
                                    "id": 38205,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3226:7:64",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 38204,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3226:7:64",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 38207,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3226:21:64",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 38210,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "3254:7:64",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 38209,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "3254:7:64",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        }
                                      ],
                                      "id": 38208,
                                      "name": "type",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -27,
                                      "src": "3249:4:64",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 38211,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3249:13:64",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_meta_type_t_uint256",
                                      "typeString": "type(uint256)"
                                    }
                                  },
                                  "id": 38212,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "3263:3:64",
                                  "memberName": "max",
                                  "nodeType": "MemberAccess",
                                  "src": "3249:17:64",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 38199,
                                        "name": "tokensToApproveForSwapRouter02",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 38165,
                                        "src": "3179:30:64",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 38201,
                                      "indexExpression": {
                                        "id": 38200,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 38188,
                                        "src": "3210:1:64",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3179:33:64",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 38198,
                                    "name": "ERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 34410,
                                    "src": "3173:5:64",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ERC20_$34410_$",
                                      "typeString": "type(contract ERC20)"
                                    }
                                  },
                                  "id": 38202,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3173:40:64",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$34410",
                                    "typeString": "contract ERC20"
                                  }
                                },
                                "id": 38203,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3214:11:64",
                                "memberName": "safeApprove",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 34732,
                                "src": "3173:52:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$34410_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_ERC20_$34410_$",
                                  "typeString": "function (contract ERC20,address,uint256)"
                                }
                              },
                              "id": 38213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3173:94:64",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 38214,
                            "nodeType": "ExpressionStatement",
                            "src": "3173:94:64"
                          }
                        ]
                      },
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 38194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 38191,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38188,
                          "src": "3107:1:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 38192,
                            "name": "tokensToApproveForSwapRouter02",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38165,
                            "src": "3111:30:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 38193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3142:6:64",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3111:37:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3107:41:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 38216,
                      "initializationExpression": {
                        "assignments": [
                          38188
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 38188,
                            "mutability": "mutable",
                            "name": "i",
                            "nameLocation": "3100:1:64",
                            "nodeType": "VariableDeclaration",
                            "scope": 38216,
                            "src": "3092:9:64",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 38187,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3092:7:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 38190,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 38189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3104:1:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3092:13:64"
                      },
                      "loopExpression": {
                        "expression": {
                          "id": 38196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "3150:3:64",
                          "subExpression": {
                            "id": 38195,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38188,
                            "src": "3150:1:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 38197,
                        "nodeType": "ExpressionStatement",
                        "src": "3150:3:64"
                      },
                      "nodeType": "ForStatement",
                      "src": "3087:195:64"
                    },
                    {
                      "body": {
                        "id": 38245,
                        "nodeType": "Block",
                        "src": "3359:117:64",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 38236,
                                      "name": "reactor",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 38038,
                                      "src": "3433:7:64",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IReactor_$35610",
                                        "typeString": "contract IReactor"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IReactor_$35610",
                                        "typeString": "contract IReactor"
                                      }
                                    ],
                                    "id": 38235,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3425:7:64",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 38234,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3425:7:64",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 38237,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3425:16:64",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 38240,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "3448:7:64",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 38239,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "3448:7:64",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        }
                                      ],
                                      "id": 38238,
                                      "name": "type",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -27,
                                      "src": "3443:4:64",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 38241,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3443:13:64",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_meta_type_t_uint256",
                                      "typeString": "type(uint256)"
                                    }
                                  },
                                  "id": 38242,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "3457:3:64",
                                  "memberName": "max",
                                  "nodeType": "MemberAccess",
                                  "src": "3443:17:64",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 38229,
                                        "name": "tokensToApproveForReactor",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 38168,
                                        "src": "3383:25:64",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 38231,
                                      "indexExpression": {
                                        "id": 38230,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 38218,
                                        "src": "3409:1:64",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3383:28:64",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 38228,
                                    "name": "ERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 34410,
                                    "src": "3377:5:64",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ERC20_$34410_$",
                                      "typeString": "type(contract ERC20)"
                                    }
                                  },
                                  "id": 38232,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3377:35:64",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$34410",
                                    "typeString": "contract ERC20"
                                  }
                                },
                                "id": 38233,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3413:11:64",
                                "memberName": "safeApprove",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 34732,
                                "src": "3377:47:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$34410_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_ERC20_$34410_$",
                                  "typeString": "function (contract ERC20,address,uint256)"
                                }
                              },
                              "id": 38243,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3377:84:64",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 38244,
                            "nodeType": "ExpressionStatement",
                            "src": "3377:84:64"
                          }
                        ]
                      },
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 38224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 38221,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38218,
                          "src": "3316:1:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 38222,
                            "name": "tokensToApproveForReactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38168,
                            "src": "3320:25:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 38223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3346:6:64",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3320:32:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3316:36:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 38246,
                      "initializationExpression": {
                        "assignments": [
                          38218
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 38218,
                            "mutability": "mutable",
                            "name": "i",
                            "nameLocation": "3309:1:64",
                            "nodeType": "VariableDeclaration",
                            "scope": 38246,
                            "src": "3301:9:64",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 38217,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3301:7:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 38220,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 38219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3313:1:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3301:13:64"
                      },
                      "loopExpression": {
                        "expression": {
                          "id": 38226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "3354:3:64",
                          "subExpression": {
                            "id": 38225,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38218,
                            "src": "3354:1:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 38227,
                        "nodeType": "ExpressionStatement",
                        "src": "3354:3:64"
                      },
                      "nodeType": "ForStatement",
                      "src": "3296:180:64"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 38253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3524:7:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 38252,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3524:7:64",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 38251,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "3519:4:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 38254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3519:13:64",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 38255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3533:3:64",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "3519:17:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 38256,
                        "name": "multicallData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38171,
                        "src": "3538:13:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 38248,
                        "name": "swapRouter02",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38033,
                        "src": "3496:12:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISwapRouter02_$35549",
                          "typeString": "contract ISwapRouter02"
                        }
                      },
                      "id": 38250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3509:9:64",
                      "memberName": "multicall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35524,
                      "src": "3496:22:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,bytes memory[] memory) payable external returns (bytes memory[] memory)"
                      }
                    },
                    "id": 38257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3496:56:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "id": 38258,
                  "nodeType": "ExpressionStatement",
                  "src": "3496:56:64"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 38265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 38261,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3666:4:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwapRouter02Executor_$38398",
                              "typeString": "contract SwapRouter02Executor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwapRouter02Executor_$38398",
                              "typeString": "contract SwapRouter02Executor"
                            }
                          ],
                          "id": 38260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3658:7:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 38259,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3658:7:64",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 38262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3658:13:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 38263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3672:7:64",
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "3658:21:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 38264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3682:1:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3658:25:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 38281,
                  "nodeType": "IfStatement",
                  "src": "3654:127:64",
                  "trueBody": {
                    "id": 38280,
                    "nodeType": "Block",
                    "src": "3685:96:64",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 38271,
                                  "name": "reactor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38038,
                                  "src": "3738:7:64",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IReactor_$35610",
                                    "typeString": "contract IReactor"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IReactor_$35610",
                                    "typeString": "contract IReactor"
                                  }
                                ],
                                "id": 38270,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3730:7:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 38269,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3730:7:64",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 38272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3730:16:64",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 38275,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "3756:4:64",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_SwapRouter02Executor_$38398",
                                      "typeString": "contract SwapRouter02Executor"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SwapRouter02Executor_$38398",
                                      "typeString": "contract SwapRouter02Executor"
                                    }
                                  ],
                                  "id": 38274,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3748:7:64",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 38273,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3748:7:64",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 38276,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3748:13:64",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 38277,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3762:7:64",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "3748:21:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 38266,
                              "name": "CurrencyLibrary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35897,
                              "src": "3699:15:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_CurrencyLibrary_$35897_$",
                                "typeString": "type(library CurrencyLibrary)"
                              }
                            },
                            "id": 38268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3715:14:64",
                            "memberName": "transferNative",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35883,
                            "src": "3699:30:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 38278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3699:71:64",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38279,
                        "nodeType": "ExpressionStatement",
                        "src": "3699:71:64"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              35625
            ],
            "documentation": {
              "id": 38150,
              "nodeType": "StructuredDocumentation",
              "src": "2343:364:64",
              "text": "@notice fill UniswapX orders using SwapRouter02\n @param callbackData It has the below encoded:\n address[] memory tokensToApproveForSwapRouter02: Max approve these tokens to swapRouter02\n address[] memory tokensToApproveForReactor: Max approve these tokens to reactor\n bytes[] memory multicallData: Pass into swapRouter02.multicall()"
            },
            "functionSelector": "585da628",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38159,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38158,
                  "name": "onlyReactor",
                  "nameLocations": [
                    "2801:11:64"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38070,
                  "src": "2801:11:64"
                },
                "nodeType": "ModifierInvocation",
                "src": "2801:11:64"
              }
            ],
            "name": "reactorCallback",
            "nameLocation": "2721:15:64",
            "parameters": {
              "id": 38157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38154,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 38283,
                  "src": "2737:24:64",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ResolvedOrder_$35466_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct ResolvedOrder[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 38152,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 38151,
                        "name": "ResolvedOrder",
                        "nameLocations": [
                          "2737:13:64"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 35466,
                        "src": "2737:13:64"
                      },
                      "referencedDeclaration": 35466,
                      "src": "2737:13:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResolvedOrder_$35466_storage_ptr",
                        "typeString": "struct ResolvedOrder"
                      }
                    },
                    "id": 38153,
                    "nodeType": "ArrayTypeName",
                    "src": "2737:15:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ResolvedOrder_$35466_storage_$dyn_storage_ptr",
                      "typeString": "struct ResolvedOrder[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38156,
                  "mutability": "mutable",
                  "name": "callbackData",
                  "nameLocation": "2778:12:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 38283,
                  "src": "2763:27:64",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 38155,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2763:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2736:55:64"
            },
            "returnParameters": {
              "id": 38160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2813:0:64"
            },
            "scope": 38398,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38336,
            "nodeType": "FunctionDefinition",
            "src": "4026:336:64",
            "nodes": [],
            "body": {
              "id": 38335,
              "nodeType": "Block",
              "src": "4130:232:64",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 38322,
                    "nodeType": "Block",
                    "src": "4193:97:64",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 38313,
                                  "name": "swapRouter02",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38033,
                                  "src": "4246:12:64",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISwapRouter02_$35549",
                                    "typeString": "contract ISwapRouter02"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISwapRouter02_$35549",
                                    "typeString": "contract ISwapRouter02"
                                  }
                                ],
                                "id": 38312,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4238:7:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 38311,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4238:7:64",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 38314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4238:21:64",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 38317,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4266:7:64",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 38316,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4266:7:64",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    }
                                  ],
                                  "id": 38315,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "4261:4:64",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 38318,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4261:13:64",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint256",
                                  "typeString": "type(uint256)"
                                }
                              },
                              "id": 38319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4275:3:64",
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "4261:17:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 38307,
                                "name": "tokensToApprove",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38288,
                                "src": "4207:15:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_ERC20_$34410_$dyn_calldata_ptr",
                                  "typeString": "contract ERC20[] calldata"
                                }
                              },
                              "id": 38309,
                              "indexExpression": {
                                "id": 38308,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38297,
                                "src": "4223:1:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4207:18:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$34410",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 38310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4226:11:64",
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34732,
                            "src": "4207:30:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$34410_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_ERC20_$34410_$",
                              "typeString": "function (contract ERC20,address,uint256)"
                            }
                          },
                          "id": 38320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4207:72:64",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38321,
                        "nodeType": "ExpressionStatement",
                        "src": "4207:72:64"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 38303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 38300,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38297,
                      "src": "4160:1:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 38301,
                        "name": "tokensToApprove",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38288,
                        "src": "4164:15:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$34410_$dyn_calldata_ptr",
                          "typeString": "contract ERC20[] calldata"
                        }
                      },
                      "id": 38302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4180:6:64",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4164:22:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4160:26:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 38323,
                  "initializationExpression": {
                    "assignments": [
                      38297
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 38297,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4153:1:64",
                        "nodeType": "VariableDeclaration",
                        "scope": 38323,
                        "src": "4145:9:64",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 38296,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4145:7:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 38299,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 38298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4157:1:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4145:13:64"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 38305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4188:3:64",
                      "subExpression": {
                        "id": 38304,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38297,
                        "src": "4188:1:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 38306,
                    "nodeType": "ExpressionStatement",
                    "src": "4188:3:64"
                  },
                  "nodeType": "ForStatement",
                  "src": "4140:150:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 38329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4327:7:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 38328,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4327:7:64",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 38327,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4322:4:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 38330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4322:13:64",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 38331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4336:3:64",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "4322:17:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 38332,
                        "name": "multicallData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38291,
                        "src": "4341:13:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes calldata[] calldata"
                        }
                      ],
                      "expression": {
                        "id": 38324,
                        "name": "swapRouter02",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38033,
                        "src": "4299:12:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISwapRouter02_$35549",
                          "typeString": "contract ISwapRouter02"
                        }
                      },
                      "id": 38326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4312:9:64",
                      "memberName": "multicall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35524,
                      "src": "4299:22:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,bytes memory[] memory) payable external returns (bytes memory[] memory)"
                      }
                    },
                    "id": 38333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4299:56:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "id": 38334,
                  "nodeType": "ExpressionStatement",
                  "src": "4299:56:64"
                }
              ]
            },
            "documentation": {
              "id": 38284,
              "nodeType": "StructuredDocumentation",
              "src": "3793:228:64",
              "text": "@notice This function can be used to convert ERC20s to ETH that remains in this contract\n @param tokensToApprove Max approve these tokens to swapRouter02\n @param multicallData Pass into swapRouter02.multicall()"
            },
            "functionSelector": "63fb0b96",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38294,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38293,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4120:9:64"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33985,
                  "src": "4120:9:64"
                },
                "nodeType": "ModifierInvocation",
                "src": "4120:9:64"
              }
            ],
            "name": "multicall",
            "nameLocation": "4035:9:64",
            "parameters": {
              "id": 38292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38288,
                  "mutability": "mutable",
                  "name": "tokensToApprove",
                  "nameLocation": "4062:15:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 38336,
                  "src": "4045:32:64",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_ERC20_$34410_$dyn_calldata_ptr",
                    "typeString": "contract ERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 38286,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 38285,
                        "name": "ERC20",
                        "nameLocations": [
                          "4045:5:64"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 34410,
                        "src": "4045:5:64"
                      },
                      "referencedDeclaration": 34410,
                      "src": "4045:5:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$34410",
                        "typeString": "contract ERC20"
                      }
                    },
                    "id": 38287,
                    "nodeType": "ArrayTypeName",
                    "src": "4045:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_ERC20_$34410_$dyn_storage_ptr",
                      "typeString": "contract ERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38291,
                  "mutability": "mutable",
                  "name": "multicallData",
                  "nameLocation": "4096:13:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 38336,
                  "src": "4079:30:64",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 38289,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "4079:5:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 38290,
                    "nodeType": "ArrayTypeName",
                    "src": "4079:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4044:66:64"
            },
            "returnParameters": {
              "id": 38295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4130:0:64"
            },
            "scope": 38398,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38372,
            "nodeType": "FunctionDefinition",
            "src": "4539:238:64",
            "nodes": [],
            "body": {
              "id": 38371,
              "nodeType": "Block",
              "src": "4597:180:64",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    38345
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38345,
                      "mutability": "mutable",
                      "name": "balanceWETH",
                      "nameLocation": "4615:11:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 38371,
                      "src": "4607:19:64",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38344,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4607:7:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 38353,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 38350,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4652:4:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwapRouter02Executor_$38398",
                              "typeString": "contract SwapRouter02Executor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwapRouter02Executor_$38398",
                              "typeString": "contract SwapRouter02Executor"
                            }
                          ],
                          "id": 38349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4644:7:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 38348,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4644:7:64",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 38351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4644:13:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 38346,
                        "name": "weth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38041,
                        "src": "4629:4:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WETH_$34489",
                          "typeString": "contract WETH"
                        }
                      },
                      "id": 38347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4634:9:64",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34053,
                      "src": "4629:14:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 38352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4629:29:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4607:51:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38357,
                        "name": "balanceWETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38345,
                        "src": "4683:11:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 38354,
                        "name": "weth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38041,
                        "src": "4669:4:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WETH_$34489",
                          "typeString": "contract WETH"
                        }
                      },
                      "id": 38356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4674:8:64",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34481,
                      "src": "4669:13:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 38358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4669:26:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38359,
                  "nodeType": "ExpressionStatement",
                  "src": "4669:26:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38363,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38339,
                        "src": "4737:9:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 38366,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4756:4:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SwapRouter02Executor_$38398",
                                "typeString": "contract SwapRouter02Executor"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SwapRouter02Executor_$38398",
                                "typeString": "contract SwapRouter02Executor"
                              }
                            ],
                            "id": 38365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4748:7:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 38364,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4748:7:64",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 38367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4748:13:64",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 38368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4762:7:64",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "4748:21:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 38360,
                        "name": "SafeTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34733,
                        "src": "4705:15:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$34733_$",
                          "typeString": "type(library SafeTransferLib)"
                        }
                      },
                      "id": 38362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4721:15:64",
                      "memberName": "safeTransferETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34670,
                      "src": "4705:31:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 38369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4705:65:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38370,
                  "nodeType": "ExpressionStatement",
                  "src": "4705:65:64"
                }
              ]
            },
            "documentation": {
              "id": 38337,
              "nodeType": "StructuredDocumentation",
              "src": "4368:166:64",
              "text": "@notice Unwraps the contract's WETH9 balance and sends it to the recipient as ETH. Can only be called by owner.\n @param recipient The address receiving ETH"
            },
            "functionSelector": "89a3f136",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38342,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38341,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4587:9:64"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33985,
                  "src": "4587:9:64"
                },
                "nodeType": "ModifierInvocation",
                "src": "4587:9:64"
              }
            ],
            "name": "unwrapWETH",
            "nameLocation": "4548:10:64",
            "parameters": {
              "id": 38340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38339,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4567:9:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 38372,
                  "src": "4559:17:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38338,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4559:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4558:19:64"
            },
            "returnParameters": {
              "id": 38343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4597:0:64"
            },
            "scope": 38398,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38392,
            "nodeType": "FunctionDefinition",
            "src": "4930:141:64",
            "nodes": [],
            "body": {
              "id": 38391,
              "nodeType": "Block",
              "src": "4989:82:64",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38383,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38375,
                        "src": "5031:9:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 38386,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5050:4:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SwapRouter02Executor_$38398",
                                "typeString": "contract SwapRouter02Executor"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SwapRouter02Executor_$38398",
                                "typeString": "contract SwapRouter02Executor"
                              }
                            ],
                            "id": 38385,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5042:7:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 38384,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5042:7:64",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 38387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5042:13:64",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 38388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5056:7:64",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "5042:21:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 38380,
                        "name": "SafeTransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34733,
                        "src": "4999:15:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$34733_$",
                          "typeString": "type(library SafeTransferLib)"
                        }
                      },
                      "id": 38382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5015:15:64",
                      "memberName": "safeTransferETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34670,
                      "src": "4999:31:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 38389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4999:65:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38390,
                  "nodeType": "ExpressionStatement",
                  "src": "4999:65:64"
                }
              ]
            },
            "documentation": {
              "id": 38373,
              "nodeType": "StructuredDocumentation",
              "src": "4783:142:64",
              "text": "@notice Transfer all ETH in this contract to the recipient. Can only be called by owner.\n @param recipient The recipient of the ETH"
            },
            "functionSelector": "690d8320",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38378,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38377,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4979:9:64"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33985,
                  "src": "4979:9:64"
                },
                "nodeType": "ModifierInvocation",
                "src": "4979:9:64"
              }
            ],
            "name": "withdrawETH",
            "nameLocation": "4939:11:64",
            "parameters": {
              "id": 38376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38375,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4959:9:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 38392,
                  "src": "4951:17:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38374,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4951:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4950:19:64"
            },
            "returnParameters": {
              "id": 38379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4989:0:64"
            },
            "scope": 38398,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38397,
            "nodeType": "FunctionDefinition",
            "src": "5162:29:64",
            "nodes": [],
            "body": {
              "id": 38396,
              "nodeType": "Block",
              "src": "5189:2:64",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 38393,
              "nodeType": "StructuredDocumentation",
              "src": "5077:80:64",
              "text": "@notice Necessary for this contract to receive ETH when calling unwrapWETH()"
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 38394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5169:2:64"
            },
            "returnParameters": {
              "id": 38395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5189:0:64"
            },
            "scope": 38398,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 38014,
              "name": "IReactorCallback",
              "nameLocations": [
                "723:16:64"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35626,
              "src": "723:16:64"
            },
            "id": 38015,
            "nodeType": "InheritanceSpecifier",
            "src": "723:16:64"
          },
          {
            "baseName": {
              "id": 38016,
              "name": "Owned",
              "nameLocations": [
                "741:5:64"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34022,
              "src": "741:5:64"
            },
            "id": 38017,
            "nodeType": "InheritanceSpecifier",
            "src": "741:5:64"
          }
        ],
        "canonicalName": "SwapRouter02Executor",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 38013,
          "nodeType": "StructuredDocumentation",
          "src": "621:69:64",
          "text": "@notice A fill contract that uses SwapRouter02 to execute trades"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          38398,
          34022,
          35626
        ],
        "name": "SwapRouter02Executor",
        "nameLocation": "699:20:64",
        "scope": 38399,
        "usedErrors": [
          35795,
          38027,
          38030
        ]
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 64
}