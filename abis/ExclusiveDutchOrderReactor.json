{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IPermit2",
          "name": "_permit2",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_protocolFeeOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "DeadlineBeforeEndTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DeadlinePassed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "duplicateToken",
          "type": "address"
        }
      ],
      "name": "DuplicateFeeOutput",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EndTimeBeforeStartTime",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "FeeTooLarge",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncorrectAmounts",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InputAndOutputDecay",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientEth",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "feeToken",
          "type": "address"
        }
      ],
      "name": "InvalidFeeToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidReactor",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NativeTransferFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoExclusiveOverride",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OrderEndTimeBeforeStartTime",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "filler",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "swapper",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "Fill",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldFeeController",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newFeeController",
          "type": "address"
        }
      ],
      "name": "ProtocolFeeControllerSet",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            }
          ],
          "internalType": "struct SignedOrder",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            }
          ],
          "internalType": "struct SignedOrder[]",
          "name": "orders",
          "type": "tuple[]"
        }
      ],
      "name": "executeBatch",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            }
          ],
          "internalType": "struct SignedOrder[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "internalType": "bytes",
          "name": "callbackData",
          "type": "bytes"
        }
      ],
      "name": "executeBatchWithCallback",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            }
          ],
          "internalType": "struct SignedOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "callbackData",
          "type": "bytes"
        }
      ],
      "name": "executeWithCallback",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeController",
      "outputs": [
        {
          "internalType": "contract IProtocolFeeController",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "permit2",
      "outputs": [
        {
          "internalType": "contract IPermit2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newFeeController",
          "type": "address"
        }
      ],
      "name": "setProtocolFeeController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b5060405162003136380380620031368339810160408190526200003491620000b8565b600080546001600160a01b0319166001600160a01b03831690811782556040518492849283928392907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350506001600255506001600160a01b031660805250620000f79050565b6001600160a01b0381168114620000b557600080fd5b50565b60008060408385031215620000cc57600080fd5b8251620000d9816200009f565b6020840151909250620000ec816200009f565b809150509250929050565b60805161301d620001196000396000818160e0015261191b015261301d6000f3fe60806040526004361061009a5760003560e01c80632d771389116100695780636999b3771161004e5780636999b377146101715780638da5cb5b1461019e578063f2fde38b146101cb57600080fd5b80632d7713891461013e5780633f62192e1461015e57600080fd5b80630d335884146100a65780630d7a16c3146100bb57806312261ee7146100ce57806313fb72c71461012b57600080fd5b366100a157005b600080fd5b6100b96100b4366004612281565b6101eb565b005b6100b96100c936600461232f565b610364565b3480156100da57600080fd5b506101027f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100b9610139366004612371565b6104c5565b34801561014a57600080fd5b506100b961015936600461240f565b610683565b6100b961016c366004612433565b61078f565b34801561017d57600080fd5b506001546101029073ffffffffffffffffffffffffffffffffffffffff1681565b3480156101aa57600080fd5b506000546101029073ffffffffffffffffffffffffffffffffffffffff1681565b3480156101d757600080fd5b506100b96101e636600461240f565b610894565b6101f3610985565b604080516001808252818301909252600091816020015b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528085019190915293830181905280830152608082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90920191018161020a5790505090506102b2846109f6565b816000815181106102c5576102c5612497565b60200260200101819052506102d981610b62565b6040517f585da628000000000000000000000000000000000000000000000000000000008152339063585da6289061031990849087908790600401612699565b600060405180830381600087803b15801561033357600080fd5b505af1158015610347573d6000803e3d6000fd5b5050505061035481610bb3565b5061035f6001600255565b505050565b61036c610985565b8060008167ffffffffffffffff81111561038857610388612468565b60405190808252806020026020018201604052801561044357816020015b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528085019190915293830181905280830152608082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816103a65790505b50905060005b828110156104a25761047d85858381811061046657610466612497565b9050602002810190610478919061275f565b6109f6565b82828151811061048f5761048f612497565b6020908102919091010152600101610449565b506104ac81610b62565b6104b581610bb3565b50506104c16001600255565b5050565b6104cd610985565b8260008167ffffffffffffffff8111156104e9576104e9612468565b6040519080825280602002602001820160405280156105a457816020015b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528085019190915293830181905280830152608082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816105075790505b50905060005b828110156105ec576105c787878381811061046657610466612497565b8282815181106105d9576105d9612497565b60209081029190910101526001016105aa565b506105f681610b62565b6040517f585da628000000000000000000000000000000000000000000000000000000008152339063585da6289061063690849088908890600401612699565b600060405180830381600087803b15801561065057600080fd5b505af1158015610664573d6000803e3d6000fd5b5050505061067181610bb3565b505061067d6001600255565b50505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610709576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff000000000000000000000000000000000000000083168117909355604080519190921680825260208201939093527fb904ae9529e373e48bc82df4326cceaf1b4c472babf37f5b7dec46fecc6b53e0910160405180910390a15050565b610797610985565b604080516001808252818301909252600091816020015b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528085019190915293830181905280830152608082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816107ae579050509050610856826109f6565b8160008151811061086957610869612497565b602002602001018190525061087d81610b62565b61088681610bb3565b506108916001600255565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610915576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610700565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a350565b60028054036109f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610700565b60028055565b6040805161016081018252600060a0820181815260c0830182905260e083018290526101008301829052610120830182905260606101408401819052908352835180820185528281526020808201849052818601849052840152928201839052828201929092526080810182905290610a6f838061279d565b810190610a7c9190612b26565b9050610a8781610d06565b6040518060a0016040528082600001518152602001610abd836020015184604001518560a00151610e339092919063ffffffff16565b8152602001610ae3836020015184604001518560c00151610f059092919063ffffffff16565b8152602001848060200190610af8919061279d565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250602001610b3b83610fec565b9052606082015160208301516080840151929450610b5c92859291906112be565b50919050565b805160005b8181101561035f576000838281518110610b8357610b83612497565b60200260200101519050610b9681611367565b610ba081336117e1565b610baa8133611919565b50600101610b67565b805160005b81811015610cf5576000838281518110610bd457610bd4612497565b602002602001015190506000816040015151905060005b81811015610c5557600083604001518281518110610c0b57610c0b612497565b60200260200101519050610c4c81604001518260200151836000015173ffffffffffffffffffffffffffffffffffffffff16611cac9092919063ffffffff16565b50600101610beb565b5081600001516020015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16868581518110610c9e57610c9e612497565b6020026020010151608001517f78ad7ec0e9f89e74012afa58738b6b661c024cb0fd185ee2f616c0a28924bd66856000015160400151604051610ce391815260200190565b60405180910390a45050600101610bb8565b5047156104c1576104c13347611cf3565b60408101518151606001511015610d49576040517f773a618700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806020015181604001511015610d8b576040517f48fee69c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60a08101516040810151602090910151146108915760005b8160c00151518110156104c1578160c001518181518110610dc657610dc6612497565b6020026020010151604001518260c001518281518110610de857610de8612497565b60200260200101516020015114610e2b576040517fd303758b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600101610da3565b610e6d6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b836040015184602001511115610eaf576040517f7c1f811300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610ec5856020015186604001518686611d92565b60408051606081018252875173ffffffffffffffffffffffffffffffffffffffff1681526020810192909252958601519581019590955250929392505050565b82516060908067ffffffffffffffff811115610f2357610f23612468565b604051908082528060200260200182016040528015610f8c57816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909201910181610f415790505b50915060005b81811015610fe357610fbe868281518110610faf57610faf612497565b60200260200101518686611e2c565b838281518110610fd057610fd0612497565b6020908102919091010152600101610f92565b50509392505050565b6040517f4578636c757369766544757463684f726465722800000000000000000000000060208201527f4f72646572496e666f20696e666f2c000000000000000000000000000000000060348201527f75696e74323536206465636179537461727454696d652c00000000000000000060438201527f75696e74323536206465636179456e6454696d652c0000000000000000000000605a8201527f61646472657373206578636c757369766546696c6c65722c0000000000000000606f8201527f75696e74323536206578636c757369766974794f766572726964654270732c0060878201527f6164647265737320696e707574546f6b656e2c0000000000000000000000000060a68201527f75696e7432353620696e7075745374617274416d6f756e742c0000000000000060b98201527f75696e7432353620696e707574456e64416d6f756e742c00000000000000000060d28201527f44757463684f75747075745b5d206f757470757473290000000000000000000060e982015260009060ff01604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152608083019091526052808352909190612edb60208301396040518060c00160405280608d8152602001612f5b608d91396040516020016111de93929190612bfa565b604051602081830303815290604052805190602001206112018360000151611efc565b83602001518460400151856060015186608001518760a00151600001518860a00151602001518960a001516040015161123d8b60c00151611f96565b60408051602081019b909b528a01989098526060890196909652608088019490945273ffffffffffffffffffffffffffffffffffffffff92831660a088015260c08701919091521660e0850152610100840152610120830152610140820152610160015b604051602081830303815290604052805190602001209050919050565b6112c88383612034565b61067d5780611303576040517fb9ec1e9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604084015160005b815181101561135f57600082828151811061132857611328612497565b60200260200101519050611351846127106113439190612c3d565b602083015190612710612081565b60209091015260010161130b565b505050505050565b60015473ffffffffffffffffffffffffffffffffffffffff166113875750565b6001546040517f8aa6cf0300000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff1690638aa6cf03906113de908590600401612c77565b600060405180830381865afa1580156113fb573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526114419190810190612c8a565b60408301515181519192509060006114598284612c3d565b67ffffffffffffffff81111561147157611471612468565b6040519080825280602002602001820160405280156114da57816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90920191018161148f5790505b50905060005b8381101561152b57856040015181815181106114fe576114fe612497565b602002602001015182828151811061151857611518612497565b60209081029190910101526001016114e0565b5060005b828110156117d257600085828151811061154b5761154b612497565b6020026020010151905060005b828110156116095786818151811061157257611572612497565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff16036116015781516040517ffff0830300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401610700565b600101611558565b506000805b8681101561168e5760008960400151828151811061162e5761162e612497565b60200260200101519050836000015173ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16036116855760208101516116829084612c3d565b92505b5060010161160e565b50815160208901515173ffffffffffffffffffffffffffffffffffffffff9182169116036116cb5760208089015101516116c89082612c3d565b90505b806000036117205781516040517feddf07f500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401610700565b61172e816005612710612081565b826020015111156117a1578151602083015160408085015190517f82e7565600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff93841660048201526024810192909252919091166044820152606401610700565b81846117ad8589612c3d565b815181106117bd576117bd612497565b6020908102919091010152505060010161152f565b50604090940193909352505050565b81515173ffffffffffffffffffffffffffffffffffffffff163014611832576040517f4ddf4a6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b815160600151421115611871576040517f70f65caa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81516080015173ffffffffffffffffffffffffffffffffffffffff16156104c1578151608001516040517f6e84ba2b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690636e84ba2b906118ed9084908690600401612d5a565b60006040518083038186803b15801561190557600080fd5b505afa15801561135f573d6000803e3d6000fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663137c29fe6119d9846040805160a0810182526000606082018181526080830182905282526020820181905291810191909152506040805160a081018252602080840180515173ffffffffffffffffffffffffffffffffffffffff1660608085019182529151850151608085015283528451840151918301919091529251909201519082015290565b6040805180820182526000808252602091820152815180830190925273ffffffffffffffffffffffffffffffffffffffff8616825280870151810151908201528560000151602001518660800151604051806080016040528060528152602001612edb60529139604080517f4578636c757369766544757463684f726465722800000000000000000000000060208201527f4f72646572496e666f20696e666f2c000000000000000000000000000000000060348201527f75696e74323536206465636179537461727454696d652c00000000000000000060438201527f75696e74323536206465636179456e6454696d652c0000000000000000000000605a8201527f61646472657373206578636c757369766546696c6c65722c0000000000000000606f8201527f75696e74323536206578636c757369766974794f766572726964654270732c0060878201527f6164647265737320696e707574546f6b656e2c0000000000000000000000000060a68201527f75696e7432353620696e7075745374617274416d6f756e742c0000000000000060b98201527f75696e7432353620696e707574456e64416d6f756e742c00000000000000000060d28201527f44757463684f75747075745b5d206f757470757473290000000000000000000060e9820152815160df8183030181526101bf8201909252608d60ff820181815291612f5b9061011f01396040518060600160405280602e8152602001612f2d602e9139604051602001611c119493929190612d89565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905260608a01517fffffffff0000000000000000000000000000000000000000000000000000000060e089901b168352611c7e9695949392600401612e12565b600060405180830381600087803b158015611c9857600080fd5b505af115801561135f573d6000803e3d6000fd5b73ffffffffffffffffffffffffffffffffffffffff8316611cd15761035f8282611cf3565b61035f73ffffffffffffffffffffffffffffffffffffffff84163384846120bd565b60008273ffffffffffffffffffffffffffffffffffffffff1682611af490604051600060405180830381858888f193505050503d8060008114611d52576040519150601f19603f3d011682016040523d82523d6000602084013e611d57565b606091505b505090508061035f576040517ff4b3b1bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082821015611dce576040517f4313345300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b428211611ddc575082611e24565b428310611dea575083611e24565b4283900383830386861015611e0f57611e068688038383612081565b87039250611e21565b611e1c8787038383612081565b870192505b50505b949350505050565b6040805160608101825260008082526020820181905291810191909152836040015184602001511015611e8b576040517f7c1f811300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611ea1856020015186604001518686611d92565b90506040518060600160405280866000015173ffffffffffffffffffffffffffffffffffffffff168152602001828152602001866060015173ffffffffffffffffffffffffffffffffffffffff168152509150509392505050565b60006040518060c00160405280608d8152602001612f5b608d913980516020918201208351848301516040808701516060880151608089015160a08a015180519089012093516112a198939492939192910196875273ffffffffffffffffffffffffffffffffffffffff958616602088015293851660408701526060860192909252608085015290911660a083015260c082015260e00190565b600080825160200267ffffffffffffffff811115611fb657611fb6612468565b6040519080825280601f01601f191660200182016040528015611fe0576020820181803683370190505b50905060005b835181101561202557600061201385838151811061200657612006612497565b60200260200101516121af565b60208381028501015250600101611fe6565b50805160209091012092915050565b600073ffffffffffffffffffffffffffffffffffffffff8316158061205857508142115b80612078575073ffffffffffffffffffffffffffffffffffffffff831633145b90505b92915050565b6000827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04841183021582026120b657600080fd5b5091020490565b60006040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8516600482015273ffffffffffffffffffffffffffffffffffffffff841660248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806121a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610700565b5050505050565b6000604051806080016040528060528152602001612edb605291398051602091820120835184830151604080870151606088015191516112a1969192910194855273ffffffffffffffffffffffffffffffffffffffff93841660208601526040850192909252606084015216608082015260a00190565b600060408284031215610b5c57600080fd5b60008083601f84011261224a57600080fd5b50813567ffffffffffffffff81111561226257600080fd5b60208301915083602082850101111561227a57600080fd5b9250929050565b60008060006040848603121561229657600080fd5b833567ffffffffffffffff808211156122ae57600080fd5b6122ba87838801612226565b945060208601359150808211156122d057600080fd5b506122dd86828701612238565b9497909650939450505050565b60008083601f8401126122fc57600080fd5b50813567ffffffffffffffff81111561231457600080fd5b6020830191508360208260051b850101111561227a57600080fd5b6000806020838503121561234257600080fd5b823567ffffffffffffffff81111561235957600080fd5b612365858286016122ea565b90969095509350505050565b6000806000806040858703121561238757600080fd5b843567ffffffffffffffff8082111561239f57600080fd5b6123ab888389016122ea565b909650945060208701359150808211156123c457600080fd5b506123d187828801612238565b95989497509550505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461089157600080fd5b803561240a816123dd565b919050565b60006020828403121561242157600080fd5b813561242c816123dd565b9392505050565b60006020828403121561244557600080fd5b813567ffffffffffffffff81111561245c57600080fd5b611e2484828501612226565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60005b838110156124e15781810151838201526020016124c9565b50506000910152565b600081518084526125028160208601602086016124c6565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501945080840160005b83811015612593578151805173ffffffffffffffffffffffffffffffffffffffff908116895284820151858a0152604091820151169088015260609096019590820190600101612548565b509495945050505050565b6000815160e0845273ffffffffffffffffffffffffffffffffffffffff8082511660e08601528060208301511661010086015260408201516101208601526060820151610140860152806080830151166101608601525060a0810151905060c06101808501526126126101a08501826124ea565b905060208301516126506020860182805173ffffffffffffffffffffffffffffffffffffffff16825260208082015190830152604090810151910152565b50604083015184820360808601526126688282612534565b915050606083015184820360a086015261268282826124ea565b915050608083015160c08501528091505092915050565b6000604082016040835280865180835260608501915060608160051b8601019250602080890160005b8381101561270e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08887030185526126fc86835161259e565b955093820193908201906001016126c2565b5050858403818701528684528688828601376000848801820152601f9096017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169092019094019695505050505050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc183360301811261279357600080fd5b9190910192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126127d257600080fd5b83018035915067ffffffffffffffff8211156127ed57600080fd5b60200191503681900382131561227a57600080fd5b6040516060810167ffffffffffffffff8111828210171561282557612825612468565b60405290565b6040516080810167ffffffffffffffff8111828210171561282557612825612468565b60405160e0810167ffffffffffffffff8111828210171561282557612825612468565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156128b8576128b8612468565b604052919050565b600082601f8301126128d157600080fd5b813567ffffffffffffffff8111156128eb576128eb612468565b61291c60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601612871565b81815284602083860101111561293157600080fd5b816020850160208301376000918101602001919091529392505050565b600060c0828403121561296057600080fd5b60405160c0810167ffffffffffffffff828210818311171561298457612984612468565b8160405282935084359150612998826123dd565b9082526020840135906129aa826123dd565b8160208401526040850135604084015260608501356060840152608085013591506129d4826123dd565b81608084015260a08501359150808211156129ee57600080fd5b506129fb858286016128c0565b60a0830152505092915050565b600060608284031215612a1a57600080fd5b612a22612802565b90508135612a2f816123dd565b80825250602082013560208201526040820135604082015292915050565b600067ffffffffffffffff821115612a6757612a67612468565b5060051b60200190565b600082601f830112612a8257600080fd5b81356020612a97612a9283612a4d565b612871565b82815260079290921b84018101918181019086841115612ab657600080fd5b8286015b84811015612b1b5760808189031215612ad35760008081fd5b612adb61282b565b8135612ae6816123dd565b8152818501358582015260408083013590820152606080830135612b09816123dd565b90820152835291830191608001612aba565b509695505050505050565b600060208284031215612b3857600080fd5b813567ffffffffffffffff80821115612b5057600080fd5b908301906101208286031215612b6557600080fd5b612b6d61284e565b823582811115612b7c57600080fd5b612b888782860161294e565b8252506020830135602082015260408301356040820152612bab606084016123ff565b606082015260808301356080820152612bc78660a08501612a08565b60a082015261010083013582811115612bdf57600080fd5b612beb87828601612a71565b60c08301525095945050505050565b60008451612c0c8184602089016124c6565b845190830190612c208183602089016124c6565b8451910190612c338183602088016124c6565b0195945050505050565b8082018082111561207b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b602081526000612078602083018461259e565b60006020808385031215612c9d57600080fd5b825167ffffffffffffffff811115612cb457600080fd5b8301601f81018513612cc557600080fd5b8051612cd3612a9282612a4d565b81815260609182028301840191848201919088841115612cf257600080fd5b938501935b83851015612d4e5780858a031215612d0f5760008081fd5b612d17612802565b8551612d22816123dd565b81528587015187820152604080870151612d3b816123dd565b9082015283529384019391850191612cf7565b50979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff83168152604060208201526000611e24604083018461259e565b7f4578636c757369766544757463684f72646572207769746e6573732900000000815260008551612dc181601c850160208a016124c6565b855190830190612dd881601c840160208a016124c6565b8551910190612dee81601c8401602089016124c6565b8451910190612e0481601c8401602088016124c6565b01601c019695505050505050565b6000610140612e42838a51805173ffffffffffffffffffffffffffffffffffffffff168252602090810151910152565b6020890151604084015260408901516060840152612e836080840189805173ffffffffffffffffffffffffffffffffffffffff168252602090810151910152565b73ffffffffffffffffffffffffffffffffffffffff871660c08401528560e084015280610100840152612eb8818401866124ea565b9050828103610120840152612ecd81856124ea565b999850505050505050505056fe44757463684f7574707574286164647265737320746f6b656e2c75696e74323536207374617274416d6f756e742c75696e7432353620656e64416d6f756e742c6164647265737320726563697069656e7429546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e74294f72646572496e666f28616464726573732072656163746f722c6164647265737320737761707065722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e652c61646472657373206164646974696f6e616c56616c69646174696f6e436f6e74726163742c6279746573206164646974696f6e616c56616c69646174696f6e4461746129a2646970667358221220895643e805129fd4ed4b9dbb76b8350150a9a20556a76ca1da49adf06223485b64736f6c63430008130033",
    "sourceMap": "609:2894:62:-:0;;;1225:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1045:5:34;:14;;-1:-1:-1;;;;;;1045:14:34;-1:-1:-1;;;;;1045:14:34;;;;;;;1075:40;;1295:8:62;;1045:14:34;;;;;;:5;1075:40;;1045:5;;1075:40;-1:-1:-1;;1716:1:21;1821:7;:22;-1:-1:-1;;;;;;1559:18:60::1;;::::0;-1:-1:-1;609:2894:62;;-1:-1:-1;609:2894:62;14:141:101;-1:-1:-1;;;;;99:31:101;;89:42;;79:70;;145:1;142;135:12;79:70;14:141;:::o;160:423::-;257:6;265;318:2;306:9;297:7;293:23;289:32;286:52;;;334:1;331;324:12;286:52;366:9;360:16;385:41;420:5;385:41;:::i;:::-;495:2;480:18;;474:25;445:5;;-1:-1:-1;508:43:101;474:25;508:43;:::i;:::-;570:7;560:17;;;160:423;;;;;:::o;:::-;609:2894:62;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "609:2894:62:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1927:434:60;;;;;;:::i;:::-;;:::i;:::-;;2396:452;;;;;;:::i;:::-;;:::i;1419:33::-;;;;;;;;;;;;;;;;;;2288:42:101;2276:55;;;2258:74;;2246:2;2231:18;1419:33:60;;;;;;;2883:613;;;;;;:::i;:::-;;:::i;3977:289:42:-;;;;;;;;;;-1:-1:-1;3977:289:42;;;;;:::i;:::-;;:::i;1619:273:60:-;;;;;;:::i;:::-;;:::i;1379:43:42:-;;;;;;;;;;-1:-1:-1;1379:43:42;;;;;;;;690:20:34;;;;;;;;;;-1:-1:-1;690:20:34;;;;;;;;1312:161;;;;;;;;;;-1:-1:-1;1312:161:34;;;;;:::i;:::-;;:::i;1927:434:60:-;2261:21:21;:19;:21::i;:::-;2138:22:60::1;::::0;;2158:1:::1;2138:22:::0;;;;;::::1;::::0;;;2098:37:::1;::::0;2138:22:::1;;;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2138:22:60;;;;;;;::::1;::::0;::::1;;;;;2098:62;;2190:14;2198:5;2190:7;:14::i;:::-;2170;2185:1;2170:17;;;;;;;;:::i;:::-;;;;;;:34;;;;2215:24;2224:14;2215:8;:24::i;:::-;2249:74;::::0;;;;2266:10:::1;::::0;2249:44:::1;::::0;:74:::1;::::0;2294:14;;2310:12;;;;2249:74:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2333:21;2339:14;2333:5;:21::i;:::-;2088:273;2303:20:21::0;1716:1;2809:7;:22;2629:209;2303:20;1927:434:60;;;:::o;2396:452::-;2261:21:21;:19;:21::i;:::-;2521:6:60;2498:20:::1;2521:6:::0;2584:33:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2584:33:60;;;;;;;::::1;::::0;::::1;;;;;;2544:73;;2657:9;2652:114;2676:12;2672:1;:16;2652:114;;;2733:18;2741:6;;2748:1;2741:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2733:7;:18::i;:::-;2713:14;2728:1;2713:17;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:38;2690:3:::1;;2652:114;;;;2786:24;2795:14;2786:8;:24::i;:::-;2820:21;2826:14;2820:5;:21::i;:::-;2488:360;;2303:20:21::0;1716:1;2809:7;:22;2629:209;2303:20;2396:452:60;;:::o;2883:613::-;2261:21:21;:19;:21::i;:::-;3085:6:60;3062:20:::1;3085:6:::0;3148:33:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3148:33:60;;;;;;;::::1;::::0;::::1;;;;;;3108:73;;3221:9;3216:114;3240:12;3236:1;:16;3216:114;;;3297:18;3305:6;;3312:1;3305:9;;;;;;;:::i;3297:18::-;3277:14;3292:1;3277:17;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:38;3254:3:::1;;3216:114;;;;3350:24;3359:14;3350:8;:24::i;:::-;3384:74;::::0;;;;3401:10:::1;::::0;3384:44:::1;::::0;:74:::1;::::0;3429:14;;3445:12;;;;3384:74:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3468:21;3474:14;3468:5;:21::i;:::-;3052:444;;2303:20:21::0;1716:1;2809:7;:22;2629:209;2303:20;2883:613:60;;;;:::o;3977:289:42:-;778:5:34;;;;764:10;:19;756:44;;;;;;;9607:2:101;756:44:34;;;9589:21:101;9646:2;9626:18;;;9619:30;9685:14;9665:18;;;9658:42;9717:18;;756:44:34;;;;;;;;;4102:13:42::1;::::0;;::::1;4126:57:::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;4198:61:::1;::::0;;4102:13;;;::::1;9981:34:101::0;;;10046:2;10031:18;;10024:43;;;;4198:61:42::1;::::0;9893:18:101;4198:61:42::1;;;;;;;4057:209;3977:289:::0;:::o;1619:273:60:-;2261:21:21;:19;:21::i;:::-;1753:22:60::1;::::0;;1773:1:::1;1753:22:::0;;;;;::::1;::::0;;;1713:37:::1;::::0;1753:22:::1;;;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1753:22:60;;;;;;;::::1;::::0;::::1;;;;;1713:62;;1805:14;1813:5;1805:7;:14::i;:::-;1785;1800:1;1785:17;;;;;;;;:::i;:::-;;;;;;:34;;;;1830:24;1839:14;1830:8;:24::i;:::-;1864:21;1870:14;1864:5;:21::i;:::-;1703:189;2303:20:21::0;1716:1;2809:7;:22;2629:209;2303:20;1619:273:60;:::o;1312:161:34:-;778:5;;;;764:10;:19;756:44;;;;;;;9607:2:101;756:44:34;;;9589:21:101;9646:2;9626:18;;;9619:30;9685:14;9665:18;;;9658:42;9717:18;;756:44:34;9405:336:101;756:44:34;1392:5:::1;:16:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;1424:42:::1;::::0;1392:16;;1445:10:::1;::::0;1424:42:::1;::::0;1392:5;1424:42:::1;1312:161:::0;:::o;2336:287:21:-;1759:1;2468:7;;:19;2460:63;;;;;;;10280:2:101;2460:63:21;;;10262:21:101;10319:2;10299:18;;;10292:30;10358:33;10338:18;;;10331:61;10409:18;;2460:63:21;10078:355:101;2460:63:21;1759:1;2598:18;;2336:287::o;1364:731:62:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1591:17:62;:11;;:17;:::i;:::-;1580:52;;;;;;;:::i;:::-;1545:87;;1642:21;1657:5;1642:14;:21::i;:::-;1690:285;;;;;;;;1724:5;:10;;;1690:285;;;;1755:59;1773:5;:20;;;1795:5;:18;;;1755:5;:11;;;:17;;:59;;;;;:::i;:::-;1690:285;;;;1837:61;1857:5;:20;;;1879:5;:18;;;1837:5;:13;;;:19;;:61;;;;;:::i;:::-;1690:285;;;;1917:11;:15;;;;;;;;:::i;:::-;1690:285;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1690:285:62;;;-1:-1:-1;1690:285:62;;1952:12;:5;:10;:12::i;:::-;1690:285;;2014:21;;;;2037:20;;;;2059:28;;;;1674:301;;-1:-1:-1;1985:103:62;;1674:301;;2014:21;2037:20;1985:28;:103::i;:::-;1535:560;1364:731;;;:::o;3644:404:60:-;3735:13;;3712:20;3782:250;3806:12;3802:1;:16;3782:250;;;3843:26;3872:6;3879:1;3872:9;;;;;;;;:::i;:::-;;;;;;;3843:38;;3899:18;3911:5;3899:11;:18::i;:::-;3935:26;:5;3950:10;3935:14;:26::i;:::-;3979:38;3999:5;4006:10;3979:19;:38::i;:::-;-1:-1:-1;3820:3:60;;3782:250;;4170:1267;4258:13;;4235:20;4438:536;4462:12;4458:1;:16;4438:536;;;4499:34;4536:6;4543:1;4536:9;;;;;;;;:::i;:::-;;;;;;;4499:46;;4563:21;4587:13;:21;;;:28;4563:52;;4638:9;4633:217;4657:13;4653:1;:17;4633:217;;;4699:25;4727:13;:21;;;4749:1;4727:24;;;;;;;;:::i;:::-;;;;;;;4699:52;;4773:58;4799:6;:16;;;4817:6;:13;;;4773:6;:12;;;:25;;;;:58;;;;;:::i;:::-;-1:-1:-1;4672:3:60;;4633:217;;;;4906:13;:18;;;:26;;;4873:86;;4894:10;4873:86;;4878:6;4885:1;4878:9;;;;;;;;:::i;:::-;;;;;;;:14;;;4873:86;4934:13;:18;;;:24;;;4873:86;;;;17063:25:101;;17051:2;17036:18;;16917:177;4873:86:60;;;;;;;;-1:-1:-1;;4476:3:60;;4438:536;;;-1:-1:-1;5314:21:60;:25;5310:121;;5355:65;5386:10;5398:21;5355:30;:65::i;2832:669:62:-;2940:18;;;;2918:10;;:19;;;:40;2914:101;;;2981:23;;;;;;;;;;;;;;2914:101;3050:5;:20;;;3029:5;:18;;;:41;3025:108;;;3093:29;;;;;;;;;;;;;;3025:108;3174:11;;;;:21;;;;3147:23;;;;;:48;3143:352;;3244:9;3239:232;3263:5;:13;;;:20;3259:1;:24;3239:232;;;3348:5;:13;;;3362:1;3348:16;;;;;;;;:::i;:::-;;;;;;;:26;;;3316:5;:13;;;3330:1;3316:16;;;;;;;;:::i;:::-;;;;;;;:28;;;:58;3312:141;;3409:21;;;;;;;;;;;;;;3312:141;3285:3;;3239:232;;3946:462:52;4079:24;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;4079:24:52;4143:5;:15;;;4123:5;:17;;;:35;4119:91;;;4181:18;;;;;;;;;;;;;;4119:91;4220:20;4243:85;4263:5;:17;;;4282:5;:15;;;4299:14;4315:12;4243:19;:85::i;:::-;4347:54;;;;;;;;4358:11;;4347:54;;;;;;;;;;;4385:15;;;;4347:54;;;;;;;-1:-1:-1;4347:54:52;;3946:462;-1:-1:-1;;;3946:462:52:o;3221:453::-;3425:14;;3359:27;;3425:14;3458:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;3458:31:52;;;;;;;;;;;;;;;3449:40;;3528:9;3523:135;3547:12;3543:1;:16;3523:135;;;3596:47;3602:7;3610:1;3602:10;;;;;;;;:::i;:::-;;;;;;;3614:14;3630:12;3596:5;:47::i;:::-;3584:6;3591:1;3584:9;;;;;;;;:::i;:::-;;;;;;;;;;:59;3561:3;;3523:135;;;;3392:282;3221:453;;;;;:::o;2315:541:54:-;1162:365;;18222:22:101;1162:365:54;;;18210:35:101;18275:17;18261:12;;;18254:39;18323:25;18309:12;;;18302:47;18379:23;18365:12;;;18358:45;18433:26;18419:12;;;18412:48;18491:33;18476:13;;;18469:56;18556:21;18541:13;;;18534:44;18609:27;18594:13;;;18587:50;18668:25;18653:13;;;18646:48;18725:24;18710:13;;;18703:47;2386:7:54;;18766:13:101;;1162:365:54;;;;;;;;;;1631:31;;;;;;;;;;1162:365;;;1631:31;1162:365;1631:31;;;1664:28;;;;;;;;;;;;;;;;;1571:127;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1748:21;;;;;;2496:17;:5;:10;;;:15;:17::i;:::-;2531:5;:20;;;2569:5;:18;;;2605:5;:21;;;2644:5;:28;;;2690:5;:11;;;:17;;;2725:5;:11;;;:23;;;2766:5;:11;;;:21;;;2805:20;:5;:13;;;:18;:20::i;:::-;2435:404;;;;;;19906:25:101;;;;19947:18;;19940:34;;;;19990:18;;;19983:34;;;;20033:18;;;20026:34;;;;20079:42;20158:15;;;20137:19;;;20130:44;20190:19;;;20183:35;;;;20255:15;20234:19;;;20227:44;20287:19;;;20280:35;20331:19;;;20324:35;20375:19;;;20368:35;19878:19;;2435:404:54;;;;;;;;;;;;;2412:437;;;;;;2405:444;;2315:541;;;:::o;1081:920:55:-;1351:47;1368:9;1379:18;1351:16;:47::i;:::-;1414:7;1347:84;1535:22;1531:103;;1602:21;;;;;;;;;;;;;;1531:103;1719:13;;;;1688:28;1742:253;1766:7;:14;1762:1;:18;1742:253;;;1797:25;1825:7;1833:1;1825:10;;;;;;;;:::i;:::-;;;;;;;1797:38;;1865:59;1896:22;751:6;1890:28;;;;:::i;:::-;1865:13;;;;;751:6;1865:24;:59::i;:::-;1849:13;;;;:75;1967:3;;1742:253;;;;1264:737;1081:920;;;;:::o;1725:2101:42:-;1810:13;;1802:36;1810:13;1798:73;;1725:2101;:::o;1798:73::-;1915:13;;:34;;;;;1881:31;;1915:13;;;:27;;:34;;1943:5;;1915:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1983:13;;;;:20;2040:17;;1881:68;;-1:-1:-1;1983:20:42;1959:21;2207:32;2040:17;1983:20;2207:32;:::i;:::-;2176:73;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;2176:73:42;;;;;;;;;;;;;;;2142:107;;2289:9;2284:109;2308:13;2304:1;:17;2284:109;;;2362:5;:13;;;2376:1;2362:16;;;;;;;;:::i;:::-;;;;;;;2346:10;2357:1;2346:13;;;;;;;;:::i;:::-;;;;;;;;;;:32;2323:3;;2284:109;;;;2418:9;2413:1370;2437:16;2433:1;:20;2413:1370;;;2470:28;2501:10;2512:1;2501:13;;;;;;;;:::i;:::-;;;;;;;2470:44;;2597:9;2592:207;2616:1;2612;:5;2592:207;;;2669:10;2680:1;2669:13;;;;;;;;:::i;:::-;;;;;;;:19;;;2650:38;;:9;:15;;;:38;;;2646:135;;2742:15;;2723:35;;;;;2288:42:101;2276:55;;;2723:35:42;;;2258:74:101;2231:18;;2723:35:42;2094:244:101;2646:135:42;2619:3;;2592:207;;;-1:-1:-1;2878:18:42;;2910:310;2934:13;2930:1;:17;2910:310;;;2968:25;2996:5;:13;;;3010:1;2996:16;;;;;;;;:::i;:::-;;;;;;;2968:44;;3050:9;:15;;;3034:31;;:6;:12;;;:31;;;3030:105;;3103:13;;;;3089:27;;;;:::i;:::-;;;3030:105;-1:-1:-1;3184:3:42;;2910:310;;;-1:-1:-1;3316:15:42;;3294:11;;;;:17;3286:45;;;;;;;3282:116;;3365:11;;;;;:18;;3351:32;;;;:::i;:::-;;;3282:116;3416:10;3430:1;3416:15;3412:60;;3456:15;;3440:32;;;;;2288:42:101;2276:55;;;3440:32:42;;;2258:74:101;2231:18;;3440:32:42;2094:244:101;3412:60:42;3510:39;:10;1324:1;1273:6;3510:21;:39::i;:::-;3491:9;:16;;;:58;3487:171;;;3588:15;;3605:16;;;;3623:19;;;;;3576:67;;;;;22653:42:101;22722:15;;;3576:67:42;;;22704:34:101;22754:18;;;22747:34;;;;22817:15;;;;22797:18;;;22790:43;22616:18;;3576:67:42;22441:398:101;3487:171:42;3703:9;3671:10;3682:17;3698:1;3682:13;:17;:::i;:::-;3671:29;;;;;;;;:::i;:::-;;;;;;;;;;:41;-1:-1:-1;;3755:3:42;;2413:1370;;;-1:-1:-1;3793:13:42;;;;:26;;;;-1:-1:-1;;;1725:2101:42:o;518:505:59:-;641:18;;:26;616:52;;624:4;616:52;612:106;;691:16;;;;;;;;;;;;;;612:106;750:18;;:27;;;732:15;:45;728:99;;;800:16;;;;;;;;;;;;;;728:99;849:18;;:47;;;841:70;;;837:180;;927:18;;:47;;;:79;;;;;:56;;;;;;;:79;;984:6;;927:13;;:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2133:350:62;2230:7;:33;;;2277:16;:5;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;561:303:58;;;624:149;;;;;693:11;;;;;;:17;624:149;;561:303;;;;624:149;;;737:11;;:21;;;624:149;;;;561:303;;794:10;;:16;;;561:303;;;;;;;834:10;;:19;;;;561:303;;;;;401:470;2277:16:62;-1:-1:-1;;;;;;;;;;;;;;;;;1123:90:58;;;;;;;;;;;;;1193:11;;;;:18;;;1123:90;;;;2346:5:62;:10;;;:18;;;2378:5;:10;;;2008:31:54;;;;;;;;;;;;;;;;;1162:365;;;18222:22:101;1162:365:54;;;18210:35:101;18275:17;18261:12;;;18254:39;18323:25;18309:12;;;18302:47;18379:23;18365:12;;;18358:45;18433:26;18419:12;;;18412:48;18491:33;18476:13;;;18469:56;18556:21;18541:13;;;18534:44;18609:27;18594:13;;;18587:50;18668:25;18653:13;;;18646:48;18725:24;18710:13;;;18703:47;1162:365:54;;;;;;;;;2099:28;;;;;;;18766:13:101;;;2099:28:54;;;18766:13:101;2099:28:54;;;;;2141:36;;;;;;;;;;;;;;;;;1934:253;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;2457:9:62;;;;2230:246;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1529:434:51;2584:18;;;1623:334;;1746:33;1761:9;1772:6;1746:14;:33::i;1623:334::-;1883:63;:32;;;1916:10;1928:9;1939:6;1883:32;:63::i;2135:221::-;2214:12;2231:9;:14;;2253:6;444:4;2231:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2213:83;;;2311:7;2306:43;;2327:22;;;;;;;;;;;;;;1211:965:52;1359:21;1415:14;1400:12;:29;1396:774;;;1452:24;;;;;;;;;;;;;;1396:774;1513:15;1497:12;:31;1493:677;;-1:-1:-1;1560:9:52;1493:677;;;1608:15;1590:14;:33;1586:584;;-1:-1:-1;1655:11:52;1586:584;;;1743:15;:32;;;1812:29;;;1863:23;;;1859:287;;;1940:55;1941:23;;;1977:7;1986:8;1940:36;:55::i;:::-;1926:11;:69;1910:85;;1859:287;;;2072:55;2073:23;;;2109:7;2118:8;2072:36;:55::i;:::-;2058:11;:69;2042:85;;1859:287;1697:463;;1586:584;1211:965;;;;;;:::o;2452:474::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;2653:6:52;:16;;;2632:6;:18;;;:37;2628:93;;;2692:18;;;;;;;;;;;;;;2628:93;2731:21;2755:87;2775:6;:18;;;2795:6;:16;;;2813:14;2829:12;2755:19;:87::i;:::-;2731:111;;2861:58;;;;;;;;2873:6;:12;;;2861:58;;;;;;2887:13;2861:58;;;;2902:6;:16;;;2861:58;;;;;2852:67;;2618:308;2452:474;;;;;:::o;574:416:57:-;634:7;461:15;;;;;;;;;;;;;;;;;451:26;;;;;;;749:12;;779;;;;809:10;;;;;837:13;;;;868:33;;;;929:29;;;;919:40;;;;;;683:290;;;;809:10;;837:13;;868:33;;919:40;683:290;26203:25:101;;;26247:42;26325:15;;;26320:2;26305:18;;26298:43;26377:15;;;26372:2;26357:18;;26350:43;26424:2;26409:18;;26402:34;;;;26467:3;26452:19;;26445:35;26517:15;;;26511:3;26496:19;;26489:44;26564:3;26549:19;;26542:35;26190:3;26175:19;;25841:742;3091:487:53;3158:7;3201:25;3244:7;:14;3239:2;:19;3229:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3229:30:53;;3201:58;;3279:9;3274:243;3298:7;:14;3294:1;:18;3274:243;;;3337:18;3358:16;3363:7;3371:1;3363:10;;;;;;;;:::i;:::-;;;;;;;3358:4;:16::i;:::-;3466:4;3459:12;;;3430:42;;;3423:62;-1:-1:-1;3314:3:53;;3274:243;;;-1:-1:-1;3538:23:53;;;;;;;;3091:487;-1:-1:-1;;3091:487:53:o;2361:221:55:-;2457:9;2485:23;;;;;:63;;;2530:18;2512:15;:36;2485:63;:90;;;-1:-1:-1;2552:23:55;;;2565:10;2552:23;2485:90;2478:97;;2361:221;;;;;:::o;1564:526:37:-;1680:9;1928:1;1915:11;1911:19;1908:1;1905:26;1902:1;1898:34;1891:42;1878:11;1874:60;1864:116;;1964:1;1961;1954:12;1864:116;-1:-1:-1;2051:9:37;;2047:27;;1564:526::o;1328:1782:38:-;1466:12;1636:4;1630:11;1778:66;1759:17;1752:93;1902:42;1896:4;1892:53;1888:1;1869:17;1865:25;1858:88;2042:42;2038:2;2034:51;2029:2;2010:17;2006:26;1999:87;2172:6;2167:2;2148:17;2144:26;2137:42;3026:2;3023:1;3018:3;2999:17;2996:1;2989:5;2982;2977:52;2545:16;2538:24;2532:2;2514:16;2511:24;2507:1;2503;2497:8;2494:15;2490:46;2487:76;2287:756;2276:767;;;3071:7;3063:40;;;;;;;26790:2:101;3063:40:38;;;26772:21:101;26829:2;26809:18;;;26802:30;26868:22;26848:18;;;26841:50;26908:18;;3063:40:38;26588:344:101;3063:40:38;1456:1654;1328:1782;;;;:::o;2728:234:53:-;2792:7;1695:17;;;;;;;;;;;;;;;;;1685:28;;;;;;;2876:12;;2890:18;;;;2910:16;;;;;2928;;;;2841:104;;;;2910:16;;2928;2841:104;27196:25:101;;;27240:42;27318:15;;;27313:2;27298:18;;27291:43;27365:2;27350:18;;27343:34;;;;27408:2;27393:18;;27386:34;27457:15;27451:3;27436:19;;27429:44;27183:3;27168:19;;26937:542;14:159;78:5;123:2;114:6;109:3;105:16;101:25;98:45;;;139:1;136;129:12;178:347;229:8;239:6;293:3;286:4;278:6;274:17;270:27;260:55;;311:1;308;301:12;260:55;-1:-1:-1;334:20:101;;377:18;366:30;;363:50;;;409:1;406;399:12;363:50;446:4;438:6;434:17;422:29;;498:3;491:4;482:6;474;470:19;466:30;463:39;460:59;;;515:1;512;505:12;460:59;178:347;;;;;:::o;530:673::-;641:6;649;657;710:2;698:9;689:7;685:23;681:32;678:52;;;726:1;723;716:12;678:52;766:9;753:23;795:18;836:2;828:6;825:14;822:34;;;852:1;849;842:12;822:34;875:71;938:7;929:6;918:9;914:22;875:71;:::i;:::-;865:81;;999:2;988:9;984:18;971:32;955:48;;1028:2;1018:8;1015:16;1012:36;;;1044:1;1041;1034:12;1012:36;;1083:60;1135:7;1124:8;1113:9;1109:24;1083:60;:::i;:::-;530:673;;1162:8;;-1:-1:-1;1057:86:101;;-1:-1:-1;;;;530:673:101:o;1208:387::-;1291:8;1301:6;1355:3;1348:4;1340:6;1336:17;1332:27;1322:55;;1373:1;1370;1363:12;1322:55;-1:-1:-1;1396:20:101;;1439:18;1428:30;;1425:50;;;1471:1;1468;1461:12;1425:50;1508:4;1500:6;1496:17;1484:29;;1568:3;1561:4;1551:6;1548:1;1544:14;1536:6;1532:27;1528:38;1525:47;1522:67;;;1585:1;1582;1575:12;1600:489;1718:6;1726;1779:2;1767:9;1758:7;1754:23;1750:32;1747:52;;;1795:1;1792;1785:12;1747:52;1835:9;1822:23;1868:18;1860:6;1857:30;1854:50;;;1900:1;1897;1890:12;1854:50;1939:90;2021:7;2012:6;2001:9;1997:22;1939:90;:::i;:::-;2048:8;;1913:116;;-1:-1:-1;1600:489:101;-1:-1:-1;;;;1600:489:101:o;2343:797::-;2481:6;2489;2497;2505;2558:2;2546:9;2537:7;2533:23;2529:32;2526:52;;;2574:1;2571;2564:12;2526:52;2614:9;2601:23;2643:18;2684:2;2676:6;2673:14;2670:34;;;2700:1;2697;2690:12;2670:34;2739:90;2821:7;2812:6;2801:9;2797:22;2739:90;:::i;:::-;2848:8;;-1:-1:-1;2713:116:101;-1:-1:-1;2936:2:101;2921:18;;2908:32;;-1:-1:-1;2952:16:101;;;2949:36;;;2981:1;2978;2971:12;2949:36;;3020:60;3072:7;3061:8;3050:9;3046:24;3020:60;:::i;:::-;2343:797;;;;-1:-1:-1;3099:8:101;-1:-1:-1;;;;2343:797:101:o;3145:154::-;3231:42;3224:5;3220:54;3213:5;3210:65;3200:93;;3289:1;3286;3279:12;3304:134;3372:20;;3401:31;3372:20;3401:31;:::i;:::-;3304:134;;;:::o;3443:247::-;3502:6;3555:2;3543:9;3534:7;3530:23;3526:32;3523:52;;;3571:1;3568;3561:12;3523:52;3610:9;3597:23;3629:31;3654:5;3629:31;:::i;:::-;3679:5;3443:247;-1:-1:-1;;;3443:247:101:o;3695:365::-;3786:6;3839:2;3827:9;3818:7;3814:23;3810:32;3807:52;;;3855:1;3852;3845:12;3807:52;3895:9;3882:23;3928:18;3920:6;3917:30;3914:50;;;3960:1;3957;3950:12;3914:50;3983:71;4046:7;4037:6;4026:9;4022:22;3983:71;:::i;4559:184::-;4611:77;4608:1;4601:88;4708:4;4705:1;4698:15;4732:4;4729:1;4722:15;4748:184;4800:77;4797:1;4790:88;4897:4;4894:1;4887:15;4921:4;4918:1;4911:15;4937:250;5022:1;5032:113;5046:6;5043:1;5040:13;5032:113;;;5122:11;;;5116:18;5103:11;;;5096:39;5068:2;5061:10;5032:113;;;-1:-1:-1;;5179:1:101;5161:16;;5154:27;4937:250::o;5192:329::-;5233:3;5271:5;5265:12;5298:6;5293:3;5286:19;5314:76;5383:6;5376:4;5371:3;5367:14;5360:4;5353:5;5349:16;5314:76;:::i;:::-;5435:2;5423:15;5440:66;5419:88;5410:98;;;;5510:4;5406:109;;5192:329;-1:-1:-1;;5192:329:101:o;5787:696::-;5851:3;5889:5;5883:12;5916:6;5911:3;5904:19;5942:4;5971:2;5966:3;5962:12;5955:19;;6008:2;6001:5;5997:14;6029:1;6039:419;6053:6;6050:1;6047:13;6039:419;;;6112:13;;6219:9;;6148:42;6215:18;;;6203:31;;6274:11;;;6268:18;6254:12;;;6247:40;6310:4;6358:11;;;6352:18;6348:27;6334:12;;;6327:49;6405:4;6396:14;;;;6433:15;;;;6075:1;6068:9;6039:419;;;-1:-1:-1;6474:3:101;;5787:696;-1:-1:-1;;;;;5787:696:101:o;6488:1240::-;6544:3;6588:5;6582:12;6615:4;6610:3;6603:17;6639:42;6738:2;6723:12;6717:19;6713:28;6706:4;6701:3;6697:14;6690:52;6809:2;6801:4;6787:12;6783:23;6777:30;6773:39;6767:3;6762;6758:13;6751:62;6868:4;6854:12;6850:23;6844:30;6838:3;6833;6829:13;6822:53;6930:4;6916:12;6912:23;6906:30;6900:3;6895;6891:13;6884:53;7004:2;6996:4;6982:12;6978:23;6972:30;6968:39;6962:3;6957;6953:13;6946:62;;7063:4;7049:12;7045:23;7039:30;7017:52;;7100:4;7094:3;7089;7085:13;7078:27;7127:47;7169:3;7164;7160:13;7144:14;7127:47;:::i;:::-;7114:60;;7222:4;7215:5;7211:16;7205:23;7237:60;7291:4;7286:3;7282:14;7266;5606:12;;5620:42;5602:61;5590:74;;5713:4;5702:16;;;5696:23;5680:14;;;5673:47;5769:4;5758:16;;;5752:23;5736:14;;5729:47;5526:256;7237:60;;7345:4;7338:5;7334:16;7328:23;7394:3;7387:5;7383:15;7376:4;7371:3;7367:14;7360:39;7420:62;7476:5;7460:14;7420:62;:::i;:::-;7408:74;;;7530:4;7523:5;7519:16;7513:23;7578:3;7572:4;7568:14;7561:4;7556:3;7552:14;7545:38;7606;7639:4;7623:14;7606:38;:::i;:::-;7592:52;;;7693:4;7686:5;7682:16;7676:23;7669:4;7664:3;7660:14;7653:47;7716:6;7709:13;;;6488:1240;;;;:::o;7733:1274::-;7995:4;8043:2;8032:9;8028:18;8073:2;8062:9;8055:21;8096:6;8131;8125:13;8162:6;8154;8147:22;8200:2;8189:9;8185:18;8178:25;;8262:2;8252:6;8249:1;8245:14;8234:9;8230:30;8226:39;8212:53;;8284:4;8323:2;8315:6;8311:15;8344:1;8354:328;8368:6;8365:1;8362:13;8354:328;;;8457:66;8445:9;8437:6;8433:22;8429:95;8424:3;8417:108;8548:54;8595:6;8586;8580:13;8548:54;:::i;:::-;8538:64;-1:-1:-1;8660:12:101;;;;8625:15;;;;8390:1;8383:9;8354:328;;;8358:3;;8730:9;8722:6;8718:22;8713:2;8702:9;8698:18;8691:50;8765:6;8757;8750:22;8819:6;8811;8806:2;8798:6;8794:15;8781:45;8872:1;8846:19;;;8842:28;;8835:39;8923:2;8911:15;;;8928:66;8907:88;8895:101;;;8891:110;;;;7733:1274;-1:-1:-1;;;;;;7733:1274:101:o;9012:388::-;9110:4;9168:11;9155:25;9258:66;9247:8;9231:14;9227:29;9223:102;9203:18;9199:127;9189:155;;9340:1;9337;9330:12;9189:155;9361:33;;;;;9012:388;-1:-1:-1;;9012:388:101:o;10438:580::-;10515:4;10521:6;10581:11;10568:25;10671:66;10660:8;10644:14;10640:29;10636:102;10616:18;10612:127;10602:155;;10753:1;10750;10743:12;10602:155;10780:33;;10832:20;;;-1:-1:-1;10875:18:101;10864:30;;10861:50;;;10907:1;10904;10897:12;10861:50;10940:4;10928:17;;-1:-1:-1;10971:14:101;10967:27;;;10957:38;;10954:58;;;11008:1;11005;10998:12;11023:253;11095:2;11089:9;11137:4;11125:17;;11172:18;11157:34;;11193:22;;;11154:62;11151:88;;;11219:18;;:::i;:::-;11255:2;11248:22;11023:253;:::o;11281:::-;11353:2;11347:9;11395:4;11383:17;;11430:18;11415:34;;11451:22;;;11412:62;11409:88;;;11477:18;;:::i;11539:253::-;11611:2;11605:9;11653:4;11641:17;;11688:18;11673:34;;11709:22;;;11670:62;11667:88;;;11735:18;;:::i;11797:334::-;11868:2;11862:9;11924:2;11914:13;;11929:66;11910:86;11898:99;;12027:18;12012:34;;12048:22;;;12009:62;12006:88;;;12074:18;;:::i;:::-;12110:2;12103:22;11797:334;;-1:-1:-1;11797:334:101:o;12136:589::-;12178:5;12231:3;12224:4;12216:6;12212:17;12208:27;12198:55;;12249:1;12246;12239:12;12198:55;12285:6;12272:20;12311:18;12307:2;12304:26;12301:52;;;12333:18;;:::i;:::-;12377:114;12485:4;12416:66;12409:4;12405:2;12401:13;12397:86;12393:97;12377:114;:::i;:::-;12516:2;12507:7;12500:19;12562:3;12555:4;12550:2;12542:6;12538:15;12534:26;12531:35;12528:55;;;12579:1;12576;12569:12;12528:55;12644:2;12637:4;12629:6;12625:17;12618:4;12609:7;12605:18;12592:55;12692:1;12667:16;;;12685:4;12663:27;12656:38;;;;12671:7;12136:589;-1:-1:-1;;;12136:589:101:o;12730:1093::-;12786:5;12834:4;12822:9;12817:3;12813:19;12809:30;12806:50;;;12852:1;12849;12842:12;12806:50;12885:2;12879:9;12927:4;12919:6;12915:17;12951:18;13019:6;13007:10;13004:22;12999:2;12987:10;12984:18;12981:46;12978:72;;;13030:18;;:::i;:::-;13070:10;13066:2;13059:22;13099:6;13090:15;;13142:9;13129:23;13114:38;;13161:33;13186:7;13161:33;:::i;:::-;13203:23;;;13278:2;13263:18;;13250:32;;13291:33;13250:32;13291:33;:::i;:::-;13357:7;13352:2;13344:6;13340:15;13333:32;13426:2;13415:9;13411:18;13398:32;13393:2;13385:6;13381:15;13374:57;13492:2;13481:9;13477:18;13464:32;13459:2;13451:6;13447:15;13440:57;13549:3;13538:9;13534:19;13521:33;13506:48;;13563:33;13588:7;13563:33;:::i;:::-;13630:7;13624:3;13616:6;13612:16;13605:33;13689:3;13678:9;13674:19;13661:33;13647:47;;13717:2;13709:6;13706:14;13703:34;;;13733:1;13730;13723:12;13703:34;;13771:45;13812:3;13803:6;13792:9;13788:22;13771:45;:::i;:::-;13765:3;13757:6;13753:16;13746:71;;;12730:1093;;;;:::o;13828:423::-;13885:5;13933:4;13921:9;13916:3;13912:19;13908:30;13905:50;;;13951:1;13948;13941:12;13905:50;13973:22;;:::i;:::-;13964:31;;14032:9;14019:23;14051:33;14076:7;14051:33;:::i;:::-;14107:7;14100:5;14093:22;;14175:2;14164:9;14160:18;14147:32;14142:2;14135:5;14131:14;14124:56;14240:2;14229:9;14225:18;14212:32;14207:2;14200:5;14196:14;14189:56;13828:423;;;;:::o;14256:194::-;14327:4;14360:18;14352:6;14349:30;14346:56;;;14382:18;;:::i;:::-;-1:-1:-1;14427:1:101;14423:14;14439:4;14419:25;;14256:194::o;14455:1295::-;14520:5;14573:3;14566:4;14558:6;14554:17;14550:27;14540:55;;14591:1;14588;14581:12;14540:55;14627:6;14614:20;14653:4;14677:71;14693:54;14744:2;14693:54;:::i;:::-;14677:71;:::i;:::-;14782:15;;;14868:1;14864:10;;;;14852:23;;14848:32;;;14813:12;;;;14892:15;;;14889:35;;;14920:1;14917;14910:12;14889:35;14956:2;14948:6;14944:15;14968:753;14984:6;14979:3;14976:15;14968:753;;;15062:4;15056:3;15051;15047:13;15043:24;15040:114;;;15108:1;15137:2;15133;15126:14;15040:114;15180:22;;:::i;:::-;15243:3;15230:17;15260:33;15285:7;15260:33;:::i;:::-;15306:22;;15377:12;;;15364:26;15348:14;;;15341:50;15414:2;15465:12;;;15452:26;15436:14;;;15429:50;15502:2;15545:12;;;15532:26;15571:33;15532:26;15571:33;:::i;:::-;15624:14;;;15617:31;15661:18;;15699:12;;;;15010:4;15001:14;14968:753;;;-1:-1:-1;15739:5:101;14455:1295;-1:-1:-1;;;;;;14455:1295:101:o;15755:1157::-;15852:6;15905:2;15893:9;15884:7;15880:23;15876:32;15873:52;;;15921:1;15918;15911:12;15873:52;15961:9;15948:23;15990:18;16031:2;16023:6;16020:14;16017:34;;;16047:1;16044;16037:12;16017:34;16070:22;;;;16126:6;16108:16;;;16104:29;16101:49;;;16146:1;16143;16136:12;16101:49;16172:22;;:::i;:::-;16232:2;16219:16;16260:2;16250:8;16247:16;16244:36;;;16276:1;16273;16266:12;16244:36;16303:55;16350:7;16339:8;16335:2;16331:17;16303:55;:::i;:::-;16296:5;16289:70;;16412:2;16408;16404:11;16391:25;16386:2;16379:5;16375:14;16368:49;16470:2;16466;16462:11;16449:25;16444:2;16437:5;16433:14;16426:49;16507:31;16534:2;16530;16526:11;16507:31;:::i;:::-;16502:2;16495:5;16491:14;16484:55;16593:3;16589:2;16585:12;16572:26;16566:3;16559:5;16555:15;16548:51;16632;16675:7;16669:3;16665:2;16661:12;16632:51;:::i;:::-;16626:3;16619:5;16615:15;16608:76;16730:3;16726:2;16722:12;16709:26;16760:2;16750:8;16747:16;16744:36;;;16776:1;16773;16766:12;16744:36;16814:67;16873:7;16862:8;16858:2;16854:17;16814:67;:::i;:::-;16807:4;16796:16;;16789:93;-1:-1:-1;16800:5:101;15755:1157;-1:-1:-1;;;;;15755:1157:101:o;18790:697::-;19011:3;19049:6;19043:13;19065:66;19124:6;19119:3;19112:4;19104:6;19100:17;19065:66;:::i;:::-;19194:13;;19153:16;;;;19216:70;19194:13;19153:16;19263:4;19251:17;;19216:70;:::i;:::-;19353:13;;19308:20;;;19375:70;19353:13;19308:20;19422:4;19410:17;;19375:70;:::i;:::-;19461:20;;18790:697;-1:-1:-1;;;;;18790:697:101:o;20414:279::-;20479:9;;;20500:10;;;20497:190;;;20543:77;20540:1;20533:88;20644:4;20641:1;20634:15;20672:4;20669:1;20662:15;20698:278;20891:2;20880:9;20873:21;20854:4;20911:59;20966:2;20955:9;20951:18;20943:6;20911:59;:::i;20981:1455::-;21106:6;21137:2;21180;21168:9;21159:7;21155:23;21151:32;21148:52;;;21196:1;21193;21186:12;21148:52;21229:9;21223:16;21262:18;21254:6;21251:30;21248:50;;;21294:1;21291;21284:12;21248:50;21317:22;;21370:4;21362:13;;21358:27;-1:-1:-1;21348:55:101;;21399:1;21396;21389:12;21348:55;21428:2;21422:9;21451:71;21467:54;21518:2;21467:54;:::i;21451:71::-;21556:15;;;21618:4;21657:11;;;21649:20;;21645:29;;;21587:12;;;;21544:3;21686:19;;;21683:39;;;21718:1;21715;21708:12;21683:39;21742:11;;;;21762:644;21778:6;21773:3;21770:15;21762:644;;;21858:2;21852:3;21843:7;21839:17;21835:26;21832:116;;;21902:1;21931:2;21927;21920:14;21832:116;21974:22;;:::i;:::-;22030:3;22024:10;22047:33;22072:7;22047:33;:::i;:::-;22093:22;;22157:12;;;22151:19;22135:14;;;22128:43;22194:2;22230:12;;;22224:19;22256:33;22224:19;22256:33;:::i;:::-;22309:14;;;22302:31;22346:18;;21795:12;;;;22384;;;;21762:644;;;-1:-1:-1;22425:5:101;20981:1455;-1:-1:-1;;;;;;;20981:1455:101:o;22844:398::-;23077:42;23069:6;23065:55;23054:9;23047:74;23157:2;23152;23141:9;23137:18;23130:30;23028:4;23177:59;23232:2;23221:9;23217:18;23209:6;23177:59;:::i;23247:1075::-;23647:30;23642:3;23635:43;23617:3;23707:6;23701:13;23723:75;23791:6;23786:2;23781:3;23777:12;23770:4;23762:6;23758:17;23723:75;:::i;:::-;23858:13;;23817:16;;;;23880:76;23858:13;23942:2;23934:11;;23927:4;23915:17;;23880:76;:::i;:::-;24017:13;;23975:17;;;24039:76;24017:13;24101:2;24093:11;;24086:4;24074:17;;24039:76;:::i;:::-;24176:13;;24134:17;;;24198:76;24176:13;24260:2;24252:11;;24245:4;24233:17;;24198:76;:::i;:::-;24294:17;24313:2;24290:26;;23247:1075;-1:-1:-1;;;;;;23247:1075:101:o;24538:1088::-;24968:4;24997:3;25009:60;25059:9;25050:6;25044:13;24413:12;;24427:42;24409:61;24397:74;;24520:4;24509:16;;;24503:23;24487:14;;24480:47;24327:206;25009:60;25125:4;25117:6;25113:17;25107:24;25100:4;25089:9;25085:20;25078:54;25188:4;25180:6;25176:17;25170:24;25163:4;25152:9;25148:20;25141:54;25204:63;25262:3;25251:9;25247:19;25239:6;24413:12;;24427:42;24409:61;24397:74;;24520:4;24509:16;;;24503:23;24487:14;;24480:47;24327:206;25204:63;25316:42;25308:6;25304:55;25298:3;25287:9;25283:19;25276:84;25397:6;25391:3;25380:9;25376:19;25369:35;25441:2;25435:3;25424:9;25420:19;25413:31;25467:44;25507:2;25496:9;25492:18;25484:6;25467:44;:::i;:::-;25453:58;;25560:9;25552:6;25548:22;25542:3;25531:9;25527:19;25520:51;25588:32;25613:6;25605;25588:32;:::i;:::-;25580:40;24538:1088;-1:-1:-1;;;;;;;;;24538:1088:101:o",
    "linkReferences": {},
    "immutableReferences": {
      "37017": [
        {
          "start": 224,
          "length": 32
        },
        {
          "start": 6427,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "execute((bytes,bytes))": "3f62192e",
    "executeBatch((bytes,bytes)[])": "0d7a16c3",
    "executeBatchWithCallback((bytes,bytes)[],bytes)": "13fb72c7",
    "executeWithCallback((bytes,bytes),bytes)": "0d335884",
    "feeController()": "6999b377",
    "owner()": "8da5cb5b",
    "permit2()": "12261ee7",
    "setProtocolFeeController(address)": "2d771389",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPermit2\",\"name\":\"_permit2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_protocolFeeOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DeadlineBeforeEndTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeadlinePassed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"duplicateToken\",\"type\":\"address\"}],\"name\":\"DuplicateFeeOutput\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EndTimeBeforeStartTime\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"FeeTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectAmounts\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputAndOutputDecay\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientEth\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"}],\"name\":\"InvalidFeeToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidReactor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoExclusiveOverride\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OrderEndTimeBeforeStartTime\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"filler\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Fill\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldFeeController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newFeeController\",\"type\":\"address\"}],\"name\":\"ProtocolFeeControllerSet\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedOrder\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedOrder[]\",\"name\":\"orders\",\"type\":\"tuple[]\"}],\"name\":\"executeBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedOrder[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"callbackData\",\"type\":\"bytes\"}],\"name\":\"executeBatchWithCallback\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedOrder\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"callbackData\",\"type\":\"bytes\"}],\"name\":\"executeWithCallback\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeController\",\"outputs\":[{\"internalType\":\"contract IProtocolFeeController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permit2\",\"outputs\":[{\"internalType\":\"contract IPermit2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newFeeController\",\"type\":\"address\"}],\"name\":\"setProtocolFeeController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"Fill(bytes32,address,address,uint256)\":{\"params\":{\"filler\":\"The address which executed the fill\",\"nonce\":\"The nonce of the filled order\",\"orderHash\":\"The hash of the order that was filled\",\"swapper\":\"The swapper of the filled order\"}}},\"kind\":\"dev\",\"methods\":{\"execute((bytes,bytes))\":{\"params\":{\"order\":\"The order definition and valid signature to execute\"}},\"executeBatch((bytes,bytes)[])\":{\"params\":{\"orders\":\"The order definitions and valid signatures to execute\"}},\"executeBatchWithCallback((bytes,bytes)[],bytes)\":{\"params\":{\"callbackData\":\"The callbackData to pass to the callback\",\"orders\":\"The order definitions and valid signatures to execute\"}},\"executeWithCallback((bytes,bytes),bytes)\":{\"params\":{\"order\":\"The order definition and valid signature to execute\"}},\"setProtocolFeeController(address)\":{\"details\":\"only callable by the owner\",\"params\":{\"_newFeeController\":\"the new fee controller\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"DeadlineBeforeEndTime()\":[{\"notice\":\"thrown when an order's deadline is before its end time\"}],\"DeadlinePassed()\":[{\"notice\":\"thrown if the order has expired\"}],\"DuplicateFeeOutput(address)\":[{\"notice\":\"thrown if two fee outputs have the same token\"}],\"EndTimeBeforeStartTime()\":[{\"notice\":\"thrown if the endTime of an order is before startTime\"}],\"FeeTooLarge(address,uint256,address)\":[{\"notice\":\"thrown if a given fee output is greater than MAX_FEE_BPS of the order outputs\"}],\"IncorrectAmounts()\":[{\"notice\":\"thrown if the decay direction is incorrect - for DutchInput, startAmount must be less than or equal toendAmount - for DutchOutput, startAmount must be greater than or equal to endAmount\"}],\"InputAndOutputDecay()\":[{\"notice\":\"thrown when an order's inputs and outputs both decay\"}],\"InvalidFeeToken(address)\":[{\"notice\":\"thrown if a fee output token does not have a corresponding non-fee output\"}],\"InvalidReactor()\":[{\"notice\":\"thrown when the order targets a different reactor\"}],\"NativeTransferFailed()\":[{\"notice\":\"Thrown when a native transfer fails\"}],\"NoExclusiveOverride()\":[{\"notice\":\"thrown when an order has strict exclusivity and the filler does not have it\"}],\"OrderEndTimeBeforeStartTime()\":[{\"notice\":\"thrown when an order's end time is before its start time\"}]},\"events\":{\"Fill(bytes32,address,address,uint256)\":{\"notice\":\"emitted when an order is filled\"}},\"kind\":\"user\",\"methods\":{\"execute((bytes,bytes))\":{\"notice\":\"Execute a single order\"},\"executeBatch((bytes,bytes)[])\":{\"notice\":\"Execute the given orders at once\"},\"executeBatchWithCallback((bytes,bytes)[],bytes)\":{\"notice\":\"Execute the given orders at once using a callback with the given callback data\"},\"executeWithCallback((bytes,bytes),bytes)\":{\"notice\":\"Execute a single order using the given callback data\"},\"permit2()\":{\"notice\":\"permit2 address used for token transfers and signature verification\"},\"setProtocolFeeController(address)\":{\"notice\":\"sets the protocol fee controller\"}},\"notice\":\"Reactor for exclusive dutch orders\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/reactors/ExclusiveDutchOrderReactor.sol\":\"ExclusiveDutchOrderReactor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/\",\":solmate/=lib/solmate/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/permit2/src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x78931704a7f1d89ef24244b155863abb751cc3b3818f64303ccb47a396d48dcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8d6e198ee29d809564f1c1d7caa11a2c329bb5d051f61210548e546493444d2\",\"dweb:/ipfs/QmVxWftbgETjudymgLdwF77S54DWrp6qB5ooauKXW81cm7\"]},\"lib/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xea70db68ce450ad38dfbd490058595441144808eb95272ae9b89e3fbe6456954\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fad9ff319665acdc2f1295bb82db3e5b4d52babc0b58f147dbdbb9f322c6e5\",\"dweb:/ipfs/QmTbYJPcux8eJ3qGVYQh6TiwCA2FPu6HXTUg6QFTnX91Ks\"]},\"lib/permit2/src/interfaces/IPermit2.sol\":{\"keccak256\":\"0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d\",\"dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96\"]},\"lib/permit2/src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0x6805563eaad92471fa1b3591a71d7020a93e59f1a4ac95398daf74927f5bd033\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48cd13806cb8e82dcc38eb93423a372fbdd3b05364ecebb8bfd9cd29078dd90c\",\"dweb:/ipfs/QmeLyFVrzKRHcm6aaFFBCG5mFESCqWLp1KYT41H8XhzMCp\"]},\"lib/solmate/src/auth/Owned.sol\":{\"keccak256\":\"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4\",\"dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x6ab948013c2c7ca6351e593600425b0ec6df9035320280c678e735bce16e996b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2ab977d0eeb2bf458f9798250215c646d2f3b1f90b5a7e2b506fdf3335c0f060\",\"dweb:/ipfs/QmYPRoPhNtBAmCSq7imN1scMVpKNQvMTpoqab3tXUx5Tnv\"]},\"src/base/ProtocolFees.sol\":{\"keccak256\":\"0xa6a8588465e1e10db4b85385280b3678ed69ea33d4c740cd54480859cb8c425d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f281c905d6b2114f52136f3b79e0e4ffabbeae2423f6a680a960229a191b2179\",\"dweb:/ipfs/QmWeNkB8r7NaSjPeVoLRQN5fM9pxL3kxERnHjL8RUdgr23\"]},\"src/base/ReactorEvents.sol\":{\"keccak256\":\"0x4e4396c7728ddc1df2547ac4eff9d69479fa1adb3e88356ee7a2b320159add62\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d9d3be49c5bceea7db4cdf87ae83ce6aa75dc15cb01e2c5eb859b458e8f36541\",\"dweb:/ipfs/QmbDZRmZdRC48FCLGYo7EDf5frqGrKof8oNJmgQtsG4ix8\"]},\"src/base/ReactorStructs.sol\":{\"keccak256\":\"0x78e6db322ca69aaf552e59d5e74a00fd465a802388c2d03f9bf4b711f5704588\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://12d8fc82c3543bfe0d2cd44cdbc524bed1f074abafe086f7e58573cbaff2a74e\",\"dweb:/ipfs/QmREbamTn3nz89nEjv2uWHNHKSF6Yga2gQ688Cde89xcNT\"]},\"src/interfaces/IProtocolFeeController.sol\":{\"keccak256\":\"0x21a895ff5b778abf95753001a20b4004adfadd1bba622eaec18eb81836ede86c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://67f9eae1da9f238f6630247882e382458dcc0135c0a4837b99a44a2360a3845c\",\"dweb:/ipfs/QmdJyKhVyD6nAtgdTofaU2xaoWrPGM1Q6Sd7FiN2LxXZQx\"]},\"src/interfaces/IReactor.sol\":{\"keccak256\":\"0x50bbe3534eedf1ebb75b164c38fa63135ef53f7239a2c268008375025eb1f101\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0061477bbe13910c973b3760c061fd68836ecbe7e4c1b1d704bcaf38c669f9b0\",\"dweb:/ipfs/QmNhehD2Uw7uuCFTmgcE134kMmioRzVk9GUFWmBqLD9whX\"]},\"src/interfaces/IReactorCallback.sol\":{\"keccak256\":\"0xf3ee1fe09545fc5be000c33bb6779e897b4e5013bd9de3e7c3107bf466b4dfa1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://12d7fd1ac3dca76614796f0d012ea4de79bf09cf124cc74efffdf25a56756344\",\"dweb:/ipfs/QmXyeSrG7caihgzUZdPdPbbRj6v1w65gBnfn9a7HhbVJX9\"]},\"src/interfaces/IValidationCallback.sol\":{\"keccak256\":\"0xe68fc4f5a2a5029e7f1881d01f5434acbcf0fef2e7ae1945593e01f5414a841e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b53ec74b51802cf75aa32c619da5ce7571ff22d305cb599ac3029ef840319d5b\",\"dweb:/ipfs/QmZjiFHQxv9BqMPSk2u4nF9hrwgmPCW3x5TUaXcK1J2bwj\"]},\"src/lib/CurrencyLibrary.sol\":{\"keccak256\":\"0x2ab6030f590607359825ae18d350850569d26d9d11a91a3e76cd2c4a966c90a6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e9cd60d9e22fe259023f9a25821f9edfa89d1a7a39e0e5517ff052dbff4f6fa3\",\"dweb:/ipfs/QmX5rnLjHWpokvQJzEWmX4eXYirVcv2Y6QsVAXsD3ap5Wq\"]},\"src/lib/DutchDecayLib.sol\":{\"keccak256\":\"0x9420c4b51038982150cb90fb21a3cabd807b6884978dafcf393d17726f12a8de\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4469bd4e6d0fbfd225f3b1ac8b9bc903f3b6d6111de76261435407ca9cf19010\",\"dweb:/ipfs/QmcU2S5sfmYhfMrqtpTnzw8U91w1GSgRaa5oxJAqbdr1Y8\"]},\"src/lib/DutchOrderLib.sol\":{\"keccak256\":\"0xdd6b9bffcc044899fac52e1e9cbe4becc7a40b56d912695e80600224367235e6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://78c08ec074bc21ce610f2e0c3594b383e0cd2301c32239146a771e2e5d2cb975\",\"dweb:/ipfs/QmbMQwT9k3RWyTdihqqnu3RDiRCz1XmpMUVwxeyWzChKB5\"]},\"src/lib/ExclusiveDutchOrderLib.sol\":{\"keccak256\":\"0x3e21caa4af8c032280b5d84a2e673f7d0a7c9b42758c52fef7e669282c445f20\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3cf71f86364d42acb5a3c24c8f21f400975dbd32c19fa3c56ee17dfbb8c9ffb0\",\"dweb:/ipfs/QmURuzWqzfBToKj9u28xXYT4bTHNhNBWJfaj8j8M1jZUx8\"]},\"src/lib/ExclusivityOverrideLib.sol\":{\"keccak256\":\"0xbb9a0624865450412cd3c4c841fc55ef4ee46d26376112b89274f6cad14718c5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7ef62d3c1f9eb4db41d3b9a20c756a24f6b95b232a71b5f560a2ce9817eda544\",\"dweb:/ipfs/Qmf8qZLVNAMbssWqs3yi3NK13arT3Ksk51QbqJSX8UYrA1\"]},\"src/lib/OrderInfoLib.sol\":{\"keccak256\":\"0x38672b528e63dc53f36ed82d0037110a9f5893ad0a3957e24f19fa3fdbd80015\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://147172dbebf4bb579bc392f25666645719264c0b47378f7fc4f3a95c79bdf5a4\",\"dweb:/ipfs/Qmd5wVnQ8rKHHQgUQzEDcAPiqrVzmNr9t2D7d1SqUg9hTo\"]},\"src/lib/Permit2Lib.sol\":{\"keccak256\":\"0x87dc4b4f16ac299a100a4178e5e4f2d02848170d5d02dddc29d64ca94e6d79fb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4a9202605548693224f941462fba6d8537a381a0e40df1ea04e990461fb18507\",\"dweb:/ipfs/Qmcoi27HAXxwWhs8mbC4M5oe9TadRMAN38oSNqtnchTrPC\"]},\"src/lib/ResolvedOrderLib.sol\":{\"keccak256\":\"0x5066dd0888221a2ba0abbab1beb0f63df1de941d0433c1a033a40c778de2680d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://59cd1e1c06467fb3ce957efb04abf0c19b43eb340f96eb36eee0496f6c5c6d08\",\"dweb:/ipfs/QmQLPiyyLvxPd4tHpDezMAkDY2qjy8BBH1sx6pVzaW8utA\"]},\"src/reactors/BaseReactor.sol\":{\"keccak256\":\"0x0433e77626bd56e2121effe738b1c665d920cee43a60b8864642586ffdeb7878\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://81a5553ba6a29f12abb9137d5762d9457b4ec93c744fe1e4e58c173732050142\",\"dweb:/ipfs/QmYKN4BgmBWbMPcaxqBkYNUPACMgKfANHif7BSYFt1f5qF\"]},\"src/reactors/ExclusiveDutchOrderReactor.sol\":{\"keccak256\":\"0x08f90f301426a7e1717ebfc59f349b7d08b75c6f69dced2dd051d879e19317a0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ebb271ff7e58791cabbb0eea163d51c4d87c3d69c7a78ac34d372316465cadc7\",\"dweb:/ipfs/QmSgTSge7EotME4HWhb5uiVCnXUrprTAVUFLBkLU1itkSK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IPermit2",
              "name": "_permit2",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_protocolFeeOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DeadlineBeforeEndTime"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DeadlinePassed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "duplicateToken",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "DuplicateFeeOutput"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EndTimeBeforeStartTime"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "FeeTooLarge"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IncorrectAmounts"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InputAndOutputDecay"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientEth"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "feeToken",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "InvalidFeeToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidReactor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NativeTransferFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoExclusiveOverride"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OrderEndTimeBeforeStartTime"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "orderHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "filler",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "swapper",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Fill",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldFeeController",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newFeeController",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProtocolFeeControllerSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct SignedOrder",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "order",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [
            {
              "internalType": "struct SignedOrder[]",
              "name": "orders",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "order",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "executeBatch"
        },
        {
          "inputs": [
            {
              "internalType": "struct SignedOrder[]",
              "name": "orders",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "order",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "callbackData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "executeBatchWithCallback"
        },
        {
          "inputs": [
            {
              "internalType": "struct SignedOrder",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "order",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "callbackData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "executeWithCallback"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeController",
          "outputs": [
            {
              "internalType": "contract IProtocolFeeController",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "permit2",
          "outputs": [
            {
              "internalType": "contract IPermit2",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newFeeController",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setProtocolFeeController"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "execute((bytes,bytes))": {
            "params": {
              "order": "The order definition and valid signature to execute"
            }
          },
          "executeBatch((bytes,bytes)[])": {
            "params": {
              "orders": "The order definitions and valid signatures to execute"
            }
          },
          "executeBatchWithCallback((bytes,bytes)[],bytes)": {
            "params": {
              "callbackData": "The callbackData to pass to the callback",
              "orders": "The order definitions and valid signatures to execute"
            }
          },
          "executeWithCallback((bytes,bytes),bytes)": {
            "params": {
              "order": "The order definition and valid signature to execute"
            }
          },
          "setProtocolFeeController(address)": {
            "details": "only callable by the owner",
            "params": {
              "_newFeeController": "the new fee controller"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "execute((bytes,bytes))": {
            "notice": "Execute a single order"
          },
          "executeBatch((bytes,bytes)[])": {
            "notice": "Execute the given orders at once"
          },
          "executeBatchWithCallback((bytes,bytes)[],bytes)": {
            "notice": "Execute the given orders at once using a callback with the given callback data"
          },
          "executeWithCallback((bytes,bytes),bytes)": {
            "notice": "Execute a single order using the given callback data"
          },
          "permit2()": {
            "notice": "permit2 address used for token transfers and signature verification"
          },
          "setProtocolFeeController(address)": {
            "notice": "sets the protocol fee controller"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":permit2/=lib/permit2/",
        ":solmate/=lib/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/reactors/ExclusiveDutchOrderReactor.sol": "ExclusiveDutchOrderReactor"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
        "urls": [
          "bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
          "dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IAllowanceTransfer.sol": {
        "keccak256": "0x78931704a7f1d89ef24244b155863abb751cc3b3818f64303ccb47a396d48dcb",
        "urls": [
          "bzz-raw://b8d6e198ee29d809564f1c1d7caa11a2c329bb5d051f61210548e546493444d2",
          "dweb:/ipfs/QmVxWftbgETjudymgLdwF77S54DWrp6qB5ooauKXW81cm7"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IEIP712.sol": {
        "keccak256": "0xea70db68ce450ad38dfbd490058595441144808eb95272ae9b89e3fbe6456954",
        "urls": [
          "bzz-raw://e8fad9ff319665acdc2f1295bb82db3e5b4d52babc0b58f147dbdbb9f322c6e5",
          "dweb:/ipfs/QmTbYJPcux8eJ3qGVYQh6TiwCA2FPu6HXTUg6QFTnX91Ks"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IPermit2.sol": {
        "keccak256": "0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771",
        "urls": [
          "bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d",
          "dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/ISignatureTransfer.sol": {
        "keccak256": "0x6805563eaad92471fa1b3591a71d7020a93e59f1a4ac95398daf74927f5bd033",
        "urls": [
          "bzz-raw://48cd13806cb8e82dcc38eb93423a372fbdd3b05364ecebb8bfd9cd29078dd90c",
          "dweb:/ipfs/QmeLyFVrzKRHcm6aaFFBCG5mFESCqWLp1KYT41H8XhzMCp"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/auth/Owned.sol": {
        "keccak256": "0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea",
        "urls": [
          "bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4",
          "dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843",
        "urls": [
          "bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9",
          "dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x6ab948013c2c7ca6351e593600425b0ec6df9035320280c678e735bce16e996b",
        "urls": [
          "bzz-raw://2ab977d0eeb2bf458f9798250215c646d2f3b1f90b5a7e2b506fdf3335c0f060",
          "dweb:/ipfs/QmYPRoPhNtBAmCSq7imN1scMVpKNQvMTpoqab3tXUx5Tnv"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/base/ProtocolFees.sol": {
        "keccak256": "0xa6a8588465e1e10db4b85385280b3678ed69ea33d4c740cd54480859cb8c425d",
        "urls": [
          "bzz-raw://f281c905d6b2114f52136f3b79e0e4ffabbeae2423f6a680a960229a191b2179",
          "dweb:/ipfs/QmWeNkB8r7NaSjPeVoLRQN5fM9pxL3kxERnHjL8RUdgr23"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/base/ReactorEvents.sol": {
        "keccak256": "0x4e4396c7728ddc1df2547ac4eff9d69479fa1adb3e88356ee7a2b320159add62",
        "urls": [
          "bzz-raw://d9d3be49c5bceea7db4cdf87ae83ce6aa75dc15cb01e2c5eb859b458e8f36541",
          "dweb:/ipfs/QmbDZRmZdRC48FCLGYo7EDf5frqGrKof8oNJmgQtsG4ix8"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/base/ReactorStructs.sol": {
        "keccak256": "0x78e6db322ca69aaf552e59d5e74a00fd465a802388c2d03f9bf4b711f5704588",
        "urls": [
          "bzz-raw://12d8fc82c3543bfe0d2cd44cdbc524bed1f074abafe086f7e58573cbaff2a74e",
          "dweb:/ipfs/QmREbamTn3nz89nEjv2uWHNHKSF6Yga2gQ688Cde89xcNT"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IProtocolFeeController.sol": {
        "keccak256": "0x21a895ff5b778abf95753001a20b4004adfadd1bba622eaec18eb81836ede86c",
        "urls": [
          "bzz-raw://67f9eae1da9f238f6630247882e382458dcc0135c0a4837b99a44a2360a3845c",
          "dweb:/ipfs/QmdJyKhVyD6nAtgdTofaU2xaoWrPGM1Q6Sd7FiN2LxXZQx"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IReactor.sol": {
        "keccak256": "0x50bbe3534eedf1ebb75b164c38fa63135ef53f7239a2c268008375025eb1f101",
        "urls": [
          "bzz-raw://0061477bbe13910c973b3760c061fd68836ecbe7e4c1b1d704bcaf38c669f9b0",
          "dweb:/ipfs/QmNhehD2Uw7uuCFTmgcE134kMmioRzVk9GUFWmBqLD9whX"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IReactorCallback.sol": {
        "keccak256": "0xf3ee1fe09545fc5be000c33bb6779e897b4e5013bd9de3e7c3107bf466b4dfa1",
        "urls": [
          "bzz-raw://12d7fd1ac3dca76614796f0d012ea4de79bf09cf124cc74efffdf25a56756344",
          "dweb:/ipfs/QmXyeSrG7caihgzUZdPdPbbRj6v1w65gBnfn9a7HhbVJX9"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IValidationCallback.sol": {
        "keccak256": "0xe68fc4f5a2a5029e7f1881d01f5434acbcf0fef2e7ae1945593e01f5414a841e",
        "urls": [
          "bzz-raw://b53ec74b51802cf75aa32c619da5ce7571ff22d305cb599ac3029ef840319d5b",
          "dweb:/ipfs/QmZjiFHQxv9BqMPSk2u4nF9hrwgmPCW3x5TUaXcK1J2bwj"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/CurrencyLibrary.sol": {
        "keccak256": "0x2ab6030f590607359825ae18d350850569d26d9d11a91a3e76cd2c4a966c90a6",
        "urls": [
          "bzz-raw://e9cd60d9e22fe259023f9a25821f9edfa89d1a7a39e0e5517ff052dbff4f6fa3",
          "dweb:/ipfs/QmX5rnLjHWpokvQJzEWmX4eXYirVcv2Y6QsVAXsD3ap5Wq"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/DutchDecayLib.sol": {
        "keccak256": "0x9420c4b51038982150cb90fb21a3cabd807b6884978dafcf393d17726f12a8de",
        "urls": [
          "bzz-raw://4469bd4e6d0fbfd225f3b1ac8b9bc903f3b6d6111de76261435407ca9cf19010",
          "dweb:/ipfs/QmcU2S5sfmYhfMrqtpTnzw8U91w1GSgRaa5oxJAqbdr1Y8"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/DutchOrderLib.sol": {
        "keccak256": "0xdd6b9bffcc044899fac52e1e9cbe4becc7a40b56d912695e80600224367235e6",
        "urls": [
          "bzz-raw://78c08ec074bc21ce610f2e0c3594b383e0cd2301c32239146a771e2e5d2cb975",
          "dweb:/ipfs/QmbMQwT9k3RWyTdihqqnu3RDiRCz1XmpMUVwxeyWzChKB5"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/ExclusiveDutchOrderLib.sol": {
        "keccak256": "0x3e21caa4af8c032280b5d84a2e673f7d0a7c9b42758c52fef7e669282c445f20",
        "urls": [
          "bzz-raw://3cf71f86364d42acb5a3c24c8f21f400975dbd32c19fa3c56ee17dfbb8c9ffb0",
          "dweb:/ipfs/QmURuzWqzfBToKj9u28xXYT4bTHNhNBWJfaj8j8M1jZUx8"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/ExclusivityOverrideLib.sol": {
        "keccak256": "0xbb9a0624865450412cd3c4c841fc55ef4ee46d26376112b89274f6cad14718c5",
        "urls": [
          "bzz-raw://7ef62d3c1f9eb4db41d3b9a20c756a24f6b95b232a71b5f560a2ce9817eda544",
          "dweb:/ipfs/Qmf8qZLVNAMbssWqs3yi3NK13arT3Ksk51QbqJSX8UYrA1"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/OrderInfoLib.sol": {
        "keccak256": "0x38672b528e63dc53f36ed82d0037110a9f5893ad0a3957e24f19fa3fdbd80015",
        "urls": [
          "bzz-raw://147172dbebf4bb579bc392f25666645719264c0b47378f7fc4f3a95c79bdf5a4",
          "dweb:/ipfs/Qmd5wVnQ8rKHHQgUQzEDcAPiqrVzmNr9t2D7d1SqUg9hTo"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/Permit2Lib.sol": {
        "keccak256": "0x87dc4b4f16ac299a100a4178e5e4f2d02848170d5d02dddc29d64ca94e6d79fb",
        "urls": [
          "bzz-raw://4a9202605548693224f941462fba6d8537a381a0e40df1ea04e990461fb18507",
          "dweb:/ipfs/Qmcoi27HAXxwWhs8mbC4M5oe9TadRMAN38oSNqtnchTrPC"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/ResolvedOrderLib.sol": {
        "keccak256": "0x5066dd0888221a2ba0abbab1beb0f63df1de941d0433c1a033a40c778de2680d",
        "urls": [
          "bzz-raw://59cd1e1c06467fb3ce957efb04abf0c19b43eb340f96eb36eee0496f6c5c6d08",
          "dweb:/ipfs/QmQLPiyyLvxPd4tHpDezMAkDY2qjy8BBH1sx6pVzaW8utA"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/reactors/BaseReactor.sol": {
        "keccak256": "0x0433e77626bd56e2121effe738b1c665d920cee43a60b8864642586ffdeb7878",
        "urls": [
          "bzz-raw://81a5553ba6a29f12abb9137d5762d9457b4ec93c744fe1e4e58c173732050142",
          "dweb:/ipfs/QmYKN4BgmBWbMPcaxqBkYNUPACMgKfANHif7BSYFt1f5qF"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/reactors/ExclusiveDutchOrderReactor.sol": {
        "keccak256": "0x08f90f301426a7e1717ebfc59f349b7d08b75c6f69dced2dd051d879e19317a0",
        "urls": [
          "bzz-raw://ebb271ff7e58791cabbb0eea163d51c4d87c3d69c7a78ac34d372316465cadc7",
          "dweb:/ipfs/QmSgTSge7EotME4HWhb5uiVCnXUrprTAVUFLBkLU1itkSK"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/reactors/ExclusiveDutchOrderReactor.sol",
    "id": 37878,
    "exportedSymbols": {
      "BaseReactor": [
        37435
      ],
      "DutchDecayLib": [
        36158
      ],
      "DutchInput": [
        36183
      ],
      "DutchOutput": [
        36175
      ],
      "ExclusiveDutchOrder": [
        36394
      ],
      "ExclusiveDutchOrderLib": [
        36494
      ],
      "ExclusiveDutchOrderReactor": [
        37877
      ],
      "ExclusivityOverrideLib": [
        36614
      ],
      "IPermit2": [
        33826
      ],
      "OrderInfo": [
        35436
      ],
      "Permit2Lib": [
        36890
      ],
      "ResolvedOrder": [
        35466
      ],
      "SignedOrder": [
        35471
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:3459:62",
    "nodes": [
      {
        "id": 37644,
        "nodeType": "PragmaDirective",
        "src": "45:23:62",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 37646,
        "nodeType": "ImportDirective",
        "src": "70:46:62",
        "nodes": [],
        "absolutePath": "src/reactors/BaseReactor.sol",
        "file": "./BaseReactor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37878,
        "sourceUnit": 37436,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37645,
              "name": "BaseReactor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37435,
              "src": "78:11:62",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37648,
        "nodeType": "ImportDirective",
        "src": "117:61:62",
        "nodes": [],
        "absolutePath": "lib/permit2/src/interfaces/IPermit2.sol",
        "file": "permit2/src/interfaces/IPermit2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37878,
        "sourceUnit": 33827,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37647,
              "name": "IPermit2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33826,
              "src": "125:8:62",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37650,
        "nodeType": "ImportDirective",
        "src": "179:73:62",
        "nodes": [],
        "absolutePath": "src/lib/ExclusivityOverrideLib.sol",
        "file": "../lib/ExclusivityOverrideLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37878,
        "sourceUnit": 36615,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37649,
              "name": "ExclusivityOverrideLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36614,
              "src": "187:22:62",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37652,
        "nodeType": "ImportDirective",
        "src": "253:49:62",
        "nodes": [],
        "absolutePath": "src/lib/Permit2Lib.sol",
        "file": "../lib/Permit2Lib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37878,
        "sourceUnit": 36891,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37651,
              "name": "Permit2Lib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36890,
              "src": "261:10:62",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37654,
        "nodeType": "ImportDirective",
        "src": "303:55:62",
        "nodes": [],
        "absolutePath": "src/lib/DutchDecayLib.sol",
        "file": "../lib/DutchDecayLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37878,
        "sourceUnit": 36159,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37653,
              "name": "DutchDecayLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36158,
              "src": "311:13:62",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37659,
        "nodeType": "ImportDirective",
        "src": "359:119:62",
        "nodes": [],
        "absolutePath": "src/lib/ExclusiveDutchOrderLib.sol",
        "file": "../lib/ExclusiveDutchOrderLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37878,
        "sourceUnit": 36495,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37655,
              "name": "ExclusiveDutchOrderLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36494,
              "src": "367:22:62",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 37656,
              "name": "ExclusiveDutchOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36394,
              "src": "391:19:62",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 37657,
              "name": "DutchOutput",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36175,
              "src": "412:11:62",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 37658,
              "name": "DutchInput",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36183,
              "src": "425:10:62",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37663,
        "nodeType": "ImportDirective",
        "src": "479:81:62",
        "nodes": [],
        "absolutePath": "src/base/ReactorStructs.sol",
        "file": "../base/ReactorStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37878,
        "sourceUnit": 35472,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37660,
              "name": "SignedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35471,
              "src": "487:11:62",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 37661,
              "name": "ResolvedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35466,
              "src": "500:13:62",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 37662,
              "name": "OrderInfo",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35436,
              "src": "515:9:62",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37877,
        "nodeType": "ContractDefinition",
        "src": "609:2894:62",
        "nodes": [
          {
            "id": 37670,
            "nodeType": "UsingForDirective",
            "src": "666:35:62",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 37667,
              "name": "Permit2Lib",
              "nameLocations": [
                "672:10:62"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36890,
              "src": "672:10:62"
            },
            "typeName": {
              "id": 37669,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37668,
                "name": "ResolvedOrder",
                "nameLocations": [
                  "687:13:62"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 35466,
                "src": "687:13:62"
              },
              "referencedDeclaration": 35466,
              "src": "687:13:62",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ResolvedOrder_$35466_storage_ptr",
                "typeString": "struct ResolvedOrder"
              }
            }
          },
          {
            "id": 37674,
            "nodeType": "UsingForDirective",
            "src": "706:53:62",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 37671,
              "name": "ExclusiveDutchOrderLib",
              "nameLocations": [
                "712:22:62"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36494,
              "src": "712:22:62"
            },
            "typeName": {
              "id": 37673,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37672,
                "name": "ExclusiveDutchOrder",
                "nameLocations": [
                  "739:19:62"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 36394,
                "src": "739:19:62"
              },
              "referencedDeclaration": 36394,
              "src": "739:19:62",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36394_storage_ptr",
                "typeString": "struct ExclusiveDutchOrder"
              }
            }
          },
          {
            "id": 37679,
            "nodeType": "UsingForDirective",
            "src": "764:38:62",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 37675,
              "name": "DutchDecayLib",
              "nameLocations": [
                "770:13:62"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36158,
              "src": "770:13:62"
            },
            "typeName": {
              "baseType": {
                "id": 37677,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 37676,
                  "name": "DutchOutput",
                  "nameLocations": [
                    "788:11:62"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36175,
                  "src": "788:11:62"
                },
                "referencedDeclaration": 36175,
                "src": "788:11:62",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_DutchOutput_$36175_storage_ptr",
                  "typeString": "struct DutchOutput"
                }
              },
              "id": 37678,
              "nodeType": "ArrayTypeName",
              "src": "788:13:62",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_DutchOutput_$36175_storage_$dyn_storage_ptr",
                "typeString": "struct DutchOutput[]"
              }
            }
          },
          {
            "id": 37683,
            "nodeType": "UsingForDirective",
            "src": "807:35:62",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 37680,
              "name": "DutchDecayLib",
              "nameLocations": [
                "813:13:62"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36158,
              "src": "813:13:62"
            },
            "typeName": {
              "id": 37682,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37681,
                "name": "DutchInput",
                "nameLocations": [
                  "831:10:62"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 36183,
                "src": "831:10:62"
              },
              "referencedDeclaration": 36183,
              "src": "831:10:62",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_DutchInput_$36183_storage_ptr",
                "typeString": "struct DutchInput"
              }
            }
          },
          {
            "id": 37687,
            "nodeType": "UsingForDirective",
            "src": "847:47:62",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 37684,
              "name": "ExclusivityOverrideLib",
              "nameLocations": [
                "853:22:62"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36614,
              "src": "853:22:62"
            },
            "typeName": {
              "id": 37686,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37685,
                "name": "ResolvedOrder",
                "nameLocations": [
                  "880:13:62"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 35466,
                "src": "880:13:62"
              },
              "referencedDeclaration": 35466,
              "src": "880:13:62",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ResolvedOrder_$35466_storage_ptr",
                "typeString": "struct ResolvedOrder"
              }
            }
          },
          {
            "id": 37690,
            "nodeType": "ErrorDefinition",
            "src": "971:30:62",
            "nodes": [],
            "documentation": {
              "id": 37688,
              "nodeType": "StructuredDocumentation",
              "src": "900:66:62",
              "text": "@notice thrown when an order's deadline is before its end time"
            },
            "errorSelector": "773a6187",
            "name": "DeadlineBeforeEndTime",
            "nameLocation": "977:21:62",
            "parameters": {
              "id": 37689,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "998:2:62"
            }
          },
          {
            "id": 37693,
            "nodeType": "ErrorDefinition",
            "src": "1080:36:62",
            "nodes": [],
            "documentation": {
              "id": 37691,
              "nodeType": "StructuredDocumentation",
              "src": "1007:68:62",
              "text": "@notice thrown when an order's end time is before its start time"
            },
            "errorSelector": "48fee69c",
            "name": "OrderEndTimeBeforeStartTime",
            "nameLocation": "1086:27:62",
            "parameters": {
              "id": 37692,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1113:2:62"
            }
          },
          {
            "id": 37696,
            "nodeType": "ErrorDefinition",
            "src": "1191:28:62",
            "nodes": [],
            "documentation": {
              "id": 37694,
              "nodeType": "StructuredDocumentation",
              "src": "1122:64:62",
              "text": "@notice thrown when an order's inputs and outputs both decay"
            },
            "errorSelector": "d303758b",
            "name": "InputAndOutputDecay",
            "nameLocation": "1197:19:62",
            "parameters": {
              "id": 37695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1216:2:62"
            }
          },
          {
            "id": 37709,
            "nodeType": "FunctionDefinition",
            "src": "1225:101:62",
            "nodes": [],
            "body": {
              "id": 37708,
              "nodeType": "Block",
              "src": "1324:2:62",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 37704,
                    "name": "_permit2",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37699,
                    "src": "1295:8:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPermit2_$33826",
                      "typeString": "contract IPermit2"
                    }
                  },
                  {
                    "id": 37705,
                    "name": "_protocolFeeOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37701,
                    "src": "1305:17:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 37706,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 37703,
                  "name": "BaseReactor",
                  "nameLocations": [
                    "1283:11:62"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 37435,
                  "src": "1283:11:62"
                },
                "nodeType": "ModifierInvocation",
                "src": "1283:40:62"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 37702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37699,
                  "mutability": "mutable",
                  "name": "_permit2",
                  "nameLocation": "1246:8:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 37709,
                  "src": "1237:17:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPermit2_$33826",
                    "typeString": "contract IPermit2"
                  },
                  "typeName": {
                    "id": 37698,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37697,
                      "name": "IPermit2",
                      "nameLocations": [
                        "1237:8:62"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33826,
                      "src": "1237:8:62"
                    },
                    "referencedDeclaration": 33826,
                    "src": "1237:8:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPermit2_$33826",
                      "typeString": "contract IPermit2"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37701,
                  "mutability": "mutable",
                  "name": "_protocolFeeOwner",
                  "nameLocation": "1264:17:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 37709,
                  "src": "1256:25:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37700,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1256:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1236:46:62"
            },
            "returnParameters": {
              "id": 37707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1324:0:62"
            },
            "scope": 37877,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 37775,
            "nodeType": "FunctionDefinition",
            "src": "1364:731:62",
            "nodes": [],
            "body": {
              "id": 37774,
              "nodeType": "Block",
              "src": "1535:560:62",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    37722
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37722,
                      "mutability": "mutable",
                      "name": "order",
                      "nameLocation": "1572:5:62",
                      "nodeType": "VariableDeclaration",
                      "scope": 37774,
                      "src": "1545:32:62",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36394_memory_ptr",
                        "typeString": "struct ExclusiveDutchOrder"
                      },
                      "typeName": {
                        "id": 37721,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 37720,
                          "name": "ExclusiveDutchOrder",
                          "nameLocations": [
                            "1545:19:62"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36394,
                          "src": "1545:19:62"
                        },
                        "referencedDeclaration": 36394,
                        "src": "1545:19:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36394_storage_ptr",
                          "typeString": "struct ExclusiveDutchOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37730,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 37725,
                          "name": "signedOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37713,
                          "src": "1591:11:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SignedOrder_$35471_calldata_ptr",
                            "typeString": "struct SignedOrder calldata"
                          }
                        },
                        "id": 37726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1603:5:62",
                        "memberName": "order",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35468,
                        "src": "1591:17:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 37727,
                            "name": "ExclusiveDutchOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36394,
                            "src": "1611:19:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_ExclusiveDutchOrder_$36394_storage_ptr_$",
                              "typeString": "type(struct ExclusiveDutchOrder storage pointer)"
                            }
                          }
                        ],
                        "id": 37728,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1610:21:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ExclusiveDutchOrder_$36394_storage_ptr_$",
                          "typeString": "type(struct ExclusiveDutchOrder storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_ExclusiveDutchOrder_$36394_storage_ptr_$",
                          "typeString": "type(struct ExclusiveDutchOrder storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 37723,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1580:3:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 37724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1584:6:62",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1580:10:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 37729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1580:52:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36394_memory_ptr",
                      "typeString": "struct ExclusiveDutchOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1545:87:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37732,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37722,
                        "src": "1657:5:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36394_memory_ptr",
                          "typeString": "struct ExclusiveDutchOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36394_memory_ptr",
                          "typeString": "struct ExclusiveDutchOrder memory"
                        }
                      ],
                      "id": 37731,
                      "name": "_validateOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37876,
                      "src": "1642:14:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_ExclusiveDutchOrder_$36394_memory_ptr_$returns$__$",
                        "typeString": "function (struct ExclusiveDutchOrder memory) pure"
                      }
                    },
                    "id": 37733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1642:21:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37734,
                  "nodeType": "ExpressionStatement",
                  "src": "1642:21:62"
                },
                {
                  "expression": {
                    "id": 37761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37735,
                      "name": "resolvedOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37718,
                      "src": "1674:13:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResolvedOrder_$35466_memory_ptr",
                        "typeString": "struct ResolvedOrder memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 37737,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37722,
                            "src": "1724:5:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36394_memory_ptr",
                              "typeString": "struct ExclusiveDutchOrder memory"
                            }
                          },
                          "id": 37738,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1730:4:62",
                          "memberName": "info",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36378,
                          "src": "1724:10:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderInfo_$35436_memory_ptr",
                            "typeString": "struct OrderInfo memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 37742,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37722,
                                "src": "1773:5:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36394_memory_ptr",
                                  "typeString": "struct ExclusiveDutchOrder memory"
                                }
                              },
                              "id": 37743,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1779:14:62",
                              "memberName": "decayStartTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36380,
                              "src": "1773:20:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 37744,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37722,
                                "src": "1795:5:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36394_memory_ptr",
                                  "typeString": "struct ExclusiveDutchOrder memory"
                                }
                              },
                              "id": 37745,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1801:12:62",
                              "memberName": "decayEndTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36382,
                              "src": "1795:18:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 37739,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37722,
                                "src": "1755:5:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36394_memory_ptr",
                                  "typeString": "struct ExclusiveDutchOrder memory"
                                }
                              },
                              "id": 37740,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1761:5:62",
                              "memberName": "input",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36389,
                              "src": "1755:11:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DutchInput_$36183_memory_ptr",
                                "typeString": "struct DutchInput memory"
                              }
                            },
                            "id": 37741,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1767:5:62",
                            "memberName": "decay",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36157,
                            "src": "1755:17:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_DutchInput_$36183_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_InputToken_$35444_memory_ptr_$attached_to$_t_struct$_DutchInput_$36183_memory_ptr_$",
                              "typeString": "function (struct DutchInput memory,uint256,uint256) view returns (struct InputToken memory)"
                            }
                          },
                          "id": 37746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1755:59:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InputToken_$35444_memory_ptr",
                            "typeString": "struct InputToken memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 37750,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37722,
                                "src": "1857:5:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36394_memory_ptr",
                                  "typeString": "struct ExclusiveDutchOrder memory"
                                }
                              },
                              "id": 37751,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1863:14:62",
                              "memberName": "decayStartTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36380,
                              "src": "1857:20:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 37752,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37722,
                                "src": "1879:5:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36394_memory_ptr",
                                  "typeString": "struct ExclusiveDutchOrder memory"
                                }
                              },
                              "id": 37753,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1885:12:62",
                              "memberName": "decayEndTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36382,
                              "src": "1879:18:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 37747,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37722,
                                "src": "1837:5:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36394_memory_ptr",
                                  "typeString": "struct ExclusiveDutchOrder memory"
                                }
                              },
                              "id": 37748,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1843:7:62",
                              "memberName": "outputs",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36393,
                              "src": "1837:13:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_DutchOutput_$36175_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct DutchOutput memory[] memory"
                              }
                            },
                            "id": 37749,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1851:5:62",
                            "memberName": "decay",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36110,
                            "src": "1837:19:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_DutchOutput_$36175_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_struct$_OutputToken_$35451_memory_ptr_$dyn_memory_ptr_$attached_to$_t_array$_t_struct$_DutchOutput_$36175_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (struct DutchOutput memory[] memory,uint256,uint256) view returns (struct OutputToken memory[] memory)"
                            }
                          },
                          "id": 37754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1837:61:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OutputToken_$35451_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OutputToken memory[] memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 37755,
                            "name": "signedOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37713,
                            "src": "1917:11:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SignedOrder_$35471_calldata_ptr",
                              "typeString": "struct SignedOrder calldata"
                            }
                          },
                          "id": 37756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1929:3:62",
                          "memberName": "sig",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35470,
                          "src": "1917:15:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 37757,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37722,
                              "src": "1952:5:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36394_memory_ptr",
                                "typeString": "struct ExclusiveDutchOrder memory"
                              }
                            },
                            "id": 37758,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1958:4:62",
                            "memberName": "hash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36493,
                            "src": "1952:10:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_ExclusiveDutchOrder_$36394_memory_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_ExclusiveDutchOrder_$36394_memory_ptr_$",
                              "typeString": "function (struct ExclusiveDutchOrder memory) pure returns (bytes32)"
                            }
                          },
                          "id": 37759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1952:12:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_OrderInfo_$35436_memory_ptr",
                            "typeString": "struct OrderInfo memory"
                          },
                          {
                            "typeIdentifier": "t_struct$_InputToken_$35444_memory_ptr",
                            "typeString": "struct InputToken memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_OutputToken_$35451_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct OutputToken memory[] memory"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 37736,
                        "name": "ResolvedOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35466,
                        "src": "1690:13:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ResolvedOrder_$35466_storage_ptr_$",
                          "typeString": "type(struct ResolvedOrder storage pointer)"
                        }
                      },
                      "id": 37760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "1718:4:62",
                        "1748:5:62",
                        "1828:7:62",
                        "1912:3:62",
                        "1946:4:62"
                      ],
                      "names": [
                        "info",
                        "input",
                        "outputs",
                        "sig",
                        "hash"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1690:285:62",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResolvedOrder_$35466_memory_ptr",
                        "typeString": "struct ResolvedOrder memory"
                      }
                    },
                    "src": "1674:301:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$35466_memory_ptr",
                      "typeString": "struct ResolvedOrder memory"
                    }
                  },
                  "id": 37762,
                  "nodeType": "ExpressionStatement",
                  "src": "1674:301:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 37766,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37722,
                          "src": "2014:5:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36394_memory_ptr",
                            "typeString": "struct ExclusiveDutchOrder memory"
                          }
                        },
                        "id": 37767,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2020:15:62",
                        "memberName": "exclusiveFiller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36384,
                        "src": "2014:21:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 37768,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37722,
                          "src": "2037:5:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36394_memory_ptr",
                            "typeString": "struct ExclusiveDutchOrder memory"
                          }
                        },
                        "id": 37769,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2043:14:62",
                        "memberName": "decayStartTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36380,
                        "src": "2037:20:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 37770,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37722,
                          "src": "2059:5:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36394_memory_ptr",
                            "typeString": "struct ExclusiveDutchOrder memory"
                          }
                        },
                        "id": 37771,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2065:22:62",
                        "memberName": "exclusivityOverrideBps",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36386,
                        "src": "2059:28:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 37763,
                        "name": "resolvedOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37718,
                        "src": "1985:13:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$35466_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      },
                      "id": 37765,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1999:14:62",
                      "memberName": "handleOverride",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36585,
                      "src": "1985:28:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_ResolvedOrder_$35466_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$returns$__$attached_to$_t_struct$_ResolvedOrder_$35466_memory_ptr_$",
                        "typeString": "function (struct ResolvedOrder memory,address,uint256,uint256) view"
                      }
                    },
                    "id": 37772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1985:103:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37773,
                  "nodeType": "ExpressionStatement",
                  "src": "1985:103:62"
                }
              ]
            },
            "baseFunctions": [
              37425
            ],
            "documentation": {
              "id": 37710,
              "nodeType": "StructuredDocumentation",
              "src": "1332:27:62",
              "text": "@inheritdoc BaseReactor"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resolve",
            "nameLocation": "1373:7:62",
            "overrides": {
              "id": 37715,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1469:8:62"
            },
            "parameters": {
              "id": 37714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37713,
                  "mutability": "mutable",
                  "name": "signedOrder",
                  "nameLocation": "1402:11:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 37775,
                  "src": "1381:32:62",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SignedOrder_$35471_calldata_ptr",
                    "typeString": "struct SignedOrder"
                  },
                  "typeName": {
                    "id": 37712,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37711,
                      "name": "SignedOrder",
                      "nameLocations": [
                        "1381:11:62"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35471,
                      "src": "1381:11:62"
                    },
                    "referencedDeclaration": 35471,
                    "src": "1381:11:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SignedOrder_$35471_storage_ptr",
                      "typeString": "struct SignedOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1380:34:62"
            },
            "returnParameters": {
              "id": 37719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37718,
                  "mutability": "mutable",
                  "name": "resolvedOrder",
                  "nameLocation": "1516:13:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 37775,
                  "src": "1495:34:62",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResolvedOrder_$35466_memory_ptr",
                    "typeString": "struct ResolvedOrder"
                  },
                  "typeName": {
                    "id": 37717,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37716,
                      "name": "ResolvedOrder",
                      "nameLocations": [
                        "1495:13:62"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35466,
                      "src": "1495:13:62"
                    },
                    "referencedDeclaration": 35466,
                    "src": "1495:13:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$35466_storage_ptr",
                      "typeString": "struct ResolvedOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1494:36:62"
            },
            "scope": 37877,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 37807,
            "nodeType": "FunctionDefinition",
            "src": "2133:350:62",
            "nodes": [],
            "body": {
              "id": 37806,
              "nodeType": "Block",
              "src": "2220:263:62",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 37788,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37779,
                            "src": "2277:5:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolvedOrder_$35466_memory_ptr",
                              "typeString": "struct ResolvedOrder memory"
                            }
                          },
                          "id": 37789,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2283:8:62",
                          "memberName": "toPermit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36868,
                          "src": "2277:14:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_ResolvedOrder_$35466_memory_ptr_$returns$_t_struct$_PermitTransferFrom_$33863_memory_ptr_$attached_to$_t_struct$_ResolvedOrder_$35466_memory_ptr_$",
                            "typeString": "function (struct ResolvedOrder memory) pure returns (struct ISignatureTransfer.PermitTransferFrom memory)"
                          }
                        },
                        "id": 37790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2277:16:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PermitTransferFrom_$33863_memory_ptr",
                          "typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 37793,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37781,
                            "src": "2329:2:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 37791,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37779,
                            "src": "2307:5:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolvedOrder_$35466_memory_ptr",
                              "typeString": "struct ResolvedOrder memory"
                            }
                          },
                          "id": 37792,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2313:15:62",
                          "memberName": "transferDetails",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36889,
                          "src": "2307:21:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_ResolvedOrder_$35466_memory_ptr_$_t_address_$returns$_t_struct$_SignatureTransferDetails_$33868_memory_ptr_$attached_to$_t_struct$_ResolvedOrder_$35466_memory_ptr_$",
                            "typeString": "function (struct ResolvedOrder memory,address) pure returns (struct ISignatureTransfer.SignatureTransferDetails memory)"
                          }
                        },
                        "id": 37794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2307:25:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignatureTransferDetails_$33868_memory_ptr",
                          "typeString": "struct ISignatureTransfer.SignatureTransferDetails memory"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 37795,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37779,
                            "src": "2346:5:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolvedOrder_$35466_memory_ptr",
                              "typeString": "struct ResolvedOrder memory"
                            }
                          },
                          "id": 37796,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2352:4:62",
                          "memberName": "info",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35454,
                          "src": "2346:10:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderInfo_$35436_memory_ptr",
                            "typeString": "struct OrderInfo memory"
                          }
                        },
                        "id": 37797,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2357:7:62",
                        "memberName": "swapper",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35426,
                        "src": "2346:18:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 37798,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37779,
                          "src": "2378:5:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolvedOrder_$35466_memory_ptr",
                            "typeString": "struct ResolvedOrder memory"
                          }
                        },
                        "id": 37799,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2384:4:62",
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35465,
                        "src": "2378:10:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 37800,
                          "name": "ExclusiveDutchOrderLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36494,
                          "src": "2402:22:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ExclusiveDutchOrderLib_$36494_$",
                            "typeString": "type(library ExclusiveDutchOrderLib)"
                          }
                        },
                        "id": 37801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2425:18:62",
                        "memberName": "PERMIT2_ORDER_TYPE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36451,
                        "src": "2402:41:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 37802,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37779,
                          "src": "2457:5:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolvedOrder_$35466_memory_ptr",
                            "typeString": "struct ResolvedOrder memory"
                          }
                        },
                        "id": 37803,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2463:3:62",
                        "memberName": "sig",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35463,
                        "src": "2457:9:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PermitTransferFrom_$33863_memory_ptr",
                          "typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_SignatureTransferDetails_$33868_memory_ptr",
                          "typeString": "struct ISignatureTransfer.SignatureTransferDetails memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 37785,
                        "name": "permit2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37017,
                        "src": "2230:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPermit2_$33826",
                          "typeString": "contract IPermit2"
                        }
                      },
                      "id": 37787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2238:25:62",
                      "memberName": "permitWitnessTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33919,
                      "src": "2230:33:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_PermitTransferFrom_$33863_memory_ptr_$_t_struct$_SignatureTransferDetails_$33868_memory_ptr_$_t_address_$_t_bytes32_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (struct ISignatureTransfer.PermitTransferFrom memory,struct ISignatureTransfer.SignatureTransferDetails memory,address,bytes32,string memory,bytes memory) external"
                      }
                    },
                    "id": 37804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2230:246:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37805,
                  "nodeType": "ExpressionStatement",
                  "src": "2230:246:62"
                }
              ]
            },
            "baseFunctions": [
              37434
            ],
            "documentation": {
              "id": 37776,
              "nodeType": "StructuredDocumentation",
              "src": "2101:27:62",
              "text": "@inheritdoc BaseReactor"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferInputTokens",
            "nameLocation": "2142:19:62",
            "overrides": {
              "id": 37783,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2211:8:62"
            },
            "parameters": {
              "id": 37782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37779,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "2183:5:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 37807,
                  "src": "2162:26:62",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResolvedOrder_$35466_memory_ptr",
                    "typeString": "struct ResolvedOrder"
                  },
                  "typeName": {
                    "id": 37778,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37777,
                      "name": "ResolvedOrder",
                      "nameLocations": [
                        "2162:13:62"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35466,
                      "src": "2162:13:62"
                    },
                    "referencedDeclaration": 35466,
                    "src": "2162:13:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$35466_storage_ptr",
                      "typeString": "struct ResolvedOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37781,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2198:2:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 37807,
                  "src": "2190:10:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37780,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2190:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2161:40:62"
            },
            "returnParameters": {
              "id": 37784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2220:0:62"
            },
            "scope": 37877,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 37876,
            "nodeType": "FunctionDefinition",
            "src": "2832:669:62",
            "nodes": [],
            "body": {
              "id": 37875,
              "nodeType": "Block",
              "src": "2904:597:62",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 37819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "id": 37814,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37811,
                          "src": "2918:5:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36394_memory_ptr",
                            "typeString": "struct ExclusiveDutchOrder memory"
                          }
                        },
                        "id": 37815,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2924:4:62",
                        "memberName": "info",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36378,
                        "src": "2918:10:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderInfo_$35436_memory_ptr",
                          "typeString": "struct OrderInfo memory"
                        }
                      },
                      "id": 37816,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2929:8:62",
                      "memberName": "deadline",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35430,
                      "src": "2918:19:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 37817,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37811,
                        "src": "2940:5:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36394_memory_ptr",
                          "typeString": "struct ExclusiveDutchOrder memory"
                        }
                      },
                      "id": 37818,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2946:12:62",
                      "memberName": "decayEndTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36382,
                      "src": "2940:18:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2918:40:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37824,
                  "nodeType": "IfStatement",
                  "src": "2914:101:62",
                  "trueBody": {
                    "id": 37823,
                    "nodeType": "Block",
                    "src": "2960:55:62",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 37820,
                            "name": "DeadlineBeforeEndTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37690,
                            "src": "2981:21:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 37821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2981:23:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37822,
                        "nodeType": "RevertStatement",
                        "src": "2974:30:62"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 37829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 37825,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37811,
                        "src": "3029:5:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36394_memory_ptr",
                          "typeString": "struct ExclusiveDutchOrder memory"
                        }
                      },
                      "id": 37826,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3035:12:62",
                      "memberName": "decayEndTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36382,
                      "src": "3029:18:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 37827,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37811,
                        "src": "3050:5:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36394_memory_ptr",
                          "typeString": "struct ExclusiveDutchOrder memory"
                        }
                      },
                      "id": 37828,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3056:14:62",
                      "memberName": "decayStartTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36380,
                      "src": "3050:20:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3029:41:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37834,
                  "nodeType": "IfStatement",
                  "src": "3025:108:62",
                  "trueBody": {
                    "id": 37833,
                    "nodeType": "Block",
                    "src": "3072:61:62",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 37830,
                            "name": "OrderEndTimeBeforeStartTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37693,
                            "src": "3093:27:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 37831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3093:29:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37832,
                        "nodeType": "RevertStatement",
                        "src": "3086:36:62"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 37841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "id": 37835,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37811,
                          "src": "3147:5:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36394_memory_ptr",
                            "typeString": "struct ExclusiveDutchOrder memory"
                          }
                        },
                        "id": 37836,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3153:5:62",
                        "memberName": "input",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36389,
                        "src": "3147:11:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DutchInput_$36183_memory_ptr",
                          "typeString": "struct DutchInput memory"
                        }
                      },
                      "id": 37837,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3159:11:62",
                      "memberName": "startAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36180,
                      "src": "3147:23:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 37838,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37811,
                          "src": "3174:5:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36394_memory_ptr",
                            "typeString": "struct ExclusiveDutchOrder memory"
                          }
                        },
                        "id": 37839,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3180:5:62",
                        "memberName": "input",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36389,
                        "src": "3174:11:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DutchInput_$36183_memory_ptr",
                          "typeString": "struct DutchInput memory"
                        }
                      },
                      "id": 37840,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3186:9:62",
                      "memberName": "endAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36182,
                      "src": "3174:21:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3147:48:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37874,
                  "nodeType": "IfStatement",
                  "src": "3143:352:62",
                  "trueBody": {
                    "id": 37873,
                    "nodeType": "Block",
                    "src": "3197:298:62",
                    "statements": [
                      {
                        "id": 37872,
                        "nodeType": "UncheckedBlock",
                        "src": "3211:274:62",
                        "statements": [
                          {
                            "body": {
                              "id": 37870,
                              "nodeType": "Block",
                              "src": "3290:181:62",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 37864,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "expression": {
                                            "id": 37854,
                                            "name": "order",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 37811,
                                            "src": "3316:5:62",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36394_memory_ptr",
                                              "typeString": "struct ExclusiveDutchOrder memory"
                                            }
                                          },
                                          "id": 37855,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "3322:7:62",
                                          "memberName": "outputs",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 36393,
                                          "src": "3316:13:62",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_DutchOutput_$36175_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct DutchOutput memory[] memory"
                                          }
                                        },
                                        "id": 37857,
                                        "indexExpression": {
                                          "id": 37856,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 37843,
                                          "src": "3330:1:62",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "3316:16:62",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_DutchOutput_$36175_memory_ptr",
                                          "typeString": "struct DutchOutput memory"
                                        }
                                      },
                                      "id": 37858,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3333:11:62",
                                      "memberName": "startAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 36170,
                                      "src": "3316:28:62",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "expression": {
                                            "id": 37859,
                                            "name": "order",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 37811,
                                            "src": "3348:5:62",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36394_memory_ptr",
                                              "typeString": "struct ExclusiveDutchOrder memory"
                                            }
                                          },
                                          "id": 37860,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "3354:7:62",
                                          "memberName": "outputs",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 36393,
                                          "src": "3348:13:62",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_DutchOutput_$36175_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct DutchOutput memory[] memory"
                                          }
                                        },
                                        "id": 37862,
                                        "indexExpression": {
                                          "id": 37861,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 37843,
                                          "src": "3362:1:62",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "3348:16:62",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_DutchOutput_$36175_memory_ptr",
                                          "typeString": "struct DutchOutput memory"
                                        }
                                      },
                                      "id": 37863,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3365:9:62",
                                      "memberName": "endAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 36172,
                                      "src": "3348:26:62",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3316:58:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 37869,
                                  "nodeType": "IfStatement",
                                  "src": "3312:141:62",
                                  "trueBody": {
                                    "id": 37868,
                                    "nodeType": "Block",
                                    "src": "3376:77:62",
                                    "statements": [
                                      {
                                        "errorCall": {
                                          "arguments": [],
                                          "expression": {
                                            "argumentTypes": [],
                                            "id": 37865,
                                            "name": "InputAndOutputDecay",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 37696,
                                            "src": "3409:19:62",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                              "typeString": "function () pure"
                                            }
                                          },
                                          "id": 37866,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3409:21:62",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 37867,
                                        "nodeType": "RevertStatement",
                                        "src": "3402:28:62"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 37850,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 37846,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37843,
                                "src": "3259:1:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 37847,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 37811,
                                    "src": "3263:5:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36394_memory_ptr",
                                      "typeString": "struct ExclusiveDutchOrder memory"
                                    }
                                  },
                                  "id": 37848,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3269:7:62",
                                  "memberName": "outputs",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 36393,
                                  "src": "3263:13:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_DutchOutput_$36175_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct DutchOutput memory[] memory"
                                  }
                                },
                                "id": 37849,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3277:6:62",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "3263:20:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3259:24:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 37871,
                            "initializationExpression": {
                              "assignments": [
                                37843
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 37843,
                                  "mutability": "mutable",
                                  "name": "i",
                                  "nameLocation": "3252:1:62",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 37871,
                                  "src": "3244:9:62",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 37842,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3244:7:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 37845,
                              "initialValue": {
                                "hexValue": "30",
                                "id": 37844,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3256:1:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3244:13:62"
                            },
                            "loopExpression": {
                              "expression": {
                                "id": 37852,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "3285:3:62",
                                "subExpression": {
                                  "id": 37851,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37843,
                                  "src": "3285:1:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 37853,
                              "nodeType": "ExpressionStatement",
                              "src": "3285:3:62"
                            },
                            "nodeType": "ForStatement",
                            "src": "3239:232:62"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 37808,
              "nodeType": "StructuredDocumentation",
              "src": "2489:338:62",
              "text": "@notice validate the dutch order fields\n - deadline must be greater than or equal than decayEndTime\n - decayEndTime must be greater than or equal to decayStartTime\n - if there's input decay, outputs must not decay\n - for input decay, startAmount must < endAmount\n @dev Throws if the order is invalid"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validateOrder",
            "nameLocation": "2841:14:62",
            "parameters": {
              "id": 37812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37811,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "2883:5:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 37876,
                  "src": "2856:32:62",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36394_memory_ptr",
                    "typeString": "struct ExclusiveDutchOrder"
                  },
                  "typeName": {
                    "id": 37810,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37809,
                      "name": "ExclusiveDutchOrder",
                      "nameLocations": [
                        "2856:19:62"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36394,
                      "src": "2856:19:62"
                    },
                    "referencedDeclaration": 36394,
                    "src": "2856:19:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExclusiveDutchOrder_$36394_storage_ptr",
                      "typeString": "struct ExclusiveDutchOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2855:34:62"
            },
            "returnParameters": {
              "id": 37813,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2904:0:62"
            },
            "scope": 37877,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 37665,
              "name": "BaseReactor",
              "nameLocations": [
                "648:11:62"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37435,
              "src": "648:11:62"
            },
            "id": 37666,
            "nodeType": "InheritanceSpecifier",
            "src": "648:11:62"
          }
        ],
        "canonicalName": "ExclusiveDutchOrderReactor",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 37664,
          "nodeType": "StructuredDocumentation",
          "src": "562:47:62",
          "text": "@notice Reactor for exclusive dutch orders"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          37877,
          37435,
          29963,
          35398,
          34022,
          35413,
          35610
        ],
        "name": "ExclusiveDutchOrderReactor",
        "nameLocation": "618:26:62",
        "scope": 37878,
        "usedErrors": [
          35112,
          35121,
          35126,
          35795,
          35914,
          35917,
          36508,
          36899,
          36902,
          37013,
          37690,
          37693,
          37696
        ]
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 62
}